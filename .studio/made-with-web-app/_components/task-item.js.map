{
  "version": 3,
  "sources": ["<stdin>"],
  "sourcesContent": ["// TODO: how to mutate todo, and update this item only?\r\n// TODO: what happens if you have filter? and todos?\r\n// TODO: text vs intl-text... e.g. need to render the todo title!\r\n\r\nexport default function component(props) {\r\n  const { todo } = props;\r\n\r\n  const title = view.state(todo.title);\r\n  const completed = view.state(todo.completed);\r\n\r\n  // const toggleCompleted = (id) => () => {\r\n  //   // NOTE: this doesn't work\r\n  //   // const todo = todos.value.find((todo) => todo.id === id);\r\n  //   // todo.completed = !todo.completed;\r\n  //   // NOTE: this work but rerenders the whole iteration again\r\n  //   // todos.value = todos.value.map((todo) => {\r\n  //   //   if (todo.id === id) {\r\n  //   //     todo.completed = !todo.completed;\r\n  //   //   }\r\n  //   //   return todo;\r\n  //   // });\r\n  //   // NOTE: proxy object here - doesn't work\r\n  //   // const index = todos.value.findIndex((todo) => todo.id === id);\r\n  //   // todos.value[index].completed = !todos.value[index].completed;\r\n  // };\r\n\r\n  return (\r\n    <list-item\r\n      onPress={() => (completed.value = !completed.value)}\r\n      style={{\r\n        textDecoration: completed.value ? \"line-through\" : \"none\",\r\n      }}\r\n    >\r\n      <text value={title} />\r\n    </list-item>\r\n  );\r\n}\r\n"],
  "mappings": "AAIA,wBAAwBA,EAAUC,EAAO,CACvC,KAAM,CAAE,KAAAC,CAAK,EAAID,EAEXE,EAAQ,uBAAK,MAAMD,EAAK,KAAK,EAC7BE,EAAY,uBAAK,MAAMF,EAAK,SAAS,EAkB3C,OACE,uCAAC,aACC,QAAS,IAAOE,EAAU,MAAQ,CAACA,EAAU,MAC7C,MAAO,CACL,eAAgBA,EAAU,MAAQ,eAAiB,MACrD,GAEA,uCAAC,QAAK,MAAOD,EAAO,CACtB,CAEJ",
  "names": ["component", "props", "todo", "title", "completed"]
}
