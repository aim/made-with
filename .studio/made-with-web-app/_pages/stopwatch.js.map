{
  "version": 3,
  "sources": ["<stdin>"],
  "sourcesContent": ["export default function page() {\r\n  const milliseconds = view.state(0);\r\n  const isStarted = view.state(false);\r\n  const isPaused = view.state(false);\r\n  const intervalId = view.state(null);\r\n\r\n  const formatted = view.state(() => {\r\n    const currentMs = milliseconds.value;\r\n    const mins = Math.floor(currentMs / 60000)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    const secs = Math.floor((currentMs % 60000) / 1000)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    const ms = Math.floor((currentMs % 1000) / 10)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    return `${mins}:${secs}:${ms}`;\r\n  });\r\n\r\n  const start = () => {\r\n    if (!isStarted.value) {\r\n      isStarted.value = true;\r\n      isPaused.value = false;\r\n      intervalId.value = setInterval(() => {\r\n        milliseconds.value += 10;\r\n      }, 10);\r\n    }\r\n  };\r\n\r\n  const pause = () => {\r\n    if (isStarted.value) {\r\n      isPaused.value = true;\r\n      isStarted.value = false;\r\n      clearInterval(intervalId.value);\r\n      intervalId.value = null;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    isStarted.value = false;\r\n    isPaused.value = false;\r\n    milliseconds.value = 0;\r\n    if (intervalId.value) {\r\n      clearInterval(intervalId.value);\r\n      intervalId.value = null;\r\n    }\r\n  };\r\n\r\n  const unmount = () => {\r\n    if (intervalId.value) {\r\n      clearInterval(intervalId.value);\r\n    }\r\n    milliseconds.destroy();\r\n    isStarted.destroy();\r\n    isPaused.destroy();\r\n    intervalId.destroy();\r\n    formatted.destroy();\r\n  };\r\n\r\n  return (\r\n    <area\r\n      style={{\r\n        size: \"full\",\r\n        displayType: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        gutter: \"large\",\r\n        cornerRadius: \"large\",\r\n        backgroundColor: \"surface-fill-lowest-emphasis\",\r\n      }}\r\n      onUnmount={unmount}\r\n    >\r\n      <heading level='2'>\r\n        <text value={formatted} />\r\n      </heading>\r\n      <area\r\n        style={{\r\n          displayType: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <icon-button name='play' onPress={start} disabled={isStarted} />\r\n        <separator orientation='vertical' />\r\n        <icon-button name='pause' onPress={pause} disabled={isPaused} />\r\n        <separator orientation='vertical' />\r\n        <icon-button name='refresh' onPress={reset} />\r\n      </area>\r\n    </area>\r\n  );\r\n}\r\n"],
  "mappings": "AAAA,wBAAwBA,GAAO,CAC7B,MAAMC,EAAe,uBAAK,MAAM,CAAC,EAC3BC,EAAY,uBAAK,MAAM,EAAK,EAC5BC,EAAW,uBAAK,MAAM,EAAK,EAC3BC,EAAa,uBAAK,MAAM,IAAI,EAE5BC,EAAY,uBAAK,MAAM,IAAM,CACjC,MAAMC,EAAYL,EAAa,MACzBM,EAAO,KAAK,MAAMD,EAAY,GAAK,EACtC,SAAS,EACT,SAAS,EAAG,GAAG,EACZE,EAAO,KAAK,MAAOF,EAAY,IAAS,GAAI,EAC/C,SAAS,EACT,SAAS,EAAG,GAAG,EACZG,EAAK,KAAK,MAAOH,EAAY,IAAQ,EAAE,EAC1C,SAAS,EACT,SAAS,EAAG,GAAG,EAClB,MAAO,GAAGC,CAAI,IAAIC,CAAI,IAAIC,CAAE,EAC9B,CAAC,EA0CD,OACE,uCAAC,QACC,MAAO,CACL,KAAM,OACN,YAAa,OACb,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,OAAQ,QACR,aAAc,QACd,gBAAiB,8BACnB,EACA,UAvBY,IAAM,CAChBL,EAAW,OACb,cAAcA,EAAW,KAAK,EAEhCH,EAAa,QAAQ,EACrBC,EAAU,QAAQ,EAClBC,EAAS,QAAQ,EACjBC,EAAW,QAAQ,EACnBC,EAAU,QAAQ,CACpB,GAgBI,uCAAC,WAAQ,MAAM,KACb,uCAAC,QAAK,MAAOA,EAAW,CAC1B,EACA,uCAAC,QACC,MAAO,CACL,YAAa,OACb,eAAgB,SAChB,WAAY,QACd,GAEA,uCAAC,eAAY,KAAK,OAAO,QAhEjB,IAAM,CACbH,EAAU,QACbA,EAAU,MAAQ,GAClBC,EAAS,MAAQ,GACjBC,EAAW,MAAQ,YAAY,IAAM,CACnCH,EAAa,OAAS,EACxB,EAAG,EAAE,EAET,EAwD+C,SAAUC,EAAW,EAC9D,uCAAC,aAAU,YAAY,WAAW,EAClC,uCAAC,eAAY,KAAK,QAAQ,QAxDlB,IAAM,CACdA,EAAU,QACZC,EAAS,MAAQ,GACjBD,EAAU,MAAQ,GAClB,cAAcE,EAAW,KAAK,EAC9BA,EAAW,MAAQ,KAEvB,EAiDgD,SAAUD,EAAU,EAC9D,uCAAC,aAAU,YAAY,WAAW,EAClC,uCAAC,eAAY,KAAK,UAAU,QAjDpB,IAAM,CAClBD,EAAU,MAAQ,GAClBC,EAAS,MAAQ,GACjBF,EAAa,MAAQ,EACjBG,EAAW,QACb,cAAcA,EAAW,KAAK,EAC9BA,EAAW,MAAQ,KAEvB,EAyCkD,CAC9C,CACF,CAEJ",
  "names": ["page", "milliseconds", "isStarted", "isPaused", "intervalId", "formatted", "currentMs", "mins", "secs", "ms"]
}
