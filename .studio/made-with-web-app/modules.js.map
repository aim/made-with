{
  "version": 3,
  "sources": ["../../../foundation/modules/apis/assertion-error.js", "../../../foundation/modules/apis/assert.js", "../../../foundation/modules/apis/config-manager.js", "../../../foundation/modules/apis/environment.js", "../../../foundation/modules/apis/get-document.js", "../../../foundation/modules/apis/create-element.js", "../../../foundation/modules/apis/get-window.js", "../../../foundation/modules/apis/error-manager.js", "../../../foundation/modules/apis/resource-manager.js", "../../../foundation/modules/apis/get-mapping.js", "../../../foundation/modules/apis/query-selector.js", "../../../foundation/modules/apis/mutation-observer.js", "../../../foundation/modules/apis/resize-observer.js", "../../../foundation/modules/apis/event-manager.js", "../../../foundation/modules/apis/generate-id.js", "../../../foundation/modules/apis/get-active-element.js", "../../../foundation/modules/apis/get-closing-html-tag.js", "../../../foundation/modules/apis/get-closing-svg-tag.js", "../../../foundation/modules/apis/get-var.js", "../../../foundation/modules/apis/get-color-value.js", "../../../foundation/modules/apis/get-computed-style.js", "../../../foundation/modules/apis/get-computed-style-property.js", "../../../foundation/modules/apis/get-definitions.js", "../../../foundation/modules/apis/get-element-by-id.js", "../../../foundation/modules/apis/get-aria-attributes.js", "../../../foundation/modules/apis/get-control-attributes.js", "../../../foundation/modules/apis/get-data-attributes.js", "../../../foundation/modules/utils/convert-camel-to-kebab-case.js", "../../../foundation/modules/utils/debounce.js", "../../../foundation/modules/utils/get-object-size.js", "../../../foundation/modules/utils/debug-state.js", "../../../foundation/modules/utils/index.js", "../../../foundation/modules/apis/get-px-value.js", "../../../foundation/modules/apis/get-space-value.js", "../../../foundation/modules/apis/create-murmur-hash.js", "../../../foundation/modules/apis/create-short-hash.js", "../../../foundation/modules/apis/generate-class-name.js", "../../../foundation/modules/apis/style-manager.js", "../../../foundation/modules/apis/get-style-attributes.js", "../../../foundation/modules/apis/get-attributes.js", "../../../foundation/modules/apis/get-opening-html-tag.js", "../../../foundation/modules/apis/get-opening-svg-tag.js", "../../../foundation/modules/apis/get-token-value.js", "../../../foundation/modules/apis/import-manager.js", "../../../foundation/modules/apis/modal-manager.js", "../../../foundation/modules/apis/clone-object.js", "../../../foundation/modules/apis/reactive-value.js", "../../../foundation/modules/apis/route-manager.js", "../../../foundation/modules/apis/state-manager.js", "../../../foundation/modules/apis/get-token-key.js", "../../../foundation/modules/apis/user-manager.js", "../../../foundation/modules/apis/window-manager.js", "../../../foundation/modules/apis/load-manager.js", "../../../foundation/modules/apis/query-selector-all.js", "../../../foundation/modules/apis/request-transition-end.js", "../../../foundation/modules/apis/store-manager.js", "../../../foundation/modules/core/get-resources.js", "../../../foundation/modules/core/get-reactive-style-props.js", "../../../foundation/modules/core/is-primitive.js", "../../../foundation/modules/core/map-reactive-value-to-value.js", "../../../foundation/modules/core/map-deep-reactive-value-to-value.js", "../../../foundation/modules/core/group-props.js", "../../../foundation/modules/core/get-children.js", "../../../foundation/modules/core/get-lazy-loading-pointer.js", "../../../foundation/modules/core/inject-lazy-loading-id.js", "../../../foundation/modules/core/import-module.js", "../../../foundation/modules/core/wait-element.js", "../../../foundation/modules/core/mount-lazy-component.js", "../../../foundation/modules/core/render-component.js", "../../../foundation/modules/core/get-control-flow-pointer.js", "../../../foundation/modules/core/get-props.js", "../../../foundation/modules/core/inject-control-flow-id.js", "../../../foundation/modules/core/render-iteration-primitive.js", "../../../foundation/modules/core/get-reactive-pointer.js", "../../../foundation/modules/core/get-icon.js", "../../../foundation/modules/core/get-merged-style.js", "../../../foundation/modules/core/get-role-from-type.js", "../../../foundation/modules/core/get-tag-from-type.js", "../../../foundation/modules/core/get-text-translation.js", "../../../foundation/modules/core/get-utility-class.js", "../../../foundation/modules/core/set-class-attribute.js", "../../../foundation/modules/core/set-style-attribute.js", "../../../foundation/modules/core/renderer-utils.js", "../../../foundation/modules/core/render-primitive.js", "../../../foundation/modules/core/render-selection-primitive.js", "../../../foundation/modules/core/create-component.js", "../../../foundation/modules/core/create-fragment.js", "../../../foundation/modules/core/render-layouts.js", "../../../foundation/modules/core/render-page.js", "../../../foundation/modules/core/render.js", "../../../foundation/modules/core/set-resources.js", "../../../foundation/modules/core/index.js", "../../../foundation/modules/data/index.js", "../../../foundation/modules/user/get-preferences.js", "../../../foundation/modules/user/login.js", "../../../foundation/modules/user/logout.js", "../../../foundation/modules/user/index.js", "../../../foundation/modules/view/close.js", "../../../foundation/modules/view/create-dialog.js", "../../../foundation/modules/view/create-field.js", "../../../foundation/modules/view/create-state.js", "../../../foundation/modules/view/create-form.js", "../../../foundation/modules/view/create-sheet.js", "../../../foundation/modules/view/get-config.js", "../../../foundation/modules/view/get-location.js", "../../../foundation/modules/view/get-scroll.js", "../../../foundation/modules/view/get-size.js", "../../../foundation/modules/view/get-store.js", "../../../foundation/modules/view/navigate-to.js", "../../../foundation/modules/view/open.js", "../../../foundation/modules/view/resize-by.js", "../../../foundation/modules/view/resize-to.js", "../../../foundation/modules/view/scroll-by.js", "../../../foundation/modules/view/scroll-into.js", "../../../foundation/modules/view/scroll-to.js", "../../../foundation/modules/view/setup.js", "../../../foundation/modules/view/index.js", "../../../foundation/exports/gui.js"],
  "sourcesContent": ["/**\r\n * Custom error class for assertion failures\r\n * @class AssertionError\r\n * @extends {Error}\r\n */\r\nexport default class AssertionError extends Error {\r\n  /**\r\n   * Creates an instance of AssertionError\r\n   * @param {string} [message=\"\"] - The error message\r\n   */\r\n  constructor(message = \"\") {\r\n    super(message);\r\n    this.name = \"AssertionError\";\r\n  }\r\n}\r\n", "import AssertionError from \"./assertion-error.js\";\r\n\r\n// NOTE: can do assert.isSomething... for validations or shared validators\r\n// NOTE: or assert is isomorphic...\r\n\r\n/**\r\n * Validates that a condition is truthy, throws an error if the condition is falsy\r\n * @param {boolean} [condition=false] - The condition to validate\r\n * @param {string} [message=\"\"] - The error message to throw if condition is falsy\r\n * @throws {AssertionError} Throws when condition is falsy\r\n */\r\nexport default function assert(condition = false, message = \"\") {\r\n  if (!condition) throw new AssertionError(message);\r\n}\r\n", "class ConfigManager {\r\n  #config = {};\r\n\r\n  setConfig(object = {}) {\r\n    this.#config = Object.freeze(object);\r\n  }\r\n\r\n  getConfig() {\r\n    if (!Object.isFrozen(this.#config)) {\r\n      throw new Error(\"Call view.setup() before view.config()\");\r\n    }\r\n    return this.#config;\r\n  }\r\n}\r\n\r\nexport default new ConfigManager();\r\n", "/**\r\n * Environment variables for the application\r\n * @namespace environment\r\n * @property {boolean} client - Whether the code is running in a browser environment\r\n * @property {boolean} native - Whether the code is running in a Tauri native environment\r\n */\r\nexport default {\r\n  client: typeof window !== \"undefined\",\r\n  native: typeof window !== \"undefined\" && !!window.__TAURI__,\r\n};\r\n", "import environment from \"./environment.js\";\r\n\r\n/**\r\n * Gets the document object if in client environment\r\n * @returns {Document|null} The window object or null if not in client environment\r\n */\r\nexport default function getDocument() {\r\n  return environment.client ? document : null;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport AssertionError from \"./assertion-error.js\";\r\nimport getDocument from \"./get-document.js\";\r\n\r\n// TODO: list of supported tags\r\n\r\n/**\r\n * Creates a DOM element with the specified tag\r\n * @param {string} [tag=\"div\"] - The HTML tag name to create\r\n * @returns {HTMLElement|null} The created DOM element or null if not in client environment\r\n * @throws {AssertionError} When tag parameter is missing or not a non-empty string\r\n */\r\nexport default function createElement(tag = \"div\") {\r\n  assert(tag, \"apis.createElement (tag) is required\");\r\n  assert(\r\n    typeof tag === \"string\" && tag !== \"\",\r\n    \"apis.createElement (tag) must be a non-empty string\",\r\n  );\r\n\r\n  const document = getDocument();\r\n  return document ? document.createElement(tag) : null;\r\n}\r\n", "import environment from \"./environment.js\";\r\n\r\n/**\r\n * Gets the window object if in client environment\r\n * @returns {Window|null} The window object or null if not in client environment\r\n */\r\nexport default function getWindow() {\r\n  return environment.client ? window : null;\r\n}\r\n", "import getWindow from \"./get-window.js\";\r\n\r\nclass ErrorManager {\r\n  #isManaging = false;\r\n  #callbacks = new Set();\r\n\r\n  /**\r\n   * Adds a listener for error events\r\n   */\r\n  onError(callback = () => {}) {\r\n    this.#callbacks.add(callback);\r\n  }\r\n\r\n  /**\r\n   * Starts managing and registers global event callbacks for error management\r\n   */\r\n  manage() {\r\n    const window = getWindow();\r\n    if (!window) return;\r\n\r\n    if (this.#isManaging) {\r\n      console.warn(\"ErrorManager is already managing the application\");\r\n      return;\r\n    }\r\n\r\n    this.#isManaging = true;\r\n\r\n    window.onerror = (msg, src, ln, cl, err) => {\r\n      const error = err || new Error(msg);\r\n      console.error(error);\r\n      this.#callbacks.forEach((callback) => {\r\n        callback(error);\r\n      });\r\n    };\r\n\r\n    window.addEventListener(\"error\", (event) => {\r\n      event.preventDefault();\r\n      const error = event.error || new Error(event.message);\r\n      console.error(error);\r\n      this.#callbacks.forEach((callback) => {\r\n        callback(error);\r\n      });\r\n    });\r\n\r\n    window.addEventListener(\"unhandledrejection\", (event) => {\r\n      event.preventDefault();\r\n      const error =\r\n        event.reason instanceof Error\r\n          ? event.reason\r\n          : new Error(String(event.reason));\r\n      console.error(error);\r\n      this.#callbacks.forEach((callback) => {\r\n        callback(error);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton instance of ErrorManager for managing application-wide error handling\r\n * @type {ErrorManager}\r\n */\r\nexport default new ErrorManager();\r\n", "import assert from \"./assert.js\";\r\n\r\n// NOTE: resources have renderers... functions - cant be local stored!\r\n\r\nclass ResourceManager {\r\n  #resources = {\r\n    definitions: {},\r\n    renderers: {},\r\n    mappings: {},\r\n    translations: {},\r\n    pages: {},\r\n    components: {},\r\n  };\r\n\r\n  setResources(resources = {}) {\r\n    assert(\r\n      resources,\r\n      \"apis.ResourceManager.setResources (resources) is required\",\r\n    );\r\n    assert(\r\n      typeof resources === \"object\" &&\r\n        !Array.isArray(resources) &&\r\n        resources !== null,\r\n      \"apis.ResourceManager.setResources (resources) must be a non-null object\",\r\n    );\r\n\r\n    for (const key in resources) {\r\n      if (this.#resources[key] && resources[key]) {\r\n        this.#resources[key] = resources[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  getResources() {\r\n    return this.#resources;\r\n  }\r\n}\r\n\r\nexport default new ResourceManager();\r\n", "import assert from \"./assert.js\";\r\nimport resourceManager from \"./resource-manager.js\";\r\n\r\nexport default function getMapping(namespace = \"\", key = \"\") {\r\n  assert(namespace && key, \"apis.getMapping (namespace, key) are required\");\r\n  assert(\r\n    typeof namespace === \"string\" && namespace !== \"\",\r\n    \"apis.getMapping (namespace) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof key === \"string\" && key !== \"\",\r\n    \"apis.getMapping (key) must be a non-empty string\",\r\n  );\r\n\r\n  const resources = resourceManager.getResources();\r\n\r\n  assert(resources, \"apis.getMapping {resources} is required\");\r\n  assert(\r\n    resources.mappings && Object.keys(resources.mappings).length,\r\n    \"apis.getMapping {resources.mappings} is required\",\r\n  );\r\n  assert(\r\n    resources.mappings[namespace] &&\r\n      Object.keys(resources.mappings[namespace]).length,\r\n    `apis.getMapping {resources.mappings.${namespace}} is required`,\r\n  );\r\n\r\n  const mappings = resources.mappings[namespace];\r\n\r\n  // assert(\r\n  //   mappings[key],\r\n  //   `apis.getMapping {mappings.${namespace}.${key}} is required`,\r\n  // );\r\n  // assert(\r\n  //   typeof mappings[key] === \"string\" && mappings[key] !== \"\",\r\n  //   `apis.getMapping {mappings.${namespace}.${key}} must be a non-empty string`,\r\n  // );\r\n\r\n  return mappings[key] ?? \"\";\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getDocument from \"./get-document.js\";\r\n\r\n/**\r\n * Finds the first element that matches a CSS selector\r\n * @param {string} [selectors=\"\"] - CSS selector string\r\n * @returns {Element|null} The first matching element or null if not found or not in client environment\r\n * @throws {AssertionError} When selectors parameter is missing or not a non-empty string\r\n */\r\nexport default function querySelector(selectors = \"\") {\r\n  assert(selectors, \"apis.querySelector (selectors) is required\");\r\n  assert(\r\n    typeof selectors === \"string\" && selectors !== \"\",\r\n    \"apis.querySelector (selectors) must be a non-empty string\",\r\n  );\r\n\r\n  const document = getDocument();\r\n  return document ? document.querySelector(selectors) : null;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport eventManager from \"./event-manager.js\";\r\nimport getDocument from \"./get-document.js\";\r\nimport querySelector from \"./query-selector.js\";\r\n\r\n/**\r\n * Provides a delegated wrapper around the MutationObserver API with event handling\r\n * @class DelegatedMutationObserver\r\n */\r\nclass DelegatedMutationObserver {\r\n  #addedElements = new Map();\r\n  #removedElements = new Map();\r\n  #attributes = new Map();\r\n\r\n  /**\r\n   * Creates a unique key based on selector and callback\r\n   * @private\r\n   * @param {string} selector - CSS selector to match elements\r\n   * @param {Function} callback - The callback function\r\n   * @returns {string} A unique key for the observer\r\n   */\r\n  #getKey(selector, callback) {\r\n    return `${selector}::${callback.toString()}`;\r\n  }\r\n\r\n  /**\r\n   * Finds an element matching a selector within a node or its children\r\n   * @private\r\n   * @param {Node} [node=null] - The node to search within\r\n   * @param {string} [selector=\"\"] - The CSS selector to match\r\n   * @returns {Element|null} The matching element or null if none found\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  #findElement(node = null, selector = \"\") {\r\n    assert(\r\n      node && selector,\r\n      \"apis.mutationObserver.#findElement (node, selector) is required\",\r\n    );\r\n    assert(\r\n      node instanceof Node,\r\n      \"apis.mutationObserver.#findElement (node) must be an instance of Node\",\r\n    );\r\n    assert(\r\n      typeof selector === \"string\" && selector !== \"\",\r\n      \"apis.mutationObserver.#findElement (selector) must be a non-empty string\",\r\n    );\r\n\r\n    if (node.nodeType !== 1) return null;\r\n    if (node.matches(selector)) return node;\r\n    return node.querySelector(selector);\r\n  }\r\n\r\n  /**\r\n   * Emits a lifecycle event for an element and recursively for its children\r\n   * @private\r\n   * @param {Node} [node=null] - The node to emit events for\r\n   * @param {string} [eventType=\"\"] - The event type to emit (mount/unmount)\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  #emitElementEvent(node = null, eventType = \"\") {\r\n    assert(\r\n      node && eventType,\r\n      \"apis.mutationObserver.#emitElementEvent (node, eventType) is required\",\r\n    );\r\n    assert(\r\n      node instanceof Node,\r\n      \"apis.mutationObserver.#emitElementEvent (node) must be an instance of Node\",\r\n    );\r\n    assert(\r\n      typeof eventType === \"string\" && eventType !== \"\",\r\n      \"apis.mutationObserver.#emitElementEvent (eventType) must be a non-empty string\",\r\n    );\r\n\r\n    if (node.nodeType !== 1) return;\r\n\r\n    const primitiveId = node.dataset?.pi;\r\n    if (primitiveId) {\r\n      const handler = eventManager.getLocalEventHandler(eventType, primitiveId);\r\n      if (handler) {\r\n        const event = new CustomEvent(eventType);\r\n        Object.defineProperty(event, \"target\", { value: node });\r\n        handler(event);\r\n        eventManager.removeLocalEvent(eventType, primitiveId);\r\n      }\r\n    }\r\n\r\n    const reactiveId = node.dataset?.ri;\r\n    if (reactiveId) {\r\n      const handler = eventManager.getLocalEventHandler(eventType, reactiveId);\r\n      if (handler) {\r\n        const event = new CustomEvent(eventType);\r\n        Object.defineProperty(event, \"target\", { value: node });\r\n        handler(event);\r\n        eventManager.removeLocalEvent(eventType, reactiveId);\r\n      }\r\n    }\r\n\r\n    Array.from(node.children || []).forEach((child) => {\r\n      this.#emitElementEvent(child, eventType);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes event handlers for a node that's being removed from the DOM\r\n   * @private\r\n   * @param {Node} [node=null] - The node being removed\r\n   * @returns {null} Always returns null\r\n   * @throws {AssertionError} When node parameter is missing or not a Node instance\r\n   */\r\n  #clearElementEvents(node = null) {\r\n    assert(\r\n      node,\r\n      \"apis.mutationObserver.#clearElementEvents (node) is required\",\r\n    );\r\n    assert(\r\n      node instanceof Node,\r\n      \"apis.mutationObserver.#clearElementEvents (node) must be an instance of Node\",\r\n    );\r\n\r\n    if (node.nodeType !== 1) return;\r\n\r\n    const primitiveId = node.dataset?.pi;\r\n    if (primitiveId) eventManager.clearLocalEvents(primitiveId);\r\n\r\n    const reactiveId = node.dataset?.ri;\r\n    if (reactiveId) eventManager.clearLocalEvents(reactiveId);\r\n\r\n    Array.from(node.children || []).forEach((child) => {\r\n      this.#clearElementEvents(child);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks if a node is eligible to be unmounted\r\n   * @private\r\n   * @param {Node} [node=null] - The node being removed\r\n   * @returns {boolean} Returns true if the node is eligible to be unmounted, otherwise false\r\n   * @throws {AssertionError} When node parameter is missing or not a Node instance\r\n   */\r\n  #isEligibleToUnmount(node = null) {\r\n    assert(\r\n      node,\r\n      \"apis.mutationObserver.#isEligibleToUnmount (node) is required\",\r\n    );\r\n    assert(\r\n      node instanceof Node,\r\n      \"apis.mutationObserver.#isEligibleToUnmount (node) must be an instance of Node\",\r\n    );\r\n\r\n    if (node.nodeType !== 1) return false;\r\n\r\n    const reactiveId = node.dataset?.ri;\r\n    if (reactiveId) {\r\n      const pointer = querySelector(`[data-ri=\"${reactiveId}\"]`);\r\n      return pointer ? false : true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Registers an observer for DOM elements being added or removed\r\n   * @param {string} [selector=\"\"] - CSS selector to match elements\r\n   * @param {string} [effect=\"\"] - Effect type: 'added' or 'removed'\r\n   * @param {Function} [callback=()=>{}] - Callback function when matching elements are affected\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  observeElement(selector = \"\", effect = \"\", callback = () => {}) {\r\n    assert(\r\n      selector && effect && callback,\r\n      \"apis.mutationObserver.observeElement (selector, effect, callback) are required\",\r\n    );\r\n    assert(\r\n      typeof selector === \"string\" && selector !== \"\",\r\n      \"apis.mutationObserver.observeElement (selector) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      effect === \"added\" || effect === \"removed\",\r\n      \"apis.mutationObserver.observeElement (effect) must be 'added' or 'removed'\",\r\n    );\r\n    assert(\r\n      typeof callback === \"function\",\r\n      \"apis.mutationObserver.observeElement (callback) must be a function\",\r\n    );\r\n\r\n    const key = this.#getKey(selector, callback);\r\n\r\n    if (effect === \"added\") {\r\n      this.#addedElements.set(key, { selector, callback });\r\n    } else if (effect === \"removed\") {\r\n      this.#removedElements.set(key, { selector, callback });\r\n    }\r\n\r\n    return () => {\r\n      if (effect === \"added\") {\r\n        this.#addedElements.delete(key);\r\n      } else if (effect === \"removed\") {\r\n        this.#removedElements.delete(key);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Registers an observer for attribute changes on elements matching a selector\r\n   * @param {string} [selector=\"\"] - CSS selector to match elements\r\n   * @param {Function} [callback=()=>{}] - Callback function when attributes change\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  observeAttributes(selector = \"\", callback = () => {}) {\r\n    assert(\r\n      selector && callback,\r\n      \"apis.mutationObserver.observeAttributes (selector, callback) are required\",\r\n    );\r\n    assert(\r\n      typeof selector === \"string\" && selector !== \"\",\r\n      \"apis.mutationObserver.observeAttributes (selector) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      typeof callback === \"function\",\r\n      \"apis.mutationObserver.observeAttributes (callback) must be a function\",\r\n    );\r\n\r\n    const key = this.#getKey(selector, callback);\r\n\r\n    this.#attributes.set(key, { selector, callback });\r\n\r\n    return () => {\r\n      this.#attributes.delete(key);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Starts observing DOM mutations on the document body\r\n   * @returns {MutationObserver|null} The MutationObserver instance or null if not in client environment\r\n   */\r\n  observe() {\r\n    const document = getDocument();\r\n    if (!document) return null;\r\n\r\n    const observer = new MutationObserver((mutations) => {\r\n      for (const mutation of mutations) {\r\n        if (mutation.type === \"childList\") {\r\n          for (const node of mutation.addedNodes) {\r\n            for (const { selector, callback } of this.#addedElements.values()) {\r\n              const element = this.#findElement(node, selector);\r\n              if (element && callback) callback(element);\r\n            }\r\n            this.#emitElementEvent(node, \"mount\");\r\n          }\r\n          for (const node of mutation.removedNodes) {\r\n            for (const {\r\n              selector,\r\n              callback,\r\n            } of this.#removedElements.values()) {\r\n              const element = this.#findElement(node, selector);\r\n              if (element && callback) {\r\n                callback(element);\r\n              }\r\n            }\r\n            if (this.#isEligibleToUnmount(node)) {\r\n              this.#emitElementEvent(node, \"unmount\");\r\n              this.#clearElementEvents(node);\r\n            }\r\n          }\r\n        } else if (mutation.type === \"attributes\") {\r\n          const { target, attributeName } = mutation;\r\n          for (const { selector, callback } of this.#attributes.values()) {\r\n            const element = this.#findElement(target, selector);\r\n            const attributeValue = target.getAttribute(attributeName);\r\n            if (element && callback) {\r\n              callback(element, attributeName, attributeValue);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    observer.observe(document.body, {\r\n      subtree: true,\r\n      childList: true,\r\n      // attributes: true,\r\n      // attributeFilter: [\"class\", \"style\"],\r\n      // attributeOldValue: true,\r\n      // characterData: true,\r\n      // characterDataOldValue: true,\r\n    });\r\n\r\n    return observer;\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton instance of DelegatedMutationObserver for observing DOM mutations\r\n * @type {DelegatedMutationObserver}\r\n */\r\nexport default new DelegatedMutationObserver();\r\n", "import assert from \"./assert.js\";\r\nimport getMapping from \"./get-mapping.js\";\r\nimport mutationObserver from \"./mutation-observer.js\";\r\n\r\n/**\r\n * Provides a delegated wrapper around the ResizeObserver API with registry management\r\n * @class DelegatedResizeObserver\r\n */\r\nclass DelegatedResizeObserver {\r\n  #registry = new Map();\r\n  #debounceTimers = new Map();\r\n\r\n  observe(id = \"\", handler = () => {}) {\r\n    assert(\r\n      id && handler,\r\n      \"apis.resizeObserver.observe (id, handler) is required\",\r\n    );\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.resizeObserver.observe (id) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      typeof handler === \"function\",\r\n      \"apis.resizeObserver.observe (handler) must be a function\",\r\n    );\r\n\r\n    const observer = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (this.#debounceTimers.has(id)) {\r\n          clearTimeout(this.#debounceTimers.get(id));\r\n        }\r\n\r\n        this.#debounceTimers.set(\r\n          id,\r\n          setTimeout(() => {\r\n            requestAnimationFrame(() => {\r\n              const width =\r\n                entry.borderBoxSize[0]?.inlineSize || entry.contentRect.width;\r\n              const height =\r\n                entry.borderBoxSize[0]?.blockSize || entry.contentRect.height;\r\n              handler({ width, height });\r\n              this.#debounceTimers.delete(id);\r\n            });\r\n          }, 16), // NOTE: approximately one frame at 60fps\r\n        );\r\n      });\r\n    });\r\n\r\n    this.#registry.set(id, { observer, handler });\r\n\r\n    const mappedKey = getMapping(\"dataAttributes\", \"reactiveId\");\r\n    const selector = `[data-${mappedKey}=\"${id}\"]`;\r\n\r\n    const unobserve = mutationObserver.observeElement(\r\n      selector,\r\n      \"added\",\r\n      (element) => {\r\n        observer.observe(element, { box: \"border-box\" });\r\n        unobserve();\r\n      },\r\n    );\r\n  }\r\n\r\n  unobserve(id = \"\") {\r\n    assert(id, \"apis.resizeObserver.unobserve (id) is required\");\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.resizeObserver.unobserve (id) must be a non-empty string\",\r\n    );\r\n\r\n    const { observer } = this.#registry.get(id) ?? {};\r\n    if (observer) {\r\n      observer.disconnect();\r\n      this.#registry.delete(id);\r\n    }\r\n\r\n    if (this.#debounceTimers.has(id)) {\r\n      clearTimeout(this.#debounceTimers.get(id));\r\n      this.#debounceTimers.delete(id);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.#registry.forEach(({ observer }) => {\r\n      observer.disconnect();\r\n    });\r\n    this.#registry.clear();\r\n\r\n    this.#debounceTimers.forEach((timerId) => {\r\n      clearTimeout(timerId);\r\n    });\r\n    this.#debounceTimers.clear();\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton instance of DelegatedResizeObserver for observing element resizes\r\n * @type {DelegatedResizeObserver}\r\n */\r\nexport default new DelegatedResizeObserver();\r\n", "import assert from \"./assert.js\";\r\nimport AssertionError from \"./assertion-error.js\";\r\nimport getDocument from \"./get-document.js\";\r\nimport getMapping from \"./get-mapping.js\";\r\nimport getWindow from \"./get-window.js\";\r\nimport resizeObserver from \"./resize-observer.js\";\r\n\r\n/**\r\n * Manages DOM event handling and delegation for both global and local events\r\n * @class EventManager\r\n */\r\nclass EventManager {\r\n  // TODO: lint per primitive in userland\r\n  #eventTypes = [\r\n    \"hover\",\r\n    \"press\",\r\n    \"doublePress\",\r\n    \"contextMenu\",\r\n    \"pointerDown\",\r\n    \"pointerUp\",\r\n    \"pointerEnter\",\r\n    \"pointerLeave\",\r\n    \"pointerMove\",\r\n    \"dragStart\",\r\n    \"drag\",\r\n    \"dragEnd\",\r\n    \"dragEnter\",\r\n    \"dragOver\",\r\n    \"dragLeave\",\r\n    \"drop\",\r\n    \"change\",\r\n    \"input\",\r\n    \"submit\",\r\n    \"keyDown\",\r\n    \"keyUp\",\r\n    \"scroll\",\r\n    \"focus\",\r\n    \"blur\",\r\n    \"resize\", // NOTE: handled by resize observer\r\n    \"intersection\", // NOTE: handled by intersection observer\r\n    \"mount\", // NOTE: handled by mutation observer\r\n    \"unmount\", // NOTE: handled by mutation observer\r\n    \"contextMenu\", // NOTE: handled by context menu observer - local + global\r\n  ];\r\n  #captureEventTypes = [\r\n    \"pointerEnter\",\r\n    \"pointerLeave\",\r\n    \"scroll\",\r\n    \"focus\",\r\n    \"blur\",\r\n    // NOTE: wait focusin and focusout support\r\n  ];\r\n  #documentEventTypes = {\r\n    scroll: \"scroll\",\r\n    resize: \"resize\",\r\n    focus: \"focus\",\r\n    blur: \"blur\",\r\n    hover: \"pointerover\",\r\n    press: \"click\",\r\n    doublePress: \"dblclick\",\r\n    contextMenu: \"contextmenu\",\r\n    pointerDown: \"pointerdown\",\r\n    pointerUp: \"pointerup\",\r\n    pointerEnter: \"pointerenter\",\r\n    pointerLeave: \"pointerleave\",\r\n    pointerMove: \"pointermove\",\r\n    dragStart: \"dragstart\",\r\n    drag: \"drag\",\r\n    dragEnd: \"dragend\",\r\n    dragEnter: \"dragenter\",\r\n    dragOver: \"dragover\",\r\n    dragLeave: \"dragleave\",\r\n    drop: \"drop\",\r\n    change: \"change\",\r\n    input: \"input\",\r\n    submit: \"submit\",\r\n    keyDown: \"keydown\",\r\n    keyUp: \"keyup\",\r\n  };\r\n  #events = {};\r\n\r\n  /**\r\n   * Gets the primitive ID from an event target\r\n   * @private\r\n   * @param {Event} [event=null] - The DOM event\r\n   * @returns {string|undefined} The primitive ID\r\n   * @throws {AssertionError} When event parameter is missing or not an Event instance\r\n   */\r\n  #getPrimitiveId(event = null) {\r\n    assert(event, \"apis.eventManager.#getPrimitiveId (event) is required\");\r\n    assert(\r\n      event instanceof Event,\r\n      \"apis.eventManager.#getPrimitiveId (event) must be an instance of Event\",\r\n    );\r\n\r\n    const mappedKey = getMapping(\"dataAttributes\", \"primitiveId\");\r\n    return event.target.closest(`[data-${mappedKey}]`)?.dataset[mappedKey];\r\n  }\r\n\r\n  /**\r\n   * Gets the reactive ID from an event target\r\n   * @private\r\n   * @param {Event} [event=null] - The DOM event\r\n   * @returns {string|undefined} The reactive ID\r\n   * @throws {AssertionError} When event parameter is missing or not an Event instance\r\n   */\r\n  #getReactiveId(event = null) {\r\n    assert(event, \"apis.eventManager.#getReactiveId (event) is required\");\r\n    assert(\r\n      event instanceof Event,\r\n      \"apis.eventManager.#getReactiveId (event) must be an instance of Event\",\r\n    );\r\n\r\n    const mappedKey = getMapping(\"dataAttributes\", \"reactiveId\");\r\n    return event.target.closest(`[data-${mappedKey}]`)?.dataset[mappedKey];\r\n  }\r\n\r\n  /**\r\n   * Gets the value from a reactive event based on the event type\r\n   * @private\r\n   * @param {string} [type=\"\"] - The event type\r\n   * @param {Event} [event=null] - The DOM event\r\n   * @returns {*} The reactive event value\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  #getReactiveEventValue(type = \"\", event = null) {\r\n    assert(\r\n      type && event,\r\n      \"apis.eventManager.#getReactiveEventValue (type, event) are required\",\r\n    );\r\n    assert(\r\n      this.#eventTypes.includes(type),\r\n      \"apis.eventManager.getGlobalEventHandlers (type) is invalid\",\r\n    );\r\n    assert(\r\n      event instanceof Event,\r\n      \"apis.eventManager.#getReactiveEventValue (event) must be an instance of Event\",\r\n    );\r\n\r\n    switch (type) {\r\n      case \"scroll\":\r\n        return {\r\n          top: event.target.scrollTop,\r\n          left: event.target.scrollLeft,\r\n          height: event.target.scrollHeight,\r\n          width: event.target.scrollWidth,\r\n          // clientHeight: event.target.clientHeight,\r\n          // clientWidth: event.target.clientWidth,\r\n        };\r\n      case \"input\":\r\n        // TODO: check input vs change\r\n        return event.target.value;\r\n      case \"change\":\r\n        if (event instanceof CustomEvent) {\r\n          return event.detail.value;\r\n        } else {\r\n          return event.target.checked; // NOTE: always checked?\r\n        }\r\n\r\n      case \"submit\":\r\n        return new FormData(event.target);\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets all global event handlers for a specified event type\r\n   * @param {string} [type=\"\"] - The event type\r\n   * @returns {Set<Function>|undefined} The set of global handlers\r\n   * @throws {AssertionError} When type parameter is missing or invalid\r\n   */\r\n  getGlobalEventHandlers(type = \"\") {\r\n    assert(type, \"apis.eventManager.getGlobalEventHandlers (type) is required\");\r\n    assert(\r\n      this.#eventTypes.includes(type),\r\n      \"apis.eventManager.getGlobalEventHandlers (type) is invalid\",\r\n    );\r\n\r\n    return this.#events[type]?.globalHandlers ?? new Set();\r\n  }\r\n\r\n  /**\r\n   * Gets a local event handler for a specified event type and ID\r\n   * @param {string} [type=\"\"] - The event type\r\n   * @param {string} [id=\"\"] - The element ID\r\n   * @returns {Function|undefined} The local handler function\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  getLocalEventHandler(type = \"\", id = \"\") {\r\n    assert(\r\n      type && id,\r\n      \"apis.eventManager.getLocalEventHandler (type, id) are required\",\r\n    );\r\n    assert(\r\n      this.#eventTypes.includes(type),\r\n      \"apis.eventManager.getLocalEventHandler (type) is invalid\",\r\n    );\r\n\r\n    return this.#events[type]?.localHandlers.get(id);\r\n  }\r\n  /**\r\n   * Checks if an element is a child of another element\r\n   * @private\r\n   * @param {HTMLElement} parent - The potential parent element\r\n   * @param {HTMLElement} child - The potential child element\r\n   * @returns {boolean} True if child is a descendant of parent\r\n   */\r\n  #isChildOf(parent, child) {\r\n    if (!parent || !child) return false;\r\n    let node = child;\r\n    while (node) {\r\n      if (node === parent) return true;\r\n      node = node.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Creates an event listener for a specific event type\r\n   * @private\r\n   * @param {string} [type=\"\"] - The event type\r\n   * @returns {Function} The event listener function\r\n   * @throws {AssertionError} When type parameter is invalid\r\n   */\r\n  #getEventListener(type = \"\") {\r\n    assert(\r\n      this.#eventTypes.includes(type),\r\n      \"apis.eventManager.#getEventListener (type) is invalid\",\r\n    );\r\n\r\n    return (event) => {\r\n      // NOTE: needed when scroll event is registered and window/document is scrolled\r\n      if (event.target === getWindow() || event.target === getDocument()) {\r\n        return;\r\n      }\r\n\r\n      // NOTE: needed for pointerEnter and pointerLeave events to avoid triggering on child elements\r\n      if (\r\n        (type === \"pointerEnter\" || type === \"pointerLeave\") &&\r\n        event.relatedTarget\r\n      ) {\r\n        const targetElement = event.target.closest(\r\n          `[data-${getMapping(\"dataAttributes\", \"reactiveId\")}]`,\r\n        );\r\n        if (\r\n          targetElement &&\r\n          this.#isChildOf(targetElement, event.relatedTarget)\r\n        ) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      for (const handler of this.getGlobalEventHandlers(type)) {\r\n        handler(event);\r\n      }\r\n\r\n      const primitiveId = this.#getPrimitiveId(event);\r\n      if (primitiveId) {\r\n        const handler = this.getLocalEventHandler(type, primitiveId);\r\n        if (handler) {\r\n          handler(event);\r\n        }\r\n      }\r\n      const reactiveId = this.#getReactiveId(event);\r\n      if (reactiveId) {\r\n        const handler = this.getLocalEventHandler(type, reactiveId);\r\n        if (handler) {\r\n          handler(this.#getReactiveEventValue(type, event));\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initializes an event state object for a specific event type\r\n   * @private\r\n   * @param {string} [type=\"\"] - The event type\r\n   */\r\n  #initializeEvent(type = \"\") {\r\n    this.#events[type] = {\r\n      listener: this.#getEventListener(type),\r\n      localHandlers: new Map(),\r\n      globalHandlers: new Set(),\r\n      registered: false,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Registers event listeners to document for a specific event type\r\n   * @private\r\n   * @param {string} [type=\"\"] - The event type\r\n   */\r\n  #registerEvent(type = \"\") {\r\n    const document = getDocument();\r\n    if (!document || !type) return;\r\n    const documentEventType = this.#documentEventTypes[type];\r\n    if (documentEventType) {\r\n      document.addEventListener(\r\n        documentEventType,\r\n        this.#events[type].listener,\r\n        this.#captureEventTypes.includes(type),\r\n      );\r\n    }\r\n    this.#events[type].registered = true;\r\n  }\r\n\r\n  /**\r\n   * Un-registers event listeners from document for a specific event type\r\n   * @private\r\n   * @param {string} [type=\"\"] - The event type\r\n   */\r\n  #unregisterEvent(type = \"\") {\r\n    const document = getDocument();\r\n    if (!document || !type) return;\r\n    const documentEventType = this.#documentEventTypes[type];\r\n    if (documentEventType) {\r\n      document.removeEventListener(\r\n        documentEventType,\r\n        this.#events[type].listener,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a local event handler for a specific event type and element ID\r\n   * @param {string} [type=\"\"] - The event type\r\n   * @param {string} [id=\"\"] - The element ID\r\n   * @param {Function} [handler=null] - The event handler function\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  addLocalEvent(type = \"\", id = \"\", handler = null) {\r\n    assert(\r\n      type && id && handler,\r\n      \"apis.eventManager.addLocalEvent (type, id, handler) are required\",\r\n    );\r\n    assert(\r\n      this.#eventTypes.includes(type),\r\n      \"apis.eventManager.addLocalEvent (type) is invalid\",\r\n    );\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.eventManager.addLocalEvent (id) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      typeof handler === \"function\",\r\n      \"apis.eventManager.addLocalEvent (handler) must be a function\",\r\n    );\r\n\r\n    if (type === \"resize\") {\r\n      resizeObserver.observe(id, handler);\r\n      return;\r\n    }\r\n\r\n    if (!this.#events[type]) this.#initializeEvent(type);\r\n    const event = this.#events[type];\r\n    event.localHandlers.set(id, handler);\r\n    if (!event.registered) this.#registerEvent(type);\r\n  }\r\n\r\n  /**\r\n   * Removes a local event handler for a specific event type and element ID\r\n   * @param {string} [type=\"\"] - The event type\r\n   * @param {string} [id=\"\"] - The element ID\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  removeLocalEvent(type = \"\", id = \"\") {\r\n    assert(\r\n      type && id,\r\n      \"apis.eventManager.removeLocalEvent (type, id) are required\",\r\n    );\r\n    assert(\r\n      this.#eventTypes.includes(type),\r\n      \"apis.eventManager.removeLocalEvent (type) is invalid\",\r\n    );\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.eventManager.removeLocalEvent (id) must be a non-empty string\",\r\n    );\r\n\r\n    if (type === \"resize\") {\r\n      resizeObserver.unobserve(id);\r\n      return;\r\n    }\r\n\r\n    const event = this.#events[type];\r\n    if (!event) return;\r\n    event.localHandlers.delete(id);\r\n    this.clearEvent(type);\r\n  }\r\n\r\n  /**\r\n   * Adds a global event handler for a specific event type\r\n   * @param {string} [type=\"\"] - The event type\r\n   * @param {Function} [handler=null] - The event handler function\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  addGlobalEvent(type = \"\", handler = null) {\r\n    assert(\r\n      type && handler,\r\n      \"apis.eventManager.addGlobalEvent (type, handler) are required\",\r\n    );\r\n    assert(\r\n      this.#eventTypes.includes(type),\r\n      \"apis.eventManager.addGlobalEvent (type) is invalid\",\r\n    );\r\n    assert(\r\n      typeof handler === \"function\",\r\n      \"apis.eventManager.addGlobalEvent (handler) must be a function\",\r\n    );\r\n\r\n    if (type === \"resize\" || type === \"mount\" || type === \"unmount\") return;\r\n\r\n    if (!this.#events[type]) this.#initializeEvent(type);\r\n    const event = this.#events[type];\r\n    event.globalHandlers.add(handler);\r\n    if (!event.registered) this.#registerEvent(type);\r\n  }\r\n\r\n  /**\r\n   * Removes a global event handler for a specific event type\r\n   * @param {string} [type=\"\"] - The event type\r\n   * @param {Function} [handler=null] - The event handler function\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  removeGlobalEvent(type = \"\", handler = null) {\r\n    assert(\r\n      type && handler,\r\n      \"apis.eventManager.removeGlobalEvent (type, handler) are required\",\r\n    );\r\n    assert(\r\n      this.#eventTypes.includes(type),\r\n      \"apis.eventManager.removeGlobalEvent (type) is invalid\",\r\n    );\r\n    assert(\r\n      typeof handler === \"function\",\r\n      \"apis.eventManager.removeGlobalEvent (handler) must be a function\",\r\n    );\r\n\r\n    if (type === \"resize\" || type === \"mount\" || type === \"unmount\") return;\r\n\r\n    const event = this.#events[type];\r\n    if (!event) return;\r\n    event.globalHandlers.delete(handler);\r\n    this.clearEvent(type);\r\n  }\r\n\r\n  /**\r\n   * Clears event handlers and un-registers listeners if no handlers remain for a specific event type\r\n   * @param {string} [type=\"\"] - The event type\r\n   * @throws {AssertionError} When type parameter is missing or invalid\r\n   */\r\n  clearEvent(type = \"\") {\r\n    assert(type, \"apis.eventManager.clearEvent (type) is required\");\r\n    assert(\r\n      this.#eventTypes.includes(type),\r\n      \"apis.eventManager.clearEvent (type) is invalid\",\r\n    );\r\n\r\n    const event = this.#events[type];\r\n    if (!event) return;\r\n    if (!event.globalHandlers.size && !event.localHandlers.size) {\r\n      this.#unregisterEvent(type);\r\n      this.#events[type] = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes all local event handlers for a specific element ID\r\n   * @param {string} [id=\"\"] - The element ID\r\n   * @throws {AssertionError} When id parameter is missing or invalid\r\n   */\r\n  clearLocalEvents(id = \"\") {\r\n    assert(id, \"apis.eventManager.clearLocalEvents (id) is required\");\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.eventManager.clearLocalEvents (id) must be a non-empty string\",\r\n    );\r\n\r\n    for (const type of Object.keys(this.#events)) {\r\n      const event = this.#events[type];\r\n      if (event && event.localHandlers.has(id)) {\r\n        event.localHandlers.delete(id);\r\n        this.clearEvent(type);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears all event handlers and un-registers all event listeners\r\n   */\r\n  clearEvents() {\r\n    for (const type of Object.keys(this.#events)) {\r\n      if (type === \"mount\" || type === \"unmount\") continue; // NOTE: handled inside the mutation observer\r\n      if (type === \"resize\") {\r\n        resizeObserver.clear();\r\n        continue;\r\n      }\r\n      this.clearEvent(type);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton instance of EventManager for managing DOM events throughout the application\r\n * @type {EventManager}\r\n */\r\nexport default new EventManager();\r\n", "import assert from \"./assert.js\";\r\nimport AssertionError from \"./assertion-error.js\";\r\n\r\n// NOTE: add prefix for less conflicting ids?\r\n// NOTE: prefixes = { \"modal\": \"md\" } + prefixes[prefix]\r\n\r\n/**\r\n * Generates a cryptographically secure random ID string\r\n * @param {number} [size=8] - The length of the ID to generate\r\n * @returns {string} A random alphanumeric string of the specified length\r\n * @throws {AssertionError} When size parameter is missing or not a positive number\r\n */\r\n// export default function generateId(prefix = \"\", size = 8) {\r\nexport default function generateId(size = 8) {\r\n  assert(size, \"generateId (size) is required\");\r\n  assert(\r\n    typeof size === \"number\" && size > 0,\r\n    \"apis.generateId (size) must be a positive number\",\r\n  );\r\n\r\n  const alphabet =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  const randomValues = new Uint8Array(size);\r\n  crypto.getRandomValues(randomValues);\r\n\r\n  let id = \"\";\r\n  for (let i = 0; i < size; i++) {\r\n    id += alphabet[randomValues[i] % alphabet.length];\r\n  }\r\n\r\n  // return prefix ? `${prefix}-${id}` : id;\r\n  return id;\r\n}\r\n", "import getDocument from \"./get-document.js\";\r\n\r\n/**\r\n * Gets the currently active (focused) element in the document\r\n * @returns {Element|null} The active element or null if no element is focused or not in client environment\r\n */\r\nexport default function getActiveElement() {\r\n  const document = getDocument();\r\n  if (!document) return null;\r\n\r\n  const activeElement = document.activeElement;\r\n  if (!activeElement || activeElement === document.body) {\r\n    return null;\r\n  }\r\n\r\n  return activeElement;\r\n}\r\n", "import assert from \"./assert.js\";\r\n\r\n// TODO: list of supported tags\r\n\r\n/**\r\n * Generates an HTML closing tag for the specified element\r\n * @param {string} [tag=\"div\"] - The HTML tag name\r\n * @returns {string} The HTML closing tag string\r\n * @throws {AssertionError} When tag parameter is missing or not a non-empty string\r\n */\r\nexport default function getClosingHtmlTag(tag = \"div\") {\r\n  assert(tag, \"apis.getClosingHtmlTag (tag) is required\");\r\n  assert(\r\n    typeof tag === \"string\" && tag !== \"\",\r\n    \"apis.getClosingHtmlTag (tag) must be a non-empty string\",\r\n  );\r\n\r\n  return `</${tag}>`;\r\n}\r\n", "import assert from \"./assert.js\";\r\n\r\n// TODO: list of supported tags\r\n\r\n/**\r\n * Generates an SVG closing tag for the specified element\r\n * @param {string} [tag=\"div\"] - The SVG tag name\r\n * @returns {string} The SVG closing tag string\r\n * @throws {AssertionError} When tag parameter is missing or not a non-empty string\r\n */\r\nexport default function getClosingSvgTag(tag = \"svg\") {\r\n  assert(tag, \"apis.getClosingSvgTag (tag) is required\");\r\n  assert(\r\n    typeof tag === \"string\" && tag !== \"\",\r\n    \"apis.getClosingSvgTag (tag) must be a non-empty string\",\r\n  );\r\n\r\n  return `</${tag}>`;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport resourceManager from \"./resource-manager.js\";\r\n\r\n/**\r\n * Gets a CSS variable reference string for a design token key\r\n * @param {string} [key=\"\"] - The token key to get a CSS variable reference for\r\n * @returns {string} A CSS var() function call referencing the mapped token\r\n * @throws {AssertionError} When key parameter is missing, not a string, or not mapped\r\n */\r\nexport default function getVar(key = \"\") {\r\n  assert(key, \"apis.getVar (key) is required\");\r\n  assert(\r\n    typeof key === \"string\" && key !== \"\",\r\n    \"apis.getVar (key) must be a non-empty string\",\r\n  );\r\n\r\n  const resources = resourceManager.getResources();\r\n\r\n  assert(\r\n    resources.mappings?.tokenKeys[key],\r\n    `apis.getVar {${key}} is not mapped`,\r\n  );\r\n\r\n  return `var(--${resources.mappings.tokenKeys[key]})`;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getVar from \"./get-var.js\";\r\n\r\n/**\r\n * Generates an HSL color string from a color name and optional opacity\r\n * @param {string} [color=\"\"] - The color name to retrieve from CSS variables\r\n * @param {number} [opacity=1] - The opacity value between 0 and 1\r\n * @returns {string} HSL color string with optional opacity\r\n * @throws {AssertionError} When parameters are missing or invalid\r\n */\r\nexport default function getColorValue(color = \"\", opacity = 1) {\r\n  assert(color, \"apis.getColorValue (color) is required\");\r\n  assert(\r\n    typeof color === \"string\" && color !== \"\",\r\n    \"apis.getColorValue (color) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    getVar(`color-${color}`),\r\n    `apis.getColorValue (color) ${color} is not defined`,\r\n  );\r\n  assert(\r\n    typeof opacity === \"number\" && opacity >= 0 && opacity <= 1,\r\n    \"apis.getColorValue (opacity) must be a number between 0 and 1\",\r\n  );\r\n\r\n  if (opacity === 1) {\r\n    return `hsl(${getVar(`color-${color}`)})`;\r\n  }\r\n  return `hsl(${getVar(`color-${color}`)}, ${opacity})`;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport AssertionError from \"./assertion-error.js\";\r\nimport getWindow from \"./get-window.js\";\r\n\r\n/**\r\n * Gets the computed style of an HTML element\r\n * @param {HTMLElement} [element=null] - The HTML element to get styles from\r\n * @returns {CSSStyleDeclaration|null} The computed style object, or null if not in client environment\r\n * @throws {AssertionError} When parameters are invalid\r\n */\r\nexport default function getComputedStyle(element = null) {\r\n  assert(element, \"apis.getComputedStyle (element) is required\");\r\n\r\n  const window = getWindow();\r\n  if (!window) return null;\r\n\r\n  assert(\r\n    element instanceof HTMLElement,\r\n    \"apis.getComputedStyle (element) must be an instance of HTMLElement\",\r\n  );\r\n\r\n  const style = window.getComputedStyle(element);\r\n  return style;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getComputedStyle from \"./get-computed-style.js\";\r\n\r\n/**\r\n * Gets a specific property from the computed style of an HTML element\r\n * @param {HTMLElement} [element=null] - The HTML element to get styles from\r\n * @param {string} [property=\"\"] - The specific CSS property to retrieve\r\n * @returns {string|null} The computed style property value, or null if not in client environment\r\n * @throws {AssertionError} When parameters are invalid\r\n */\r\nexport default function getComputedStyleProperty(\r\n  element = null,\r\n  property = \"\",\r\n) {\r\n  assert(element, \"apis.getComputedStyle (element) is required\");\r\n  assert(\r\n    typeof property === \"string\" && property !== \"\",\r\n    \"apis.getComputedStyle (property) must be a non-empty string\",\r\n  );\r\n\r\n  const style = getComputedStyle(element);\r\n  if (!style) return null;\r\n\r\n  assert(\r\n    element instanceof HTMLElement,\r\n    \"apis.getComputedStyle (element) must be an instance of HTMLElement\",\r\n  );\r\n\r\n  return style.getPropertyValue(property);\r\n}\r\n", "import resourceManager from \"./resource-manager.js\";\r\n\r\nexport default function getDefinitions(namespace = \"\") {\r\n  assert(namespace && key, \"apis.getDefinitions (namespace) is required\");\r\n  assert(\r\n    typeof namespace === \"string\" && namespace !== \"\",\r\n    \"apis.getDefinitions (namespace) must be a non-empty string\",\r\n  );\r\n\r\n  const resources = resourceManager.getResources();\r\n\r\n  assert(resources, \"apis.getDefinitions {resources} is required\");\r\n  assert(\r\n    resources.definitions && Object.keys(resources.definitions).length,\r\n    \"apis.getDefinitions {resources.definitions} is required\",\r\n  );\r\n  assert(\r\n    resources.definitions[namespace] &&\r\n      Object.keys(resources.definitions[namespace]).length,\r\n    `apis.getDefinitions {resources.definitions.${namespace}} is required`,\r\n  );\r\n\r\n  return resources.definitions[namespace];\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getDocument from \"./get-document.js\";\r\n\r\n/**\r\n * Gets an element by its ID\r\n * @param {string} [id=\"\"] - The ID of the element to find\r\n * @returns {Element|null} The element with the specified ID or null if not found or not in client environment\r\n * @throws {AssertionError} When id parameter is missing or not a non-empty string\r\n */\r\nexport default function getElementById(id = \"\") {\r\n  assert(id, \"apis.getElementById (id) is required\");\r\n  assert(\r\n    typeof id === \"string\" && id !== \"\",\r\n    \"apis.getElementById (id) must be a non-empty string\",\r\n  );\r\n\r\n  const document = getDocument();\r\n  return document ? document.getElementById(id) : null;\r\n}\r\n", "import assert from \"./assert.js\";\r\n\r\n/**\r\n * Converts an object of aria properties to properly formatted aria attributes\r\n * @param {Object} [aria={}] - Object containing aria properties\r\n * @returns {Object} An object with properly formatted aria attribute names\r\n * @throws {AssertionError} When aria parameter is missing or not a non-null object\r\n */\r\nexport default function getAriaAttributes(aria = {}) {\r\n  assert(aria, \"apis.getAriaAttributes (aria) is required\");\r\n  assert(\r\n    typeof aria === \"object\" && !Array.isArray(aria) && aria !== null,\r\n    \"apis.getAriaAttributes (aria) must be a non-null object\",\r\n  );\r\n\r\n  const attributes = {};\r\n\r\n  for (const [key, value] of Object.entries(aria)) {\r\n    if (value === undefined || value === null) continue;\r\n    if (key === \"role\") {\r\n      attributes[\"role\"] = value;\r\n    } else {\r\n      attributes[`aria-${key.toLowerCase()}`] = value.toString();\r\n    }\r\n  }\r\n\r\n  return attributes;\r\n}\r\n", "import assert from \"./assert.js\";\r\n\r\n/**\r\n * Processes a control object and returns an attributes object with lowercased keys\r\n * @param {Object} [control={}] - Object containing control attributes\r\n * @returns {Object} Object with lowercased control attribute names\r\n * @throws {AssertionError} When control parameter is missing or not a non-null object\r\n */\r\nexport default function getControlAttributes(control = {}) {\r\n  assert(control, \"apis.getControlAttributes (control) is required\");\r\n  assert(\r\n    typeof control === \"object\" && !Array.isArray(control) && control !== null,\r\n    \"apis.getControlAttributes (control) must be a non-null object\",\r\n  );\r\n\r\n  const attributes = {};\r\n\r\n  for (const [key, value] of Object.entries(control)) {\r\n    if (!value) continue;\r\n    attributes[key.toLowerCase()] = value;\r\n  }\r\n\r\n  return attributes;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getMapping from \"./get-mapping.js\";\r\n\r\n/**\r\n * Converts a data object to a set of properly formatted data attributes\r\n * @param {Object} [data={}] - Object containing data attributes\r\n * @returns {Object} Object with formatted data attribute names\r\n * @throws {AssertionError} When data parameter is missing or not a non-null object\r\n */\r\nexport default function getDataAttributes(data = {}) {\r\n  assert(data, \"apis.getDataAttributes (data) is required\");\r\n  assert(\r\n    typeof data === \"object\" && !Array.isArray(data) && data !== null,\r\n    \"apis.getDataAttributes (data) must be a non-null object\",\r\n  );\r\n\r\n  const attributes = {};\r\n\r\n  for (const [key, value] of Object.entries(data)) {\r\n    const mappedKey = getMapping(\"dataAttributes\", key);\r\n    attributes[`data-${mappedKey}`] = value;\r\n  }\r\n\r\n  return attributes;\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\n// TODO: reuse\r\n\r\n/**\r\n * Converts a camelCase string to kebab-case\r\n * @function convertCamelToKebabCase\r\n * @param {string} camelCase - The camelCase string to convert\r\n * @returns {string} The kebab-case representation of the input string\r\n */\r\nexport default function convertCamelToKebabCase(camelCase = \"\") {\r\n  assert(camelCase, \"utils.convertCamelToKebabCase (camelCase) is required\");\r\n  assert(\r\n    typeof camelCase === \"string\" && camelCase !== \"\",\r\n    \"utils.convertCamelToKebabCase (camelCase) must be a non-empty string\",\r\n  );\r\n\r\n  return camelCase\r\n    .replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`)\r\n    .replace(/^-/, \"\")\r\n    .trim();\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\n/**\r\n * Creates a debounced version of a function that delays execution until after the specified delay\r\n * @function debounce\r\n * @param {Function} callback - The function to debounce\r\n * @param {number} [delay=100] - The delay in milliseconds\r\n * @returns {Function} A debounced version of the input function\r\n */\r\nexport default function debounce(callback = () => {}, delay = 100) {\r\n  assert(callback, \"utils.debounce (callback) is required\");\r\n  assert(\r\n    typeof callback === \"function\",\r\n    \"utils.debounce (callback) must be a function\",\r\n  );\r\n  assert(\r\n    typeof delay === \"number\" && delay > 0,\r\n    \"utils.debounce (delay) must be a positive number\",\r\n  );\r\n\r\n  let timer;\r\n  return (...args) => {\r\n    if (timer) clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      callback(...args);\r\n    }, delay);\r\n  };\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\n/**\r\n * Calculates the size of an object in kilobytes\r\n * @function getObjectSize\r\n * @param {Object} object - The object to measure\r\n * @returns {string} The size of the object in kilobytes with 2 decimal places\r\n */\r\nexport default function getObjectSize(object = {}) {\r\n  assert(object, \"utils.getObjectSize (object) is required\");\r\n  assert(\r\n    typeof object === \"object\" && !Array.isArray(object) && object !== null,\r\n    \"utils.getObjectSize (object) must be a non-null object\",\r\n  );\r\n\r\n  const size = JSON.stringify(object).length;\r\n  return `${(size / 1024).toFixed(2)} kB`;\r\n}\r\n", "import { stateManager } from \"../apis/index.js\";\r\nimport getObjectSize from \"./get-object-size.js\";\r\n\r\n/**\r\n * Logs the current application state and its size to the console for debugging purposes\r\n * @function debugState\r\n * @returns {void}\r\n */\r\nexport default function debugState() {\r\n  const state = stateManager.getState();\r\n  const size = getObjectSize(state);\r\n  console.log(size, state);\r\n}\r\n", "import convertCamelToKebabCase from \"./convert-camel-to-kebab-case.js\";\r\nimport debounce from \"./debounce.js\";\r\nimport debugState from \"./debug-state.js\";\r\n\r\n// TODO: rename /utilities to /tools and have /utilities in the foundation folder + inject to modules/utils + tree-shaken\r\n\r\n/**\r\n * Utility functions module\r\n * @module utils\r\n * @description A collection of utility functions for common operations\r\n */\r\n\r\n/**\r\n * Named exports of all utility functions\r\n */\r\nexport { convertCamelToKebabCase, debounce, debugState };\r\n\r\n/**\r\n * Default export providing all utility functions in a frozen object\r\n * @type {Object}\r\n * @property {Function} convertCamelToKebabCase - Converts camelCase strings to kebab-case\r\n * @property {Function} debounce - Creates a debounced version of a function\r\n * @property {Function} debugState - Logs current application state for debugging\r\n */\r\nexport default Object.freeze({\r\n  convertCamelToKebabCase,\r\n  debounce,\r\n  debugState,\r\n});\r\n", "import assert from \"./assert.js\";\r\n\r\n/**\r\n * Converts a numeric value to a pixel string or returns the string value as is\r\n * @param {number|string} [value=0] - The value to convert to a pixel string\r\n * @returns {string|number} The value with \"px\" suffix for non-zero numbers, or original string value\r\n * @throws {AssertionError} When value parameter is missing or not a number or string\r\n */\r\nexport default function getPxValue(value = 0) {\r\n  assert(\r\n    value !== undefined && value !== null,\r\n    \"apis.getPxValue (value) is required\",\r\n  );\r\n  assert(\r\n    typeof value === \"number\" || typeof value === \"string\",\r\n    \"apis.getPxValue (value) must be a number or a string\",\r\n  );\r\n\r\n  return typeof value === \"number\" ? (value === 0 ? 0 : `${value}px`) : value;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getVar from \"./get-var.js\";\r\nimport resourceManager from \"./resource-manager.js\";\r\n\r\n/**\r\n * Gets a space value from CSS variables based on predefined size names\r\n * @param {string} [size=\"\"] - The size name to retrieve\r\n * @returns {string} The CSS variable value for the specified size\r\n * @throws {AssertionError} When size parameter is missing, not a string, or not defined in spaceSizes\r\n * @throws {AssertionError} When resources or its definitions are not available\r\n * @throws {AssertionError} When the specified size is not defined in resources definitions\r\n */\r\nexport default function getSpaceValue(size = \"\") {\r\n  assert(size, \"apis.getSpaceValue (size) is required\");\r\n  assert(\r\n    typeof size === \"string\" && size !== \"\",\r\n    \"apis.getSpaceValue (size) must be a non-empty string\",\r\n  );\r\n\r\n  const resources = resourceManager.getResources();\r\n\r\n  assert(resources, \"apis.getSpaceValue {resources} is required\");\r\n  assert(\r\n    resources.definitions && Object.keys(resources.definitions).length,\r\n    \"apis.getSpaceValue {resources.definitions} is required\",\r\n  );\r\n  assert(\r\n    resources.definitions.spaceSizes.includes(size),\r\n    `apis.getSpaceValue {${size}} is not defined`,\r\n  );\r\n\r\n  return getVar(`space-${size}`);\r\n}\r\n", "import assert from \"./assert.js\";\r\n\r\nexport default function createMurmurHash(key = \"\", seed = 0) {\r\n  assert(key, \"apis.createMurmurHash (key) is required\");\r\n  assert(\r\n    typeof key === \"string\" && key !== \"\",\r\n    \"apis.createMurmurHash (key) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof seed === \"number\" && seed >= 0,\r\n    \"apis.createMurmurHash (seed) must be a positive number\",\r\n  );\r\n\r\n  let remainder = key.length & 3; // NOTE: key.length % 4\r\n  let bytes = key.length - remainder;\r\n  let h1 = seed >>> 0;\r\n  let c1 = 0xcc9e2d51;\r\n  let c2 = 0x1b873593;\r\n  let i = 0;\r\n\r\n  while (i < bytes) {\r\n    let k1 =\r\n      (key.charCodeAt(i) & 0xff) |\r\n      ((key.charCodeAt(++i) & 0xff) << 8) |\r\n      ((key.charCodeAt(++i) & 0xff) << 16) |\r\n      ((key.charCodeAt(++i) & 0xff) << 24);\r\n    ++i;\r\n\r\n    k1 = Math.imul(k1, c1);\r\n    k1 = (k1 << 15) | (k1 >>> 17);\r\n    k1 = Math.imul(k1, c2);\r\n\r\n    h1 ^= k1;\r\n    h1 = (h1 << 13) | (h1 >>> 19);\r\n    h1 = (Math.imul(h1, 5) + 0xe6546b64) >>> 0;\r\n  }\r\n\r\n  let k1 = 0;\r\n  if (remainder > 0) {\r\n    if (remainder >= 3) k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\r\n    if (remainder >= 2) k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\r\n    if (remainder >= 1) k1 ^= key.charCodeAt(i) & 0xff;\r\n\r\n    k1 = Math.imul(k1, c1);\r\n    k1 = (k1 << 15) | (k1 >>> 17);\r\n    k1 = Math.imul(k1, c2);\r\n    h1 ^= k1;\r\n  }\r\n\r\n  h1 ^= key.length;\r\n  h1 ^= h1 >>> 16;\r\n  h1 = Math.imul(h1, 0x85ebca6b);\r\n  h1 ^= h1 >>> 13;\r\n  h1 = Math.imul(h1, 0xc2b2ae35);\r\n  h1 ^= h1 >>> 16;\r\n\r\n  return h1 >>> 0;\r\n}\r\n", "import assert from \"./assert.js\";\r\n\r\nexport default function createShortHash(hash = 0, length = 6) {\r\n  assert(\r\n    typeof hash === \"number\" && hash >= 0,\r\n    \"apis.createShortHash (hash) must be a non-negative number\",\r\n  );\r\n  assert(\r\n    typeof length === \"number\" && length > 0,\r\n    \"apis.createShortHash (length) must be a positive number\",\r\n  );\r\n\r\n  const alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\n  let shortHash = \"\";\r\n  for (let i = 0; i < length; i++) {\r\n    shortHash += alphabet[hash % alphabet.length];\r\n    hash = Math.floor(hash / alphabet.length);\r\n  }\r\n\r\n  return shortHash;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport createMurmurHash from \"./create-murmur-hash.js\";\r\nimport createShortHash from \"./create-short-hash.js\";\r\n\r\nexport default function generateClassName(cssBlock = \"\") {\r\n  assert(cssBlock, \"apis.generateClassName (cssBlock) is required\");\r\n  assert(\r\n    typeof cssBlock === \"string\" && cssBlock !== \"\",\r\n    \"apis.generateClassName (cssBlock) must be a non-empty string\",\r\n  );\r\n\r\n  const murmurHash = createMurmurHash(cssBlock);\r\n  const shortHash = createShortHash(murmurHash);\r\n\r\n  return `s-${shortHash}`;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport generateClassName from \"./generate-class-name.js\";\r\nimport getDocument from \"./get-document.js\";\r\n\r\nclass StyleManager {\r\n  isRenderingCustomComponent = false;\r\n\r\n  renderComponent(name = \"\", component = () => {}, props = {}) {\r\n    assert(\r\n      name && component && props,\r\n      \"apis.styleManager.renderComponent (name, component, props) are required\",\r\n    );\r\n    assert(\r\n      typeof name === \"string\" && name !== \"\",\r\n      \"apis.styleManager.renderComponent (name) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      typeof component === \"function\",\r\n      \"apis.styleManager.renderComponent (component) must be a function\",\r\n    );\r\n    assert(\r\n      typeof props === \"object\" && !Array.isArray(props) && props !== null,\r\n      \"apis.styleManager.renderComponent (props) must be a non-null object\",\r\n    );\r\n\r\n    this.isRenderingCustomComponent = true;\r\n\r\n    const html = component(props);\r\n\r\n    this.isRenderingCustomComponent = false;\r\n\r\n    return html;\r\n  }\r\n\r\n  renderStyle(declarations = []) {\r\n    assert(\r\n      declarations,\r\n      \"apis.styleManager.renderStyle (declarations) is required\",\r\n    );\r\n    assert(\r\n      Array.isArray(declarations),\r\n      \"apis.styleManager.renderStyle (declarations) must be an array\",\r\n    );\r\n\r\n    const document = getDocument();\r\n\r\n    if (!document || !declarations.length) return \"\";\r\n\r\n    let cssBlock = declarations.join(\"\\n\");\r\n    const className = generateClassName(cssBlock);\r\n\r\n    const existingStyle = document.getElementById(className);\r\n    if (existingStyle) return className;\r\n\r\n    const style = document.createElement(\"style\");\r\n    style.id = className;\r\n    style.innerHTML = `.${className} { ${cssBlock} }`;\r\n    document.head.appendChild(style);\r\n\r\n    return className;\r\n  }\r\n}\r\n\r\nexport default new StyleManager();\r\n", "import { convertCamelToKebabCase } from \"../utils/index.js\";\r\nimport assert from \"./assert.js\";\r\nimport getColorValue from \"./get-color-value.js\";\r\nimport getPxValue from \"./get-px-value.js\";\r\nimport getSpaceValue from \"./get-space-value.js\";\r\nimport getVar from \"./get-var.js\";\r\nimport resourceManager from \"./resource-manager.js\";\r\nimport styleManager from \"./style-manager.js\";\r\n\r\n// TODO: refactor if possible!\r\n// TODO: combine inline css props... like backend... + reuse\r\n// NOTE: alignment, border, background, etc = here (generic)\r\n// NOTE: size, color, variant = inside renderer (specific)\r\n\r\n/**\r\n * Processes a style object and converts it into CSS classes and inline styles\r\n * @param {Object} [style={}] - The style object containing various style properties\r\n * @param {string} [type=\"\"] - The primitive type identifier\r\n * @returns {Object} An object with arrays of classes and styles\r\n * @throws {AssertionError} When parameters are invalid\r\n * @throws {AssertionError} When resources or its mappings are not available\r\n */\r\nexport default function getStyleAttributes(style = {}, type = \"\", part = \"\") {\r\n  assert(style, \"apis.getStyleAttributes (style) is required\");\r\n  assert(\r\n    typeof style === \"object\" && !Array.isArray(style) && style !== null,\r\n    \"apis.getStyleAttributes (style) must be a non-null object\",\r\n  );\r\n  assert(\r\n    typeof type === \"string\",\r\n    \"apis.getStyleAttributes (type) must be a string\",\r\n  );\r\n\r\n  const attributes = { class: \"\", style: \"\" };\r\n\r\n  let classes = [];\r\n  let styles = [];\r\n\r\n  const utilityClasses = [];\r\n  const specialUtilityClasses = [];\r\n  const inlineStyle = {};\r\n\r\n  const resources = resourceManager.getResources();\r\n\r\n  assert(resources, \"apis.getStyleAttributes {resources} is required\");\r\n  assert(\r\n    resources.mappings && Object.keys(resources.mappings).length,\r\n    \"apis.getStyleAttributes {resources.mappings} is required\",\r\n  );\r\n  assert(\r\n    resources.mappings.styleProperties &&\r\n      Object.keys(resources.mappings.styleProperties).length,\r\n    \"apis.getStyleAttributes {resources.mappings.styleProperties} is required\",\r\n  );\r\n  assert(\r\n    resources.mappings.classNames &&\r\n      Object.keys(resources.mappings.classNames).length,\r\n    \"apis.getStyleAttributes {resources.mappings.classNames} is required\",\r\n  );\r\n\r\n  const classNames = resources.mappings.classNames;\r\n  const styleProperties = resources.mappings.styleProperties;\r\n\r\n  const hasPrimitiveClass = type && classNames[`primitive-type-${type}`];\r\n  if (hasPrimitiveClass) {\r\n    utilityClasses.push(`primitive-type-${type}`);\r\n  }\r\n\r\n  const hasPartClass = part && classNames[`primitive-part-${part}`];\r\n  if (hasPartClass) {\r\n    utilityClasses.push(`primitive-part-${part}`);\r\n  }\r\n\r\n  for (const [key, value] of Object.entries(style)) {\r\n    assert(\r\n      Object.keys(styleProperties).includes(key),\r\n      `apis.getStyleAttributes {key=\"${key}\"} is not defined`,\r\n    );\r\n\r\n    if (value === undefined) continue;\r\n\r\n    switch (key) {\r\n      case \"borderOpacity\":\r\n      case \"backgroundOpacity\":\r\n      case \"textOpacity\":\r\n      case \"textSize\":\r\n        break;\r\n      case \"size\": {\r\n        const dimensions = value.split(\"x\");\r\n        if (dimensions.length === 2) {\r\n          inlineStyle[\"width\"] = getPxValue(dimensions[0]);\r\n          inlineStyle[\"height\"] = getPxValue(dimensions[1]);\r\n          break;\r\n        }\r\n        // TODO: s, m, l\r\n        utilityClasses.push(`size-${value}`);\r\n        break;\r\n      }\r\n      case \"width\":\r\n      case \"height\":\r\n      case \"minWidth\":\r\n      case \"minHeight\":\r\n      case \"maxWidth\":\r\n      case \"maxHeight\": {\r\n        if (value === \"auto\") {\r\n          inlineStyle[styleProperties[key]] = value;\r\n          break;\r\n        }\r\n        if (typeof value === \"object\" && value !== null) {\r\n          const func = value.function;\r\n          const args = value.arguments.map(getPxValue);\r\n          inlineStyle[styleProperties[key]] = `${func}(${args.join(\", \")})`;\r\n          break;\r\n        }\r\n        inlineStyle[styleProperties[key]] = getPxValue(value);\r\n        break;\r\n      }\r\n      case \"color\": {\r\n        utilityClasses.push(`color-${value}`);\r\n        break;\r\n      }\r\n      case \"position\":\r\n      case \"placement\": {\r\n        utilityClasses.push(`position-${value}`);\r\n        break;\r\n      }\r\n      case \"inset\":\r\n      case \"top\":\r\n      case \"right\":\r\n      case \"bottom\":\r\n      case \"left\": {\r\n        try {\r\n          inlineStyle[key] = getSpaceValue(value);\r\n        } catch {\r\n          if (typeof value === \"object\" && value !== null) {\r\n            const func = value.function;\r\n            const args = value.arguments.map(getPxValue);\r\n            inlineStyle[key] = `${func}(${args.join(\", \")})`;\r\n            break;\r\n          }\r\n          inlineStyle[key] = getPxValue(value);\r\n        }\r\n        break;\r\n      }\r\n      case \"zOrder\": {\r\n        // TODO: specific range to not conflict (dev-land)\r\n        inlineStyle[\"z-index\"] = value;\r\n        break;\r\n      }\r\n      case \"displayType\": {\r\n        utilityClasses.push(`display-${value}`);\r\n        break;\r\n      }\r\n      case \"flexDirection\":\r\n      case \"flexWrap\": {\r\n        const mappedKey = styleProperties[key];\r\n        utilityClasses.push(`display-${mappedKey}-${value}`);\r\n        break;\r\n      }\r\n      case \"gridColumns\":\r\n      case \"gridRows\": {\r\n        const convertedKey = convertCamelToKebabCase(key);\r\n        if (typeof value === \"number\") {\r\n          specialUtilityClasses.push({\r\n            name: `display-${convertedKey}-n`,\r\n            value,\r\n          });\r\n        } else if (value.startsWith(\"auto\")) {\r\n          const parts = value.split(\"-\");\r\n          if (parts[1] === \"fill\") {\r\n            utilityClasses.push(`display-${convertedKey}-auto-fill`);\r\n          } else if (parts[1] === \"fit\") {\r\n            utilityClasses.push(`display-${convertedKey}-auto-fit`);\r\n          } else {\r\n            specialUtilityClasses.push({\r\n              name: `display-${convertedKey}-auto-n`,\r\n              value: value.split(\"-\")[1],\r\n            });\r\n          }\r\n        } else {\r\n          utilityClasses.push(`display-${convertedKey}-${value}`);\r\n        }\r\n        break;\r\n      }\r\n      case \"gridAutoFlow\": {\r\n        utilityClasses.push(`display-grid-auto-flow-${value}`);\r\n        break;\r\n      }\r\n      // TODO: check inline styles e.g. constant size 100px\r\n      case \"gridAutoColumns\": {\r\n        utilityClasses.push(`display-grid-auto-columns-${value}`);\r\n        break;\r\n      }\r\n      // TODO: check inline styles e.g. constant size 100px\r\n      case \"gridAutoRows\": {\r\n        utilityClasses.push(`display-grid-auto-rows-${value}`);\r\n        break;\r\n      }\r\n      // TODO: column, row, area\r\n      case \"justifyContent\":\r\n      case \"justifyItems\":\r\n      case \"alignContent\":\r\n      case \"alignItems\":\r\n      case \"placeContent\":\r\n      case \"placeItems\": {\r\n        const mappedKey = styleProperties[key];\r\n        utilityClasses.push(`alignment-${mappedKey}-${value}`);\r\n        break;\r\n      }\r\n      case \"gridColumn\":\r\n      case \"gridColumnStart\":\r\n      case \"gridColumnEnd\":\r\n      case \"gridRow\":\r\n      case \"gridRowStart\":\r\n      case \"gridRowEnd\": {\r\n        const mappedKey = styleProperties[key];\r\n        if (value === \"auto\" || value === \"full\") {\r\n          utilityClasses.push(`self-${mappedKey}-${value}`);\r\n          break;\r\n        }\r\n        specialUtilityClasses.push({\r\n          name: `self-${mappedKey}-n`,\r\n          value,\r\n        });\r\n        break;\r\n      }\r\n      case \"flexGrow\":\r\n      case \"flexShrink\":\r\n      case \"placeSelf\":\r\n      case \"justifySelf\":\r\n      case \"alignSelf\": {\r\n        const mappedKey = styleProperties[key];\r\n        utilityClasses.push(`self-${mappedKey}-${value}`);\r\n        break;\r\n      }\r\n      // TODO: more spacing util classes\r\n      case \"margin\":\r\n      case \"marginBlock\":\r\n      case \"marginBlockStart\":\r\n      case \"marginBlockEnd\":\r\n      case \"marginInline\":\r\n      case \"marginInlineStart\":\r\n      case \"marginInlineEnd\":\r\n      case \"padding\":\r\n      case \"paddingBlock\":\r\n      case \"paddingBlockStart\":\r\n      case \"paddingBlockEnd\":\r\n      case \"paddingInline\":\r\n      case \"paddingInlineStart\":\r\n      case \"paddingInlineEnd\": {\r\n        const mappedKey = styleProperties[key];\r\n        utilityClasses.push(`space-${mappedKey}-${value}`);\r\n        break;\r\n      }\r\n      case \"gutter\":\r\n      case \"gutterColumn\":\r\n      case \"gutterRow\": {\r\n        const convertedKey = convertCamelToKebabCase(key);\r\n        utilityClasses.push(`space-${convertedKey}-${value}`);\r\n        break;\r\n      }\r\n      case \"cornerRadius\":\r\n      case \"cornerStartStartRadius\":\r\n      case \"cornerStartEndRadius\":\r\n      case \"cornerEndStartRadius\":\r\n      case \"cornerEndEndRadius\": {\r\n        const convertedKey = convertCamelToKebabCase(key);\r\n        utilityClasses.push(`${convertedKey}-${value}`);\r\n        break;\r\n      }\r\n      // TODO: border block/inline\r\n      case \"borderWidth\":\r\n      case \"borderStyle\": {\r\n        const mappedKey = styleProperties[key];\r\n        utilityClasses.push(`${mappedKey}-${value}`);\r\n        break;\r\n      }\r\n      case \"borderColor\": {\r\n        if (style.borderOpacity !== undefined) {\r\n          inlineStyle[\"border-color\"] = getColorValue(\r\n            value,\r\n            style.borderOpacity,\r\n          );\r\n          break;\r\n        }\r\n        utilityClasses.push(`border-color-${value}`);\r\n        break;\r\n      }\r\n      case \"backgroundColor\": {\r\n        if (style.backgroundOpacity !== undefined) {\r\n          inlineStyle[\"background-color\"] = getColorValue(\r\n            value,\r\n            style.backgroundOpacity,\r\n          );\r\n          break;\r\n        }\r\n        utilityClasses.push(`background-color-${value}`);\r\n        break;\r\n      }\r\n      case \"backgroundImages\": {\r\n        const backgroundImagesList = value.map((backgroundImage) => {\r\n          if (backgroundImage.function === \"url\") {\r\n            return `url('${backgroundImage.arguments[0]}')`;\r\n          } else {\r\n            const func = backgroundImage.function;\r\n            const args = backgroundImage.arguments;\r\n            return `${func}(${args.join(\", \")})`;\r\n          }\r\n        });\r\n        inlineStyle[\"background-image\"] = backgroundImagesList.join(\", \");\r\n        break;\r\n      }\r\n      case \"elevation\": {\r\n        utilityClasses.push(`elevation-${value}`);\r\n        break;\r\n      }\r\n      case \"textRole\": {\r\n        const textSize = style.textSize ?? \"medium\";\r\n        utilityClasses.push(`text-role-${value}-${textSize}`);\r\n        break;\r\n      }\r\n      case \"textColor\": {\r\n        if (style.textOpacity !== undefined) {\r\n          inlineStyle[\"color\"] = getColorValue(value, style.textOpacity);\r\n          break;\r\n        }\r\n        utilityClasses.push(`text-color-${value}`);\r\n        break;\r\n      }\r\n      case \"textDecoration\": {\r\n        utilityClasses.push(`text-decoration-${value}`);\r\n        break;\r\n      }\r\n      // TODO: more text styles\r\n      case \"transformations\": {\r\n        const transformationsList = value.map((transformation) => {\r\n          const func = transformation.function;\r\n          const args = transformation.arguments.map(getPxValue);\r\n          return `${func}(${args.join(\", \")})`;\r\n        });\r\n        inlineStyle[\"transform\"] = transformationsList.join(\" \");\r\n        break;\r\n      }\r\n      case \"filters\": {\r\n        const filtersList = value.map((filter) => {\r\n          const func = filter.function;\r\n          const args = filter.arguments.map(getPxValue);\r\n          return `${func}(${args.join(\" \")})`;\r\n        });\r\n        inlineStyle[\"filter\"] = filtersList.join(\" \");\r\n        break;\r\n      }\r\n      case \"backdropFilters\": {\r\n        const filtersList = value.map((filter) => {\r\n          const func = filter.function;\r\n          const args = filter.arguments.map(getPxValue);\r\n          return `${func}(${args.join(\" \")})`;\r\n        });\r\n        inlineStyle[\"backdrop-filter\"] = filtersList.join(\" \");\r\n        break;\r\n      }\r\n      case \"transitions\": {\r\n        const transitionsList = value.map((transition) => {\r\n          const property = styleProperties[transition.property] || \"all\";\r\n          const duration = getVar(`motion-duration-${transition.duration}`);\r\n          const easing = getVar(`motion-easing-${transition.easing}`);\r\n          return `${property} ${duration} ${easing}`;\r\n        });\r\n        inlineStyle[\"transition\"] = transitionsList.join(\", \");\r\n        break;\r\n      }\r\n      // TODO: special :: + :\r\n      default: {\r\n        inlineStyle[styleProperties[key]] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (utilityClasses.length || specialUtilityClasses.length) {\r\n    classes = []\r\n      .concat(\r\n        utilityClasses.map((name) => classNames[name]),\r\n        specialUtilityClasses.map(\r\n          ({ name, value }) => `${classNames[name]}${value}`,\r\n        ),\r\n      )\r\n      .filter(Boolean);\r\n  }\r\n\r\n  if (Object.keys(inlineStyle).length) {\r\n    styles = Object.entries(inlineStyle).map(\r\n      ([key, value]) => `${key}: ${value};`,\r\n    );\r\n  }\r\n\r\n  if (styleManager.isRenderingCustomComponent) {\r\n    const className = styleManager.renderStyle(styles);\r\n    if (className) classes.push(className);\r\n    styles = [];\r\n  }\r\n\r\n  attributes.class = classes.join(\" \");\r\n  attributes.style = styles.join(\" \");\r\n\r\n  return attributes;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getAriaAttributes from \"./get-aria-attributes.js\";\r\nimport getControlAttributes from \"./get-control-attributes.js\";\r\nimport getDataAttributes from \"./get-data-attributes.js\";\r\nimport getStyleAttributes from \"./get-style-attributes.js\";\r\n\r\n/**\r\n * Composes HTML attributes from a structured object containing various attribute types\r\n * @param {Object} [struct={}] - Structure object containing data, aria, control, and style properties\r\n * @returns {Object} Combined attributes object with properly formatted HTML attributes\r\n * @throws {AssertionError} When struct parameter is missing or not a non-null object\r\n */\r\nexport default function getAttributes(struct = {}) {\r\n  assert(struct, \"getAttributes (struct) is required\");\r\n  assert(\r\n    typeof struct === \"object\" && !Array.isArray(struct) && struct !== null,\r\n    \"apis.getAttributes (struct) must be a non-null object\",\r\n  );\r\n\r\n  const attributes = {};\r\n\r\n  if (struct.data) {\r\n    Object.assign(attributes, getDataAttributes(struct.data));\r\n  }\r\n\r\n  if (struct.control) {\r\n    Object.assign(attributes, getControlAttributes(struct.control));\r\n  }\r\n\r\n  if (struct.aria) {\r\n    Object.assign(attributes, getAriaAttributes(struct.aria));\r\n  }\r\n\r\n  if (struct.style?.screenReaderOnly) {\r\n    attributes[\"class\"] = \"sr\";\r\n  } else {\r\n    const styleAttributes = getStyleAttributes(\r\n      struct.style,\r\n      struct.type,\r\n      struct.part,\r\n    );\r\n    if (styleAttributes.class) {\r\n      attributes[\"class\"] = styleAttributes.class;\r\n    }\r\n    if (styleAttributes.style) {\r\n      attributes[\"style\"] = styleAttributes.style;\r\n    }\r\n  }\r\n\r\n  return attributes;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getAttributes from \"./get-attributes.js\";\r\n\r\n// TODO: list of supported tags\r\n\r\n/**\r\n * Generates an HTML opening tag with attributes derived from a structure object\r\n * @param {string} [tag=\"div\"] - The HTML tag name\r\n * @param {Object} [struct={}] - Structure object containing attributes data\r\n * @returns {string} The HTML opening tag with attributes\r\n * @throws {AssertionError} When parameters are missing or invalid\r\n */\r\nexport default function getOpeningHtmlTag(tag = \"div\", struct = {}) {\r\n  assert(tag && struct, \"apis.getOpeningHtmlTag (tag, struct) are required\");\r\n  assert(\r\n    typeof tag === \"string\" && tag !== \"\",\r\n    \"apis.getOpeningHtmlTag (tag) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof struct === \"object\" && !Array.isArray(struct) && struct !== null,\r\n    \"apis.getOpeningHtmlTag (struct) must be a non-null object\",\r\n  );\r\n\r\n  let html = \"\";\r\n\r\n  if (!tag) return html;\r\n\r\n  html += `<${tag}`;\r\n\r\n  const attributes = getAttributes(struct);\r\n\r\n  for (const [key, value] of Object.entries(attributes)) {\r\n    if (value === true) {\r\n      html += ` ${key}`;\r\n    } else if (value) {\r\n      html += ` ${key}=\"${value}\"`;\r\n    }\r\n  }\r\n\r\n  html += \">\";\r\n\r\n  return html;\r\n}\r\n", "import assert from \"./assert.js\";\r\n\r\n// TODO: list of supported tags\r\n\r\n/**\r\n * Generates an SVG opening tag with attributes\r\n * @param {string} [tag=\"div\"] - The SVG tag name\r\n * @param {Object} [attributes={}] - Structure object containing attributes\r\n * @returns {string} The SVG opening tag with attributes\r\n * @throws {AssertionError} When parameters are missing or invalid\r\n */\r\nexport default function getOpeningSvgTag(tag = \"svg\", attributes = {}) {\r\n  assert(\r\n    tag && attributes,\r\n    \"apis.getOpeningSvgTag (tag, attributes) are required\",\r\n  );\r\n  assert(\r\n    typeof tag === \"string\" && tag !== \"\",\r\n    \"apis.getOpeningSvgTag (tag) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof attributes === \"object\" &&\r\n      !Array.isArray(attributes) &&\r\n      attributes !== null,\r\n    \"apis.getOpeningSvgTag (attributes) must be a non-null object\",\r\n  );\r\n\r\n  let html = \"\";\r\n\r\n  if (!tag) return html;\r\n\r\n  html += `<${tag}`;\r\n\r\n  for (const [key, value] of Object.entries(attributes)) {\r\n    html += ` ${key}=\"${value.toString()}\"`;\r\n  }\r\n\r\n  html += \">\";\r\n\r\n  return html;\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getComputedStyleProperty from \"./get-computed-style-property.js\";\r\nimport getDocument from \"./get-document.js\";\r\nimport resourceManager from \"./resource-manager.js\";\r\n\r\n/**\r\n * Gets a design token value from CSS variables via its key\r\n * @param {string} [key=\"\"] - The token key to retrieve\r\n * @returns {string|null} The CSS variable value or null if not in client environment\r\n * @throws {AssertionError} When key parameter is missing, not a string, or not mapped\r\n */\r\nexport default function getTokenValue(key = \"\") {\r\n  assert(key, \"apis.getTokenValue (key) is required\");\r\n  assert(\r\n    typeof key === \"string\" && key !== \"\",\r\n    \"apis.getTokenValue (key) must be a non-empty string\",\r\n  );\r\n\r\n  const resources = resourceManager.getResources();\r\n\r\n  assert(\r\n    resources.mappings?.tokenKeys[key],\r\n    `apis.getTokenValue {${key}} is not mapped`,\r\n  );\r\n\r\n  const document = getDocument();\r\n  if (!document) return null;\r\n\r\n  const property = `--${resources.mappings.tokenKeys[key]}`;\r\n  return getComputedStyleProperty(document.documentElement, property);\r\n}\r\n", "import assert from \"./assert.js\";\r\n\r\n/**\r\n * Manages dynamic module imports with caching\r\n * @class ImportManager\r\n */\r\nclass ImportManager {\r\n  #cache = new Map();\r\n\r\n  /**\r\n   * Imports a module dynamically and executes a callback when loaded\r\n   * @param {string} [moduleName=\"\"] - The name/path of the module to import\r\n   * @param {Function} [callback=()=>{}] - Callback function that receives the imported module\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  importModule(moduleName = \"\", callback = () => {}) {\r\n    assert(\r\n      moduleName && callback,\r\n      \"apis.importManager.importModule (moduleName, callback) are required\",\r\n    );\r\n    assert(\r\n      typeof moduleName === \"string\" && moduleName !== \"\",\r\n      \"apis.importManager.importModule (moduleName) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      typeof callback === \"function\",\r\n      \"apis.importManager.importModule (callback) must be a function\",\r\n    );\r\n\r\n    if (this.#cache.has(moduleName)) {\r\n      callback(this.#cache.get(moduleName));\r\n      return;\r\n    }\r\n    import(moduleName)\r\n      .then((module) => {\r\n        this.#cache.set(moduleName, module.default);\r\n        callback(module.default);\r\n      })\r\n      .catch((error) => {\r\n        console.error(`Failed to import module: ${moduleName}`, error);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Imports multiple modules in parallel and executes a callback when all are loaded\r\n   * @param {string[]} [moduleNames=[]] - Array of module names/paths to import\r\n   * @param {Function} [callback=()=>{}] - Callback function that receives array of imported modules\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  importModules(moduleNames = [], callback = () => {}) {\r\n    assert(\r\n      moduleNames && callback,\r\n      \"apis.importManager.importModules (moduleNames, callback) are required\",\r\n    );\r\n    assert(\r\n      Array.isArray(moduleNames) && moduleNames.length > 0,\r\n      \"apis.importManager.importModules (moduleNames) must be a non-empty array\",\r\n    );\r\n    assert(\r\n      moduleNames.every((name) => typeof name === \"string\" && name !== \"\"),\r\n      \"apis.importManager.importModules (moduleNames) must be an array of non-empty strings\",\r\n    );\r\n    assert(\r\n      typeof callback === \"function\",\r\n      \"apis.importManager.importModules (callback) must be a function\",\r\n    );\r\n\r\n    const promises = moduleNames.map((moduleName) => {\r\n      if (this.#cache.has(moduleName)) {\r\n        return Promise.resolve(this.#cache.get(moduleName));\r\n      }\r\n      return import(moduleName)\r\n        .then((module) => {\r\n          this.#cache.set(moduleName, module.default);\r\n          return module.default;\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Failed to import module: ${moduleName}`, error);\r\n        });\r\n    });\r\n    Promise.all(promises).then((modules) => {\r\n      callback(modules);\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton instance of ImportManager for managing dynamic imports\r\n * @type {ImportManager}\r\n */\r\nexport default new ImportManager();\r\n", "import assert from \"./assert.js\";\r\nimport getClosingHtmlTag from \"./get-closing-html-tag.js\";\r\nimport getColorValue from \"./get-color-value.js\";\r\nimport getDocument from \"./get-document.js\";\r\nimport getElementById from \"./get-element-by-id.js\";\r\nimport getMapping from \"./get-mapping.js\";\r\nimport getOpeningHtmlTag from \"./get-opening-html-tag.js\";\r\nimport querySelector from \"./query-selector.js\";\r\n\r\n// TODO: modals stack? -> view state...\r\n\r\n/**\r\n * Manages modal dialogs in the application\r\n * @class ModalManager\r\n */\r\nclass ModalManager {\r\n  #isManaging = false;\r\n  #modals = new Map();\r\n  #modalContainerId = \"mc\";\r\n  #shellContainerId = \"sc\";\r\n\r\n  /**\r\n   * Starts managing and registers global event listeners for modal management\r\n   */\r\n  manage() {\r\n    const document = getDocument();\r\n    if (!document) return;\r\n\r\n    if (this.#isManaging) {\r\n      console.warn(\"ModalManager is already managing the application\");\r\n      return;\r\n    }\r\n\r\n    this.#isManaging = true;\r\n\r\n    document.addEventListener(\"click\", (event) => {\r\n      if (event.target.dataset?.mi) {\r\n        this.#modals.get(event.target.dataset.mi).handlers.close();\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      if (event.key === \"Escape\") {\r\n        const modalContainer = getElementById(this.#modalContainerId);\r\n        if (modalContainer.children.length === 0) return;\r\n        const element = modalContainer.lastChild;\r\n        this.#modals.get(element.dataset.mi).handlers.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets a modal element by its ID\r\n   * @param {string} [id=\"\"] - The modal ID\r\n   * @returns {Element|null} The modal element or null if not found\r\n   * @throws {AssertionError} When id parameter is missing or not a non-empty string\r\n   */\r\n  getModal(id = \"\") {\r\n    assert(id, \"apis.modalManager.getModal (id) is required\");\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.modalManager.getModal (id) must be a non-empty string\",\r\n    );\r\n\r\n    const mappedKey = getMapping(\"dataAttributes\", \"modalId\");\r\n    return querySelector(`[data-${mappedKey}=\"${id}\"]`);\r\n  }\r\n\r\n  /**\r\n   * Sets up a modal configuration\r\n   * @param {Object} [container={}] - The modal container configuration object\r\n   * @param {Function} [component=()=>{}] - Function that returns the modal content HTML\r\n   * @param {Object} [handlers={}] - Object containing open and close handler functions\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  setModal(container = {}, component = () => {}, handlers = {}) {\r\n    assert(\r\n      container && component && handlers,\r\n      \"apis.modalManager.setModal (container, component, handlers) are required\",\r\n    );\r\n    assert(\r\n      typeof container === \"object\" &&\r\n        !Array.isArray(container) &&\r\n        container !== null,\r\n      \"apis.modalManager.setModal (container) must be a non-null object\",\r\n    );\r\n    assert(\r\n      typeof component === \"function\",\r\n      \"apis.modalManager.setModal (component) must be a function\",\r\n    );\r\n    assert(\r\n      typeof handlers === \"object\" &&\r\n        !Array.isArray(handlers) &&\r\n        handlers !== null,\r\n      \"apis.modalManager.setModal (handlers) must be a non-null object\",\r\n    );\r\n    assert(\r\n      typeof handlers.open === \"function\" &&\r\n        typeof handlers.close === \"function\",\r\n      \"apis.modalManager.setModal (handlers) must have open and close functions\",\r\n    );\r\n\r\n    const id = container?.data?.modalId;\r\n    if (!id || this.#modals.has(id)) return;\r\n    this.#modals.set(id, { container, component, handlers });\r\n  }\r\n\r\n  /**\r\n   * Mounts a modal in the DOM\r\n   * @param {string} [id=\"\"] - The modal ID to mount\r\n   * @returns {Element|undefined} The mounted modal element or undefined if modal not found\r\n   * @throws {AssertionError} When id parameter is missing or not a non-empty string\r\n   */\r\n  mountModal(id = \"\") {\r\n    assert(id, \"apis.modalManager.mountModal (id) is required\");\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.modalManager.mountModal (id) must be a non-empty string\",\r\n    );\r\n\r\n    const modal = this.#modals.get(id);\r\n    if (!modal) return;\r\n\r\n    const sheetContainer = getElementById(this.#shellContainerId);\r\n    sheetContainer.setAttribute(\"inert\", \"\");\r\n\r\n    const modalContainer = getElementById(this.#modalContainerId);\r\n    modalContainer.style.display = \"block\";\r\n    modalContainer.style.backgroundColor = getColorValue(\"scrim\");\r\n\r\n    const exists = this.getModal(id);\r\n    if (exists) return exists; // CHECK: modal.remove();\r\n\r\n    let html = \"\";\r\n    html += getOpeningHtmlTag(\"div\", modal.container);\r\n    html += modal.component();\r\n    html += getClosingHtmlTag(\"div\");\r\n    modalContainer.innerHTML += html;\r\n\r\n    const element = this.getModal(id);\r\n    void element.offsetWidth; // NOTE: trigger reflow\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Creates a callback function to finalize modal unmounting\r\n   * @private\r\n   * @param {string} [id=\"\"] - The modal ID\r\n   * @param {HTMLElement} [modalContainer=null] - The modal container element\r\n   * @returns {Function} Callback function to complete the unmounting process\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  #unmountModalEnd(id = \"\", modalContainer = null) {\r\n    assert(\r\n      id && modalContainer,\r\n      \"apis.modalManager.#unmountModalEnd (id, modalContainer) are required\",\r\n    );\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.modalManager.#unmountModalEnd (id) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      modalContainer instanceof HTMLElement,\r\n      \"apis.modalManager.#unmountModalEnd (modalContainer) must be an instance of HTMLElement\",\r\n    );\r\n\r\n    return (element) => {\r\n      if (!element) return;\r\n\r\n      const modal = this.#modals.get(id);\r\n      if (!modal) return;\r\n\r\n      element.remove();\r\n\r\n      if (modalContainer.children.length === 0) {\r\n        modalContainer.style.display = \"none\";\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initiates unmounting of a modal from the DOM\r\n   * @param {string} [id=\"\"] - The modal ID to unmount\r\n   * @param {Function} [callback=()=>{}] - Callback function to execute after animation\r\n   * @throws {AssertionError} When parameters are missing or invalid\r\n   */\r\n  unmountModal(id = \"\", callback = () => {}) {\r\n    assert(\r\n      id && callback,\r\n      \"apis.modalManager.unmountModal (id, callback) are required\",\r\n    );\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.modalManager.unmountModal (id) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      typeof callback === \"function\",\r\n      \"apis.modalManager.unmountModal (callback) must be a function\",\r\n    );\r\n\r\n    const modalContainer = getElementById(this.#modalContainerId);\r\n\r\n    if (modalContainer.children.length === 0) return;\r\n    if (modalContainer.children.length === 1) {\r\n      const sheetContainer = getElementById(this.#shellContainerId);\r\n      sheetContainer.removeAttribute(\"inert\");\r\n      modalContainer.style.backgroundColor = \"transparent\";\r\n    }\r\n\r\n    callback(this.#unmountModalEnd(id, modalContainer));\r\n  }\r\n\r\n  /**\r\n   * Opens a modal by calling its open handler\r\n   * @param {string} [id=\"\"] - The modal ID to open\r\n   * @throws {AssertionError} When id parameter is missing, not a non-empty string, or not set\r\n   */\r\n  openModal(id = \"\") {\r\n    assert(id, \"apis.modalManager.openModal (id) is required\");\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.modalManager.openModal (id) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      this.#modals.has(id),\r\n      \"apis.modalManager.openModal {modal} is not set\",\r\n    );\r\n\r\n    this.#modals.get(id).handlers.open();\r\n  }\r\n\r\n  /**\r\n   * Closes a modal by calling its close handler\r\n   * @param {string} [id=\"\"] - The modal ID to close\r\n   * @throws {AssertionError} When id parameter is missing, not a non-empty string, or not set\r\n   */\r\n  closeModal(id = \"\") {\r\n    assert(id, \"apis.modalManager.closeModal (id) is required\");\r\n    assert(\r\n      typeof id === \"string\" && id !== \"\",\r\n      \"apis.modalManager.closeModal (id) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      this.#modals.has(id),\r\n      \"apis.modalManager.closeModal {modal} is not set\",\r\n    );\r\n\r\n    this.#modals.get(id).handlers.close();\r\n  }\r\n\r\n  /**\r\n   * Closes all modals\r\n   */\r\n  closeModals() {\r\n    for (const [id, { handlers }] of this.#modals) {\r\n      handlers.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes all modals and clears the internal modals collection\r\n   */\r\n  clearModals() {\r\n    this.closeModals();\r\n    this.#modals.clear();\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton instance of ModalManager for managing modals throughout the application\r\n * @type {ModalManager}\r\n */\r\nexport default new ModalManager();\r\n", "import assert from \"./assert.js\";\r\n\r\nexport default function cloneObject(object = {}) {\r\n  assert(object, \"apis.cloneObject (object) is required\");\r\n  assert(\r\n    typeof object === \"object\",\r\n    \"apis.cloneObject (object) must be an object\",\r\n  );\r\n\r\n  if (object instanceof URL) {\r\n    return new URL(object.href);\r\n  }\r\n\r\n  if (typeof structuredClone === \"function\") {\r\n    return structuredClone(object);\r\n  }\r\n\r\n  return JSON.parse(JSON.stringify(object));\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport cloneObject from \"./clone-object.js\";\r\n// import shallowCloneObject from \"./shallow-clone-object.js\";\r\n\r\n// TODO: need to optimize it totally! it's the core of everything! shallowCloneObject but better!\r\n// TODO: can i track values? + view state and debug/show them on the editor? if dev? view.debug...\r\n\r\nconst computeStack = [];\r\n\r\n/**\r\n * Creates a computed reactive value that updates when its dependencies change\r\n * @param {Function} computeFn - Function that computes the derived value\r\n * @returns {ReactiveValue}\r\n */\r\nfunction createComputedValue(computeFn = () => {}) {\r\n  assert(\r\n    computeFn,\r\n    \"apis.ReactiveValue-createComputedValue (computeFn) is required\",\r\n  );\r\n  assert(\r\n    typeof computeFn === \"function\",\r\n    \"apis.ReactiveValue-createComputedValue (computeFn) must be a function\",\r\n  );\r\n\r\n  let derived;\r\n  const context = {\r\n    callback: () => {\r\n      derived.value = computeFn();\r\n    },\r\n    dependencies: new Set(),\r\n  };\r\n\r\n  computeStack.push(context);\r\n  let initialValue;\r\n  try {\r\n    initialValue = computeFn();\r\n  } finally {\r\n    computeStack.pop();\r\n  }\r\n\r\n  derived = new ReactiveValue(initialValue, context);\r\n  return derived;\r\n}\r\n\r\nconst MUTATORS = {\r\n  Array: [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\", \"sort\", \"reverse\"],\r\n  Set: [\"add\", \"delete\", \"clear\"],\r\n  Map: [\"set\", \"delete\", \"clear\"],\r\n};\r\n\r\n/**\r\n * Creates a reactive proxy for an object with getter/setter tracking\r\n * @param {Object} initialValue - The object to make reactive\r\n * @param {Function} onGet - Callback when a property is accessed\r\n * @param {Function} onSet - Callback when a property is set\r\n * @param {Object} root - The root object for deep cloning\r\n * @returns {Proxy} A reactive proxy of the object\r\n */\r\nfunction createProxyValue(object, onGet, onSet, root = object) {\r\n  const handler = {\r\n    get(target, property) {\r\n      const value = Reflect.get(target, property);\r\n      onGet();\r\n\r\n      if (value && typeof value === \"object\") {\r\n        return createProxyValue(value, onGet, onSet, root);\r\n      }\r\n\r\n      const constructorName = target.constructor?.name;\r\n\r\n      if (constructorName && typeof value === \"function\") {\r\n        if (\r\n          MUTATORS[constructorName] &&\r\n          MUTATORS[constructorName].includes(property)\r\n        ) {\r\n          return function wrappedMutator(...args) {\r\n            const oldRoot = cloneObject(root);\r\n            const result = value.apply(target, args);\r\n            onSet(root, oldRoot);\r\n            return result;\r\n          };\r\n        }\r\n\r\n        return function wrappedMethod(...args) {\r\n          return value.apply(target, args);\r\n        };\r\n      }\r\n\r\n      return value;\r\n    },\r\n    set(target, property, value) {\r\n      const oldRoot = cloneObject(root);\r\n      const result = Reflect.set(target, property, value);\r\n      onSet(root, oldRoot);\r\n      return result;\r\n    },\r\n    deleteProperty(target, property) {\r\n      const oldRoot = cloneObject(root);\r\n      const result = Reflect.deleteProperty(target, property);\r\n      onSet(root, oldRoot);\r\n      return result;\r\n    },\r\n  };\r\n\r\n  return new Proxy(object, handler);\r\n}\r\n\r\nconst TEMPORAL_STRUCTURES = [\r\n  \"PlainDateTime\",\r\n  \"ZonedDateTime\",\r\n  \"Instant\",\r\n  \"Duration\",\r\n  \"PlainDate\",\r\n  \"PlainTime\",\r\n  \"PlainYearMonth\",\r\n  \"PlainMonthDay\",\r\n  \"Calendar\",\r\n];\r\n\r\nfunction isTemporal(value = null) {\r\n  return (\r\n    value &&\r\n    typeof value === \"object\" &&\r\n    TEMPORAL_STRUCTURES.includes(value.constructor?.name)\r\n  );\r\n}\r\n\r\nfunction isPrimitive(value = null) {\r\n  return value === null || typeof value !== \"object\";\r\n}\r\n\r\n/**\r\n * Implements a reactive value with subscription capabilities\r\n * @class ReactiveValue\r\n */\r\nexport default class ReactiveValue {\r\n  #initial = null;\r\n  #value = null;\r\n  #callbacks = new Set();\r\n  #computedContext = null;\r\n  // #isDirty = false;\r\n\r\n  #cloneValue(value = null) {\r\n    if (isPrimitive(value) || isTemporal(value)) {\r\n      return value;\r\n    }\r\n    return cloneObject(value);\r\n  }\r\n\r\n  #createValue(value = null) {\r\n    if (isPrimitive(value) || isTemporal(value)) {\r\n      return value;\r\n    }\r\n    const onGet = () => {\r\n      const top = computeStack[computeStack.length - 1];\r\n      if (top) {\r\n        this.#callbacks.add(top.callback);\r\n        top.dependencies.add(this);\r\n      }\r\n    };\r\n    const onSet = (newValue, oldValue) => {\r\n      if (newValue !== oldValue) {\r\n        this.#callbacks.forEach((callback) => callback(newValue, oldValue));\r\n      }\r\n    };\r\n    return createProxyValue(this.#cloneValue(value), onGet, onSet);\r\n  }\r\n\r\n  /**\r\n   * Creates a new reactive value\r\n   * @param {*} initialValue - The initial value to set\r\n   */\r\n  constructor(initialValue = null, computedContext = null) {\r\n    if (typeof initialValue === \"function\") {\r\n      return createComputedValue(initialValue);\r\n    }\r\n\r\n    if (computedContext) {\r\n      assert(\r\n        computedContext.callback && computedContext.dependencies,\r\n        \"apis.ReactiveValue.constructor (computedContext) is invalid\",\r\n      );\r\n    }\r\n\r\n    this.#initial = this.#cloneValue(initialValue);\r\n    this.#value = this.#createValue(initialValue);\r\n    this.#computedContext = computedContext;\r\n  }\r\n\r\n  /**\r\n   * Gets the current value and subscribes to changes if in a computed context\r\n   * @returns {*} The current value\r\n   */\r\n  get value() {\r\n    const top = computeStack[computeStack.length - 1];\r\n    if (top) {\r\n      this.#callbacks.add(top.callback);\r\n      top.dependencies.add(this);\r\n    }\r\n    return this.#value;\r\n  }\r\n\r\n  /**\r\n   * Sets a new value and notifies all subscribers if the value has changed\r\n   * @param {*} newValue - The new value to set\r\n   */\r\n  set value(newValue = null) {\r\n    const oldValue = this.#value;\r\n    if (oldValue !== newValue) {\r\n      this.#value = this.#createValue(newValue);\r\n      this.#callbacks.forEach((callback) => callback(this.#value, oldValue));\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const oldValue = this.#value;\r\n    if (oldValue !== this.#initial) {\r\n      this.#value = this.#createValue(this.#initial);\r\n      this.#callbacks.forEach((callback) => callback(this.#value, oldValue));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscribes a callback to value changes\r\n   * @param {Function} callback - Function to add to subscriptions\r\n   * @returns {Function} Function to remove the callback from subscriptions\r\n   */\r\n  subscribe(callback = () => {}) {\r\n    assert(callback, \"apis.ReactiveValue.subscribe (callback) is required\");\r\n    assert(\r\n      typeof callback === \"function\",\r\n      \"apis.ReactiveValue.subscribe (callback) must be a function\",\r\n    );\r\n\r\n    this.#callbacks.add(callback);\r\n    return () => this.#callbacks.delete(callback);\r\n  }\r\n\r\n  /**\r\n   * Unsubscribes a callback from value changes\r\n   * @param {Function} callback - Function to remove from subscriptions\r\n   */\r\n  unsubscribe(callback = () => {}) {\r\n    assert(callback, \"apis.ReactiveValue.unsubscribe (callback) is required\");\r\n    assert(\r\n      typeof callback === \"function\",\r\n      \"apis.ReactiveValue.unsubscribe (callback) must be a function\",\r\n    );\r\n\r\n    this.#callbacks.delete(callback);\r\n  }\r\n\r\n  /**\r\n   * Unsubscribes all callbacks and detach from dependencies\r\n   */\r\n  unsubscribeAll() {\r\n    this.#callbacks.clear();\r\n    if (this.#computedContext) {\r\n      this.#computedContext.dependencies.forEach((dependency) =>\r\n        dependency.unsubscribe(this.#computedContext.callback),\r\n      );\r\n      this.#computedContext = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the reactive value, unsubscribing all callbacks and clearing the value\r\n   */\r\n  destroy() {\r\n    this.unsubscribeAll();\r\n    this.#value = null;\r\n  }\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport getDocument from \"./get-document.js\";\r\nimport getElementById from \"./get-element-by-id.js\";\r\nimport getWindow from \"./get-window.js\";\r\nimport modalManager from \"./modal-manager.js\";\r\nimport ReactiveValue from \"./reactive-value.js\";\r\n\r\n// TODO: handle shell + page layouts + navigation + redirects e.g. login + etc\r\n// TODO: view.navigate api + redirect api + etc\r\n\r\nclass RouterManager {\r\n  #isManaging = false;\r\n  #callbacks = new Set();\r\n  #location = null;\r\n\r\n  #isExternal(link = null) {\r\n    const href = link.getAttribute(\"href\");\r\n    return (\r\n      href.startsWith(\"http\") ||\r\n      href.startsWith(\"mailto\") ||\r\n      link.hasAttribute(\"download\") ||\r\n      link.target === \"_blank\"\r\n    );\r\n  }\r\n\r\n  #createLocation() {\r\n    const window = getWindow();\r\n    if (!window) return;\r\n\r\n    const location = window.location;\r\n    if (!location) return;\r\n\r\n    const isSpa = location.hash.startsWith(\"#/\");\r\n    if (isSpa) {\r\n      const hashParts = location.hash.split(\"#\").filter(Boolean);\r\n      const pathname = hashParts[0] || \"/\";\r\n      const search = location.search || \"\";\r\n      const hash = hashParts[1] ? \"#\" + hashParts[1] : \"\";\r\n      return new URL(`${pathname}${search}${hash}`, location.origin);\r\n    }\r\n\r\n    const pathname = location.pathname || \"/\";\r\n    const search = location.search || \"\";\r\n    const hash = location.hash || \"\";\r\n    return new URL(`${pathname}${search}${hash}`, location.origin);\r\n  }\r\n\r\n  /**\r\n   * Gets the current location URL\r\n   */\r\n  getLocation() {\r\n    return this.#location;\r\n  }\r\n\r\n  /**\r\n   * Adds a listener for route changes\r\n   */\r\n  onRoute(callback = () => {}) {\r\n    assert(callback, \"apis.routeManager.onRoute (callback) is required\");\r\n    assert(\r\n      typeof callback === \"function\",\r\n      \"apis.routeManager.onRoute (callback) must be a function\",\r\n    );\r\n\r\n    this.#callbacks.add(callback);\r\n  }\r\n\r\n  /**\r\n   * Starts managing and registers global event listeners for route management\r\n   */\r\n  manage() {\r\n    const window = getWindow();\r\n    if (!window) return;\r\n\r\n    if (this.#isManaging) {\r\n      console.warn(\"RouterManager is already managing the application\");\r\n      return;\r\n    }\r\n\r\n    this.#isManaging = true;\r\n    this.#location = new ReactiveValue(this.#createLocation());\r\n\r\n    const document = getDocument();\r\n\r\n    document.addEventListener(\"click\", (event) => {\r\n      const link = event.target.closest(\"a\");\r\n      if (!link) return;\r\n\r\n      const href = link.getAttribute(\"href\");\r\n      if (!href) return;\r\n\r\n      event.preventDefault();\r\n\r\n      if (this.#isExternal(link)) {\r\n        window.open(href, link.target);\r\n        return;\r\n      }\r\n\r\n      if (href.startsWith(\"#\") && !href.startsWith(\"#/\")) {\r\n        const id = href.replace(\"#\", \"\");\r\n        const element = getElementById(id);\r\n        if (!element) return;\r\n\r\n        window.scrollTo({\r\n          top: element.offsetTop,\r\n          behavior: \"smooth\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      let hash = \"\";\r\n\r\n      if (href.startsWith(\"#/\")) {\r\n        hash = href;\r\n      } else if (href.startsWith(\"/\")) {\r\n        hash = \"#\" + href;\r\n      } else {\r\n        hash = \"#/\" + href;\r\n      }\r\n\r\n      if (hash === window.location.hash) {\r\n        modalManager.closeModals();\r\n        return;\r\n      }\r\n\r\n      window.history.pushState({}, \"\", \"/\" + hash);\r\n      window.dispatchEvent(new Event(\"popstate\"));\r\n    });\r\n\r\n    window.addEventListener(\"popstate\", (event) => {\r\n      event.preventDefault();\r\n\r\n      this.#location.value = this.#createLocation();\r\n\r\n      // TODO: need to clear too if not belong to the current page but after close\r\n      // TODO: handle it inside modal manager???\r\n      modalManager.closeModals();\r\n      this.#callbacks.forEach((callback) => {\r\n        callback(event);\r\n      });\r\n    });\r\n\r\n    // TODO: on dom load handle second hash... and scroll to the element\r\n    // TODO: user can setup offset somehow?\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton instance of RouterManager for managing application-wide route handling\r\n * @type {RouterManager}\r\n */\r\nexport default new RouterManager();\r\n", "import assert from \"./assert.js\";\r\nimport getWindow from \"./get-window.js\";\r\n\r\n// SOURCE: https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\r\n// SOURCE: https://github.com/btholt/postcss-colorblind\r\n// SOURCE: https://www.w3schools.com/accessibility/accessibility_color_meaning.php\r\n// SOURCE: https://webaim.org/\r\n\r\nclass StateManager {\r\n  #isManaging = false;\r\n  #state = Object.freeze({\r\n    data: {},\r\n    user: {},\r\n    view: {\r\n      // TODO:... size, scroll, etc...\r\n    },\r\n  });\r\n\r\n  getState(namespace = \"\") {\r\n    assert(\r\n      typeof namespace === \"string\",\r\n      \"apis.stateManager.getState (namespace) must be a string\",\r\n    );\r\n    assert(\r\n      namespace === \"\" || [\"data\", \"user\", \"view\"].includes(namespace),\r\n      `apis.stateManager.getState (namespace) must be one of: data, user, view`,\r\n    );\r\n\r\n    return namespace ? this.#state[namespace] : this.#state;\r\n  }\r\n\r\n  setState(namespace = \"\", state = {}) {\r\n    assert(\r\n      typeof namespace === \"string\",\r\n      \"apis.stateManager.setState (namespace) must be a string\",\r\n    );\r\n    assert(\r\n      namespace === \"\" || [\"data\", \"user\", \"view\"].includes(namespace),\r\n      `apis.stateManager.setState (namespace) must be one of: data, user, view`,\r\n    );\r\n    assert(\r\n      typeof state === \"object\" && !Array.isArray(state) && state !== null,\r\n      \"apis.stateManager.setState (state) must be a non-null object\",\r\n    );\r\n\r\n    for (const key in state) {\r\n      this.#state[namespace][key] = state[key];\r\n    }\r\n    localStorage.setItem(\"__STATE__\", JSON.stringify(this.#state));\r\n  }\r\n\r\n  manage() {\r\n    const window = getWindow();\r\n    if (!window) return;\r\n\r\n    if (this.#isManaging) {\r\n      console.warn(\"RouterManager is already managing the application\");\r\n      return;\r\n    }\r\n\r\n    this.#isManaging = true;\r\n\r\n    const state = localStorage.getItem(\"__STATE__\");\r\n    if (state) {\r\n      this.#state = JSON.parse(state);\r\n    } else {\r\n      localStorage.setItem(\"__STATE__\", JSON.stringify(this.#state));\r\n    }\r\n  }\r\n}\r\n\r\nexport default new StateManager();\r\n", "import assert from \"./assert.js\";\r\nimport getDocument from \"./get-document.js\";\r\nimport resourceManager from \"./resource-manager.js\";\r\n\r\n/**\r\n * Gets a design token value from CSS variables via its key\r\n * @param {string} [key=\"\"] - The token key to retrieve\r\n * @returns {string|null} The CSS variable value or null if not in client environment\r\n * @throws {AssertionError} When key parameter is missing, not a string, or not mapped\r\n */\r\nexport default function getTokenKey(key = \"\") {\r\n  assert(key, \"apis.getTokenKey (key) is required\");\r\n  assert(\r\n    typeof key === \"string\" && key !== \"\",\r\n    \"apis.getTokenKey (key) must be a non-empty string\",\r\n  );\r\n\r\n  const resources = resourceManager.getResources();\r\n  assert(\r\n    resources.mappings?.tokenKeys[key],\r\n    `apis.getTokenKey {${key}} is not mapped`,\r\n  );\r\n\r\n  const document = getDocument();\r\n  if (!document) return null;\r\n\r\n  return `--${resources.mappings.tokenKeys[key]}`;\r\n}\r\n", "import getDocument from \"./get-document.js\";\r\nimport getTokenKey from \"./get-token-key.js\";\r\nimport getWindow from \"./get-window.js\";\r\nimport ReactiveValue from \"./reactive-value.js\";\r\nimport stateManager from \"./state-manager.js\";\r\n\r\n// TODO:\r\n// preferences: {},\r\n// permissions: {},\r\n// devices: {},\r\n// tokens: {\r\n//   accessToken: null,\r\n//   refreshToken: null,\r\n// },\r\n// profile: null,\r\n// agents: {},\r\n// guests: {},\r\n\r\nclass UserManager {\r\n  #preferences = null;\r\n\r\n  getPreferences() {\r\n    return this.#preferences;\r\n  }\r\n\r\n  #updateDomWithPreferences(newValue = {}, oldValue = {}) {\r\n    const document = getDocument();\r\n    if (!document) return;\r\n\r\n    if (newValue.colorScheme !== oldValue.colorScheme) {\r\n      if (newValue.colorScheme === \"auto\") {\r\n        const dark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n        if (dark) {\r\n          document.documentElement.classList.add(\"dm\");\r\n        } else {\r\n          document.documentElement.classList.remove(\"dm\");\r\n        }\r\n      } else if (newValue.colorScheme === \"dark\") {\r\n        document.documentElement.classList.add(\"dm\");\r\n      } else {\r\n        document.documentElement.classList.remove(\"dm\");\r\n      }\r\n    }\r\n\r\n    if (newValue.spaceSize !== oldValue.spaceSize) {\r\n      if (newValue.spaceSize === \"compact\") {\r\n        document.documentElement.style.setProperty(\r\n          getTokenKey(\"user-space-scaling\"),\r\n          0.75,\r\n        );\r\n      } else if (newValue.spaceSize === \"spacious\") {\r\n        document.documentElement.style.setProperty(\r\n          getTokenKey(\"user-space-scaling\"),\r\n          1.25,\r\n        );\r\n      } else {\r\n        document.documentElement.style.removeProperty(\r\n          getTokenKey(\"user-space-scaling\"),\r\n        );\r\n      }\r\n    }\r\n    if (newValue.textSize !== oldValue.textSize) {\r\n      if (newValue.textSize === \"small\") {\r\n        document.documentElement.style.setProperty(\r\n          getTokenKey(\"user-type-scaling\"),\r\n          0.75,\r\n        );\r\n      } else if (newValue.textSize === \"large\") {\r\n        document.documentElement.style.setProperty(\r\n          getTokenKey(\"user-type-scaling\"),\r\n          1.25,\r\n        );\r\n      } else {\r\n        document.documentElement.style.removeProperty(\r\n          getTokenKey(\"user-type-scaling\"),\r\n        );\r\n      }\r\n    }\r\n    if (newValue.cornerRadius !== oldValue.cornerRadius) {\r\n      if (newValue.cornerRadius === \"sharp\") {\r\n        document.documentElement.style.setProperty(\r\n          getTokenKey(\"user-shape-corner-radius-scaling\"),\r\n          0,\r\n        );\r\n      } else if (newValue.cornerRadius === \"round\") {\r\n        document.documentElement.style.setProperty(\r\n          getTokenKey(\"user-shape-corner-radius-scaling\"),\r\n          2,\r\n        );\r\n      } else {\r\n        document.documentElement.style.removeProperty(\r\n          getTokenKey(\"user-shape-corner-radius-scaling\"),\r\n        );\r\n      }\r\n    }\r\n    if (newValue.outlineWidth !== oldValue.outlineWidth) {\r\n      if (newValue.outlineWidth === \"thin\") {\r\n        document.documentElement.style.setProperty(\r\n          getTokenKey(\"user-shape-outline-width-scaling\"),\r\n          0.1,\r\n        );\r\n      } else if (newValue.outlineWidth === \"thick\") {\r\n        document.documentElement.style.setProperty(\r\n          getTokenKey(\"user-shape-outline-width-scaling\"),\r\n          2,\r\n        );\r\n      } else {\r\n        document.documentElement.style.removeProperty(\r\n          getTokenKey(\"user-shape-outline-width-scaling\"),\r\n        );\r\n      }\r\n    }\r\n\r\n    const filters = [];\r\n    if (newValue.colorBrightness !== 50) {\r\n      const brightness = Math.round(\r\n        ((newValue.colorBrightness - 50) / 50) * 25 + 100,\r\n      );\r\n      filters.push(`brightness(${brightness}%)`);\r\n    }\r\n    if (newValue.colorContrast !== 50) {\r\n      const contrast = Math.round(\r\n        ((newValue.colorContrast - 50) / 50) * 25 + 100,\r\n      );\r\n      filters.push(`contrast(${contrast}%)`);\r\n    }\r\n    if (newValue.colorGrayscale !== 0) {\r\n      filters.push(`grayscale(${newValue.colorGrayscale}%)`);\r\n    }\r\n    if (filters.length) {\r\n      document.documentElement.style.setProperty(\"filter\", filters.join(\" \"));\r\n    } else {\r\n      document.documentElement.style.removeProperty(\"filter\");\r\n    }\r\n\r\n    // TODO:\r\n    // if (newValue.reducedMotion !== oldValue.reducedMotion) {\r\n    //   if (newValue.reducedMotion) {\r\n    //     // TODO: update var motion-scaling to 0\r\n    //     // TODO: but smooth motion is allowed\r\n    //   } else {\r\n    //     // TODO: update var motion-scaling to 1\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  manage() {\r\n    const window = getWindow();\r\n    if (!window) return;\r\n\r\n    this.#preferences = new ReactiveValue({\r\n      languageCode: navigator.language,\r\n      reducedMotion: false, // NOTE: is prefers\r\n      reducedTransparency: false, // NOTE: is prefers\r\n      reducedData: false, // NOTE: is prefers\r\n      colorScheme: \"auto\", // NOTE: or light | dark | auto\r\n      spaceSize: \"normal\", // NOTE: compact | normal | spacious\r\n      textSize: \"medium\", // NOTE: small | medium | large\r\n      iconSize: \"medium\", // NOTE: small | medium | large\r\n      cornerRadius: \"normal\", // NOTE: sharp | normal | round\r\n      outlineWidth: \"normal\", // NOTE: thin | normal | thick\r\n      cursorStyle: \"classic\", // NOTE: or modern or custom\r\n      cursorSize: \"medium\", // NOTE: small | medium | large\r\n      scrollLines: 3, // NOTE: 1-10 or wheelLines\r\n      scrollSpeed: 1, // NOTE: 0-10 - needs custom animation\r\n      colorBrightness: 50, // NOTE: 0-100%\r\n      colorContrast: 50, // NOTE: 0-100%\r\n      colorGrayscale: 0, // NOTE: 0-100%\r\n    });\r\n\r\n    const preferences = stateManager.getState(\"user\").preferences;\r\n    this.#updateDomWithPreferences(preferences ?? this.#preferences.value);\r\n    if (preferences) this.#preferences.value = preferences;\r\n\r\n    this.#preferences.subscribe((newValue, oldValue) => {\r\n      this.#updateDomWithPreferences(newValue, oldValue);\r\n      stateManager.setState(\"user\", { preferences: newValue });\r\n    });\r\n  }\r\n}\r\n\r\nexport default new UserManager();\r\n", "import assert from \"./assert.js\";\r\nimport getWindow from \"./get-window.js\";\r\nimport ReactiveValue from \"./reactive-value.js\";\r\n\r\n// TODO: scroll, resize, focus, blur, etc\r\n// NOTE: scroll x + y vs top + left\r\n// TODO: use view state? in unified state instead? to track all state there? + router manager etc\r\n\r\nclass WindowManager {\r\n  #isManaging = false;\r\n  #size = {};\r\n  #scroll = {};\r\n\r\n  getSize() {\r\n    return this.#size;\r\n  }\r\n\r\n  getScroll() {\r\n    return this.#scroll;\r\n  }\r\n\r\n  /**\r\n   * Opens a new browser window with the specified URL, name, and options\r\n   * @param {string} url - The URL to open in the new window\r\n   * @param {string} name - The name of the new window\r\n   * @param {Object} options - Window options like size, position, and features\r\n   */\r\n  openWindow(url = \"\", name = \"\", options = {}) {\r\n    assert(\r\n      url && name,\r\n      \"apis.WindowManager.openWindow (url, name) are required\",\r\n    );\r\n    assert(\r\n      typeof url === \"string\" && url !== \"\",\r\n      \"apis.WindowManager.openWindow (url) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      typeof name === \"string\" && name !== \"\",\r\n      \"apis.WindowManager.openWindow (name) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      typeof options === \"object\" &&\r\n        !Array.isArray(options) &&\r\n        options !== null,\r\n      \"apis.WindowManager.openWindow (options) must be a non-null object\",\r\n    );\r\n\r\n    const window = getWindow();\r\n    if (!window) return;\r\n    window.open(url, name, options);\r\n  }\r\n\r\n  /**\r\n   * Closes the current browser window if running in client environment\r\n   * @returns {void}\r\n   */\r\n  closeWindow() {\r\n    const window = getWindow();\r\n    if (!window) return;\r\n    window.close(); // TODO: config?\r\n  }\r\n\r\n  manage() {\r\n    const window = getWindow();\r\n    if (!window) return;\r\n\r\n    if (this.#isManaging) {\r\n      console.warn(\"WindowManager is already managing the application\");\r\n      return;\r\n    }\r\n\r\n    this.#isManaging = true;\r\n\r\n    this.#size = new ReactiveValue({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n\r\n    this.#scroll = new ReactiveValue({\r\n      top: window.scrollY,\r\n      left: window.scrollX,\r\n    });\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      this.#size.value = {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      };\r\n    });\r\n\r\n    window.addEventListener(\"scroll\", () => {\r\n      this.#scroll.value = {\r\n        top: window.scrollY,\r\n        left: window.scrollX,\r\n      };\r\n    });\r\n  }\r\n}\r\n\r\nexport default new WindowManager();\r\n", "import assert from \"./assert.js\";\r\nimport errorManager from \"./error-manager.js\";\r\nimport getDocument from \"./get-document.js\";\r\nimport getWindow from \"./get-window.js\";\r\nimport modalManager from \"./modal-manager.js\";\r\nimport mutationObserver from \"./mutation-observer.js\";\r\nimport routeManager from \"./route-manager.js\";\r\nimport stateManager from \"./state-manager.js\";\r\nimport userManager from \"./user-manager.js\";\r\nimport windowManager from \"./window-manager.js\";\r\n\r\n/**\r\n * Manages application initialization and loading lifecycle\r\n * @class LoadManager\r\n */\r\nclass LoadManager {\r\n  #isManaging = false;\r\n  #callbacks = new Set();\r\n\r\n  /**\r\n   * Adds a callback to be executed when the DOM is loaded\r\n   * @param {Function} [callback=()=>{}] - Callback function to execute after initialization\r\n   * @throws {AssertionError} When callback parameter is missing or not a function\r\n   */\r\n  onLoad(callback = () => {}) {\r\n    assert(callback, \"apis.loadManager.onLoad (callback) is required\");\r\n    assert(\r\n      typeof callback === \"function\",\r\n      \"apis.loadManager.onLoad (callback) must be a function\",\r\n    );\r\n\r\n    this.#callbacks.add(callback);\r\n\r\n    // NOTE: if DOM is already loaded, execute immediately\r\n    const document = getDocument();\r\n    if (document && document.readyState === \"complete\") {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts managing and sets up the application when the DOM is loaded\r\n   * Initializes error handlers, mutation observers, route managers, and modal managers\r\n   */\r\n  manage() {\r\n    const window = getWindow();\r\n    if (!window) return;\r\n\r\n    if (this.#isManaging) {\r\n      console.warn(\"LoadManager is already managing the application\");\r\n      return;\r\n    }\r\n\r\n    this.#isManaging = true;\r\n\r\n    window.addEventListener(\"DOMContentLoaded\", () => {\r\n      errorManager.manage();\r\n      stateManager.manage();\r\n      userManager.manage();\r\n      routeManager.manage();\r\n      windowManager.manage();\r\n      modalManager.manage();\r\n      mutationObserver.observe();\r\n      this.#callbacks.forEach((callback) => {\r\n        callback();\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Singleton instance of LoadManager for managing application initialization\r\n * @type {LoadManager}\r\n */\r\nexport default new LoadManager();\r\n", "import assert from \"./assert.js\";\r\nimport getDocument from \"./get-document.js\";\r\n\r\n/**\r\n * Finds all elements that match a CSS selector\r\n * @param {string} [selectors=\"\"] - CSS selector string\r\n * @returns {NodeList|Array} A list of matching elements or empty array if not found or not in client environment\r\n * @throws {AssertionError} When selectors parameter is missing or not a non-empty string\r\n */\r\nexport default function querySelectorAll(selectors = \"\") {\r\n  assert(selectors, \"apis.querySelectorAll (selectors) is required\");\r\n  assert(\r\n    typeof selectors === \"string\" && selectors !== \"\",\r\n    \"apis.querySelectorAll (selectors) must be a non-empty string\",\r\n  );\r\n\r\n  const document = getDocument();\r\n  return document ? document.querySelectorAll(selectors) : [];\r\n}\r\n", "import { debounce } from \"../utils/index.js\";\r\nimport assert from \"./assert.js\";\r\nimport environment from \"./environment.js\";\r\n\r\n/**\r\n * Executes a callback when a CSS transition completes on an element\r\n * @param {HTMLElement} [element=null] - The HTML element with the transition\r\n * @param {string} [property=\"all\"] - The CSS property to monitor, or \"all\" for any property\r\n * @param {Function} [callback=()=>{}] - Function to call when the transition completes\r\n * @throws {AssertionError} When parameters are missing or invalid\r\n */\r\nexport default function requestTransitionEnd(\r\n  element = null,\r\n  property = \"all\",\r\n  callback = () => {},\r\n) {\r\n  assert(\r\n    element && property && callback,\r\n    \"apis.requestTransitionEnd (element, property, callback) are required\",\r\n  );\r\n  assert(\r\n    typeof property === \"string\" && property !== \"\",\r\n    \"apis.requestTransitionEnd (property) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof callback === \"function\",\r\n    \"apis.requestTransitionEnd (callback) must be a function\",\r\n  );\r\n\r\n  if (!environment.client) return callback();\r\n\r\n  assert(\r\n    element instanceof HTMLElement,\r\n    \"apis.requestTransitionEnd (element) must be an instance of HTMLElement\",\r\n  );\r\n\r\n  if (property === \"all\") {\r\n    const debouncedCallback = debounce(() => {\r\n      element.removeEventListener(\"transitionend\", handler);\r\n      callback();\r\n    }, 50);\r\n    const handler = () => {\r\n      debouncedCallback();\r\n    };\r\n    element.addEventListener(\"transitionend\", handler);\r\n  } else {\r\n    const handler = (event) => {\r\n      if (event.propertyName === property) {\r\n        element.removeEventListener(\"transitionend\", handler);\r\n        callback();\r\n      }\r\n    };\r\n    element.addEventListener(\"transitionend\", handler);\r\n  }\r\n}\r\n", "import assert from \"./assert.js\";\r\nimport ReactiveValue from \"./reactive-value.js\";\r\n\r\n// OPTION1: only json values are supported - replace ReactiveValue\r\n// OPTION2: if persist then transform to json with _typeof field on read/write\r\n\r\nclass StoreManager {\r\n  #stores = new Map();\r\n\r\n  addStore(name = \"\", object = {}, options = {}) {\r\n    assert(\r\n      name && object && options,\r\n      \"apis.StoreManager.addStore (name, object, options) are required\",\r\n    );\r\n    assert(\r\n      typeof name === \"string\" && name !== \"\",\r\n      \"apis.StoreManager.addStore (name) must be a non-empty string\",\r\n    );\r\n    assert(\r\n      typeof object === \"object\" && !Array.isArray(object) && object !== null,\r\n      \"apis.StoreManager.addStore (object) must be a non-null object\",\r\n    );\r\n    assert(\r\n      typeof options === \"object\" &&\r\n        !Array.isArray(options) &&\r\n        options !== null,\r\n      \"apis.StoreManager.addStore (options) must be a non-null object\",\r\n    );\r\n\r\n    if (this.#stores.has(name)) {\r\n      throw new Error(`Store with name \"${name}\" already exists`);\r\n    }\r\n\r\n    this.#stores.set(name, {\r\n      options: Object.assign(options, { persist: false }),\r\n      object: new ReactiveValue(object),\r\n    });\r\n  }\r\n\r\n  getStore(name = \"\") {\r\n    assert(name, \"apis.StoreManager.getStore (name) is required\");\r\n    assert(\r\n      typeof name === \"string\" && name !== \"\",\r\n      \"apis.StoreManager.getStore (name) must be a non-empty string\",\r\n    );\r\n\r\n    if (!this.#stores.has(name)) {\r\n      throw new Error(`Store with name \"${name}\" does not exist`);\r\n    }\r\n\r\n    return this.#stores.get(name).object;\r\n  }\r\n}\r\n\r\nexport default new StoreManager();\r\n", "import { resourceManager } from \"../apis/index.js\";\r\n\r\nexport default function getResources() {\r\n  return resourceManager.getResources();\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\n/**\r\n * Extracts reactive style properties from a style object recursively\r\n * @param {Object} style - The style object to process\r\n * @returns {Object} An object containing only the reactive style properties\r\n * @throws {Error} When required parameters are missing or invalid\r\n */\r\nexport default function getReactiveStyleProps(style = {}) {\r\n  assert(style, \"core.getReactiveStyleProps (style) is required\");\r\n  assert(\r\n    typeof style === \"object\" && !Array.isArray(style) && style !== null,\r\n    \"core.getReactiveStyleProps (style) must be a non-null object\",\r\n  );\r\n\r\n  const reactiveStyleProps = {};\r\n\r\n  for (const [key, value] of Object.entries(style)) {\r\n    if (value?.subscribe) {\r\n      reactiveStyleProps[key] = value;\r\n    }\r\n  }\r\n\r\n  return reactiveStyleProps;\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\nimport getResources from \"./get-resources.js\";\r\n\r\n/**\r\n * Determines whether a component type is a primitive component\r\n * @param {string} type - The component type to check\r\n * @returns {boolean} True if the component type is a primitive, false otherwise\r\n */\r\nexport default function isPrimitive(type = \"\") {\r\n  assert(type, \"core.isPrimitive (type) is required\");\r\n  assert(\r\n    typeof type === \"string\" && type !== \"\",\r\n    \"core.isPrimitive (type) must be a non-empty string\",\r\n  );\r\n\r\n  const resources = getResources();\r\n\r\n  assert(resources, \"core.isPrimitive {resources} is required\");\r\n  assert(\r\n    resources.renderers,\r\n    \"core.isPrimitive {resources.renderers} is required\",\r\n  );\r\n\r\n  return resources.renderers.hasOwnProperty(type);\r\n}\r\n", "/**\r\n * Extracts the current value from a reactive value object or returns the original value\r\n * @param {Object|*} value - A reactive value object or any other value\r\n * @returns {*} The current value from the reactive value object or the original value\r\n */\r\nexport default function mapReactiveValueToValue(value = null) {\r\n  // TODO: assert instanceof ReactiveValue or any other value\r\n  return value?.value ?? value;\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\nimport mapReactiveValueToValue from \"./map-reactive-value-to-value.js\";\r\n\r\n/**\r\n * Recursively extracts values from a nested object containing reactive values\r\n * @param {Object} object - The object potentially containing reactive values\r\n * @returns {Object} A new object with all reactive values replaced with their current values\r\n * @throws {Error} When required parameters are missing or invalid\r\n */\r\nexport default function mapDeepReactiveValueToValue(object = {}) {\r\n  assert(object, \"core.mapDeepReactiveValueToValue (object) is required\");\r\n  assert(\r\n    typeof object === \"object\" && !Array.isArray(object) && object !== null,\r\n    \"core.mapDeepReactiveValueToValue (object) must be a non-null object\",\r\n  );\r\n\r\n  const reactiveValueToValue = {};\r\n\r\n  for (const [key, value] of Object.entries(object)) {\r\n    if (typeof value === \"object\" && !Array.isArray(value) && value !== null) {\r\n      if (value?.subscribe) {\r\n        reactiveValueToValue[key] = mapReactiveValueToValue(value);\r\n      } else {\r\n        reactiveValueToValue[key] = mapDeepReactiveValueToValue(value);\r\n      }\r\n    } else {\r\n      reactiveValueToValue[key] = value;\r\n    }\r\n  }\r\n\r\n  return reactiveValueToValue;\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\nimport getReactiveStyleProps from \"./get-reactive-style-props.js\";\r\nimport isPrimitive from \"./is-primitive.js\";\r\nimport mapDeepReactiveValueToValue from \"./map-deep-reactive-value-to-value.js\";\r\n\r\n/**\r\n * Groups component props into different categories for processing\r\n * @param {string} type - The component type\r\n * @param {Object} props - The properties to be categorized\r\n * @returns {Object} An object containing categorized props\r\n */\r\nexport default function groupProps(type = \"\", props = {}) {\r\n  assert(type, \"core.groupProps (type) is required\");\r\n  assert(\r\n    typeof type === \"string\" && type !== \"\",\r\n    \"core.groupProps (type) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof props === \"object\" && !Array.isArray(props) && props !== null,\r\n    \"core.groupProps (props) must be a non-null object\",\r\n  );\r\n\r\n  const onEventProps = {};\r\n  const constantProps = {};\r\n  const reactiveProps = {};\r\n  let reactiveStyleProps = {};\r\n\r\n  for (const [key, value] of Object.entries(props)) {\r\n    if (key === \"style\") {\r\n      if (value?.subscribe) {\r\n        reactiveProps.style = value;\r\n      } else {\r\n        reactiveStyleProps = getReactiveStyleProps(value);\r\n        constantProps.style = Object.keys(reactiveStyleProps).length\r\n          ? mapDeepReactiveValueToValue(value)\r\n          : value;\r\n      }\r\n      continue;\r\n    }\r\n    const isEventProp = isPrimitive(type) && key.startsWith(\"on\");\r\n    const isReactiveProp = value?.subscribe;\r\n    if (isEventProp) onEventProps[key] = value;\r\n    else if (isReactiveProp) reactiveProps[key] = value;\r\n    else constantProps[key] = value;\r\n  }\r\n\r\n  return { onEventProps, constantProps, reactiveProps, reactiveStyleProps };\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\n/**\r\n * Processes and joins child elements into a single string\r\n * @param {Array<string|function>} children - Array of child elements or functions\r\n * @returns {string} Concatenated string of all child elements\r\n */\r\nexport default function getChildren(children = []) {\r\n  assert(children, \"core.getChildren (children) is required\");\r\n  assert(\r\n    Array.isArray(children) &&\r\n      children.every((child) => typeof child === \"string\"),\r\n    \"core.getChildren (children) must be an array of strings\",\r\n  );\r\n\r\n  return children\r\n    .map((child) => (typeof child === \"function\" ? child() : child))\r\n    .filter(Boolean)\r\n    .join(\"\");\r\n}\r\n", "import { assert, getMapping } from \"../apis/index.js\";\r\n\r\n/**\r\n * Creates a DOM placeholder for lazy-loaded components\r\n * @param {string} id - The unique lazy loading ID for the placeholder\r\n * @returns {string} HTML string representing a hidden span with the lazy loading ID\r\n * @throws {AssertionError} When id parameter is missing or invalid\r\n */\r\nexport default function getLazyLoadingPointer(id = \"\") {\r\n  assert(id, \"core.getLazyLoadingPointer (id) is required\");\r\n  assert(\r\n    typeof id === \"string\" && id !== \"\",\r\n    \"core.getLazyLoadingPointer (id) must be a non-empty string\",\r\n  );\r\n\r\n  const mappedKey = getMapping(\"dataAttributes\", \"lazyLoadingId\");\r\n  return `<span data-${mappedKey}=\"${id}\" hidden></span>`;\r\n}\r\n", "import { assert, getMapping } from \"../apis/index.js\";\r\n\r\n/**\r\n * Injects a lazy loading ID attribute into the first HTML tag\r\n * @param {string} html - The HTML string to modify\r\n * @param {string} id - The lazy loading ID to inject\r\n * @returns {string} The modified HTML with the injected lazy loading ID\r\n * @throws {AssertionError} When html or id parameters are missing or invalid\r\n */\r\nexport default function injectLazyLoadingId(html = \"\", id = \"\") {\r\n  assert(html && id, \"core.injectLazyLoadingId (html, id) are required\");\r\n  assert(\r\n    typeof html === \"string\" && html !== \"\",\r\n    \"core.injectLazyLoadingId (html) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof id === \"string\" && id !== \"\",\r\n    \"core.injectLazyLoadingId (id) must be a non-empty string\",\r\n  );\r\n\r\n  const mappedKey = getMapping(\"dataAttributes\", \"lazyLoadingId\");\r\n  return html.replace(/(<\\w+)/, `$1 data-${mappedKey}=\"${id}\"`);\r\n}\r\n", "import { assert, importManager } from \"../apis/index.js\";\r\n\r\n/**\r\n * Asynchronously imports a module by name using the import manager\r\n * @param {string} moduleName - The name or path of the module to import\r\n * @returns {Promise<Object>} Promise that resolves with the default export of the imported module\r\n * @throws {Error} When required parameters are missing or invalid\r\n */\r\nexport default async function importModule(moduleName = \"\") {\r\n  assert(moduleName, \"core.importModule (moduleName) is required\");\r\n  assert(\r\n    typeof moduleName === \"string\" && moduleName !== \"\",\r\n    \"core.importModule (moduleName) must be a non-empty string\",\r\n  );\r\n\r\n  return new Promise((resolve) => {\r\n    importManager.importModule(moduleName, (defaultModule) => {\r\n      resolve(defaultModule);\r\n    });\r\n  });\r\n}\r\n", "import { assert, mutationObserver } from \"../apis/index.js\";\r\n\r\n/**\r\n * Asynchronously waits for an element matching the specified selector to appear in the DOM\r\n * @param {string} selector - The CSS selector to watch for\r\n * @returns {Promise<Element>} Promise that resolves with the matching element when it appears\r\n * @throws {Error} When required parameters are missing or invalid\r\n */\r\nexport default async function waitElement(selector = \"\") {\r\n  assert(selector, \"core.waitElement (selector) is required\");\r\n  assert(\r\n    typeof selector === \"string\" && selector !== \"\",\r\n    \"core.waitElement (selector) must be a non-empty string\",\r\n  );\r\n\r\n  return new Promise((resolve) => {\r\n    const unobserve = mutationObserver.observeElement(\r\n      selector,\r\n      \"added\",\r\n      (element) => {\r\n        resolve(element);\r\n        unobserve();\r\n      },\r\n    );\r\n  });\r\n}\r\n", "import { assert, getMapping, styleManager } from \"../apis/index.js\";\r\nimport importModule from \"./import-module.js\";\r\nimport waitElement from \"./wait-element.js\";\r\n\r\n/**\r\n * Mounts a component lazily when its placeholder element appears in the DOM\r\n * @param {string} id - The unique lazy loading ID for the component\r\n * @param {string} path - The path to the component module to be imported\r\n * @param {Object} props - The props to pass to the component when rendering\r\n * @throws {AssertionError} When id, path, name, or props parameters are missing or invalid\r\n */\r\nexport default function mountLazyComponent(\r\n  id = \"\",\r\n  path = \"\",\r\n  name = \"\",\r\n  props = {},\r\n) {\r\n  assert(\r\n    id && path && name && props,\r\n    \"core.mountLazyComponent (id, path, name, props) are required\",\r\n  );\r\n  assert(\r\n    typeof id === \"string\" && id !== \"\",\r\n    \"core.mountLazyComponent (id) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof path === \"string\" && path !== \"\",\r\n    \"core.mountLazyComponent (path) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof name === \"string\" && name !== \"\",\r\n    \"core.mountLazyComponent (name) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof props === \"object\" && !Array.isArray(props) && props !== null,\r\n    \"core.mountLazyComponent (props) must be a non-null object\",\r\n  );\r\n\r\n  const mappedKey = getMapping(\"dataAttributes\", \"lazyLoadingId\");\r\n  const selector = `[data-${mappedKey}=\"${id}\"]`;\r\n  Promise.all([waitElement(selector), importModule(path)]).then(\r\n    ([element, component]) => {\r\n      element.outerHTML = styleManager.renderComponent(name, component, props);\r\n    },\r\n  );\r\n}\r\n", "import { assert, generateId, styleManager } from \"../apis/index.js\";\r\nimport getChildren from \"./get-children.js\";\r\nimport getLazyLoadingPointer from \"./get-lazy-loading-pointer.js\";\r\nimport getResources from \"./get-resources.js\";\r\nimport injectLazyLoadingId from \"./inject-lazy-loading-id.js\";\r\nimport mountLazyComponent from \"./mount-lazy-component.js\";\r\n\r\n/**\r\n * Renders a custom component with lazy loading support\r\n * @param {string} name - The component name to render\r\n * @param {Object} props - Properties to apply to the component\r\n * @param {Array<string>} children - Array of child elements\r\n * @returns {string} The rendered HTML representation of the component\r\n */\r\nexport default function renderComponent(name = \"\", props = {}, children = []) {\r\n  assert(\r\n    name && props && children,\r\n    \"core.renderComponent (name, props, children) is required\",\r\n  );\r\n  assert(\r\n    typeof name === \"string\" && name !== \"\",\r\n    \"core.renderComponent (name) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof props === \"object\" && !Array.isArray(props) && props !== null,\r\n    \"core.renderComponent (props) must be a non-null object\",\r\n  );\r\n  assert(\r\n    Array.isArray(children) &&\r\n      children.every((child) => typeof child === \"string\" && child !== \"\"),\r\n    \"core.renderComponent (children) must be an array of non-empty strings\",\r\n  );\r\n\r\n  const resources = getResources();\r\n\r\n  assert(resources, \"core.renderComponent {resources} is required\");\r\n  assert(\r\n    resources.components,\r\n    \"core.renderComponent {resources.components} is required\",\r\n  );\r\n\r\n  const component = resources.components[name]; // TODO: path or function\r\n\r\n  if (!component) {\r\n    throw new Error(`Component name \"${name}\" not found`);\r\n  }\r\n\r\n  const { loading, fallback, ...customProps } = props;\r\n  customProps.children = getChildren(children);\r\n\r\n  // TODO: later - maybe make eager default and lazy optional?\r\n  // TODO: flag that is component like effect\r\n  if (loading === \"eager\") {\r\n    return styleManager.renderComponent(name, component, customProps);\r\n  }\r\n\r\n  const lazyLoadingId = generateId();\r\n  mountLazyComponent(lazyLoadingId, component, name, customProps);\r\n\r\n  return fallback\r\n    ? injectLazyLoadingId(fallback(), lazyLoadingId)\r\n    : getLazyLoadingPointer(lazyLoadingId);\r\n}\r\n", "import { assert, getMapping } from \"../apis/index.js\";\r\n\r\n/**\r\n * Creates a DOM placeholder for control flow components\r\n * @param {string} id - The unique control flow ID for the placeholder\r\n * @returns {string} HTML string representing a hidden span with the control flow ID\r\n * @throws {AssertionError} When id parameter is missing or invalid\r\n */\r\nexport default function getControlFlowPointer(id = \"\") {\r\n  assert(id, \"core.getControlFlowPointer (id) is required\");\r\n  assert(\r\n    typeof id === \"string\" && id !== \"\",\r\n    \"core.getControlFlowPointer (id) must be a non-empty string\",\r\n  );\r\n\r\n  const mappedKey = getMapping(\"dataAttributes\", \"controlFlowId\");\r\n  return `<span data-${mappedKey}=\"${id}\" hidden></span>`;\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\n/**\r\n * Creates a unified props object combining constant and reactive props\r\n * @param {Object} context - The component context containing various properties\r\n * @returns {Object} A unified props object with all properties and metadata\r\n */\r\nexport default function getProps(context = {}) {\r\n  assert(context, \"core.getProps (context) is required\");\r\n  assert(\r\n    typeof context === \"object\" && !Array.isArray(context) && context !== null,\r\n    \"core.getProps (context) must be a non-null object\",\r\n  );\r\n\r\n  const props = {};\r\n\r\n  const { constantProps, reactiveProps, children, primitiveId, reactiveId } =\r\n    context;\r\n\r\n  for (const [key, value] of Object.entries(constantProps)) {\r\n    if (key.startsWith(\"_\")) continue;\r\n    props[key] = value;\r\n  }\r\n  for (const [key, reactiveValue] of Object.entries(reactiveProps)) {\r\n    if (key.startsWith(\"_\")) continue;\r\n    props[key] = reactiveValue.value;\r\n  }\r\n\r\n  if (primitiveId) {\r\n    props._primitiveId = primitiveId;\r\n  }\r\n  if (reactiveId) {\r\n    props._reactiveId = reactiveId;\r\n  }\r\n\r\n  props.style = props.style ?? {};\r\n  props.children = children ?? \"\";\r\n\r\n  return props;\r\n}\r\n", "import { assert, getMapping } from \"../apis/index.js\";\r\n\r\n/**\r\n * Injects a control flow ID attribute into the first HTML tag\r\n * @param {string} html - The HTML string to modify\r\n * @param {string} id - The control flow ID to inject\r\n * @returns {string} The modified HTML with the injected control flow ID\r\n * @throws {AssertionError} When html or id parameters are missing or invalid\r\n */\r\nexport default function injectControlFlowId(html = \"\", id = \"\") {\r\n  assert(html && id, \"core.injectControlFlowId (html, id) are required\");\r\n  assert(\r\n    typeof html === \"string\" && html !== \"\",\r\n    \"core.injectControlFlowId (html) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof id === \"string\" && id !== \"\",\r\n    \"core.injectControlFlowId (id) must be a non-empty string\",\r\n  );\r\n\r\n  const mappedKey = getMapping(\"dataAttributes\", \"controlFlowId\");\r\n  return html.replace(/(<\\w+)/, `$1 data-${mappedKey}=\"${id}\"`);\r\n}\r\n", "import { assert, getMapping, querySelectorAll } from \"../apis/index.js\";\r\nimport getControlFlowPointer from \"./get-control-flow-pointer.js\";\r\nimport getProps from \"./get-props.js\";\r\nimport injectControlFlowId from \"./inject-control-flow-id.js\";\r\n\r\n// TODO: maybe first key/index and then item\r\n\r\n/**\r\n * Renders content by iterating over numbers, strings, arrays, or objects\r\n * @param {Object} context - The context object containing component information\r\n * @returns {string} The HTML representation of the iterated content\r\n */\r\nexport default function renderIterationPrimitive(context = {}) {\r\n  assert(\r\n    typeof context === \"object\" && !Array.isArray(context) && context !== null,\r\n    \"core.renderIterationPrimitive (context) must be a non-null object\",\r\n  );\r\n\r\n  let current = null;\r\n\r\n  const renderIteration = () => {\r\n    const { value, render, fallback } = getProps(context);\r\n\r\n    const isEmpty =\r\n      value === null ||\r\n      value === undefined ||\r\n      (typeof value === \"number\" && value <= 0) ||\r\n      (typeof value === \"string\" && value.length === 0) ||\r\n      (Array.isArray(value) && value.length === 0) ||\r\n      (value instanceof Set && value.size === 0) ||\r\n      (value instanceof Map && value.size === 0) ||\r\n      (typeof value === \"object\" &&\r\n        value !== null &&\r\n        !(value instanceof Set) &&\r\n        !(value instanceof Map) &&\r\n        Object.keys(value).length === 0);\r\n\r\n    if (isEmpty) {\r\n      if (current === \"empty\") return;\r\n      current = \"empty\";\r\n      return fallback\r\n        ? injectControlFlowId(fallback(), context.controlFlowId)\r\n        : getControlFlowPointer(context.controlFlowId);\r\n    }\r\n\r\n    current = null;\r\n    const children = [];\r\n\r\n    if (typeof value === \"number\") {\r\n      for (let count = 1; count <= value; count++) {\r\n        children.push(render(count));\r\n      }\r\n    } else if (typeof value === \"string\") {\r\n      for (const char of value) {\r\n        children.push(render(char));\r\n      }\r\n    } else if (Array.isArray(value)) {\r\n      for (const [index, item] of value.entries()) {\r\n        children.push(render(item, index));\r\n      }\r\n    } else if (value instanceof Set) {\r\n      let index = 0;\r\n      for (const item of value) {\r\n        children.push(render(item, index++));\r\n      }\r\n    } else if (value instanceof Map) {\r\n      for (const [key, item] of value.entries()) {\r\n        children.push(render(item, key));\r\n      }\r\n    } else if (typeof value === \"object\") {\r\n      for (const [key, item] of Object.entries(value)) {\r\n        children.push(render(item, key));\r\n      }\r\n    }\r\n\r\n    return children\r\n      .map((child) => injectControlFlowId(child, context.controlFlowId))\r\n      .join(\"\");\r\n  };\r\n\r\n  if (context.reactiveProps.value) {\r\n    const unsubscribe = context.reactiveProps.value.subscribe((newValue) => {\r\n      const mappedKey = getMapping(\"dataAttributes\", \"controlFlowId\");\r\n      const elements = querySelectorAll(\r\n        `[data-${mappedKey}=\"${context.controlFlowId}\"]`,\r\n      );\r\n      if (!elements.length) {\r\n        unsubscribe();\r\n        return;\r\n      }\r\n      const html = renderIteration();\r\n      if (html) {\r\n        elements[0].outerHTML = html;\r\n        // NOTE: maybe add Array.from inside querySelectorAll - check if other methods exist\r\n        Array.from(elements)\r\n          .slice(1)\r\n          .forEach((element) => element.remove());\r\n      }\r\n    });\r\n  }\r\n\r\n  return renderIteration();\r\n}\r\n", "import { assert, getMapping } from \"../apis/index.js\";\r\n\r\n/**\r\n * Creates a DOM placeholder for reactive components\r\n * @param {string} id - The unique reactive ID for the placeholder\r\n * @returns {string} HTML string representing a hidden span with the reactive ID\r\n * @throws {AssertionError} When id parameter is missing or invalid\r\n */\r\nexport default function getReactivePointer(id = \"\") {\r\n  assert(id, \"core.getReactivePointer (id) is required\");\r\n  assert(\r\n    typeof id === \"string\" && id !== \"\",\r\n    \"core.getReactivePointer (id) must be a non-empty string\",\r\n  );\r\n\r\n  const mappedKey = getMapping(\"dataAttributes\", \"reactiveId\");\r\n  return `<span data-${mappedKey}=\"${id}\" hidden></span>`;\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\n/**\r\n * Creates an SVG use element reference to an icon in a sprite sheet\r\n * @param {string} name - The icon name/ID to reference in the sprite sheet\r\n * @returns {string} HTML string for the SVG use element referencing the icon\r\n * @throws {Error} When the name parameter is missing or invalid\r\n */\r\nexport default function getIcon(name = \"placeholder\") {\r\n  assert(name, \"core.getIcon (name) is required\");\r\n  assert(\r\n    typeof name === \"string\" && name !== \"\",\r\n    \"core.getIcon (name) must be a non-empty string\",\r\n  );\r\n\r\n  return `<use xlink:href=\"#${name}\"></use>`;\r\n}\r\n", "// TODO: needs testing\r\n\r\nimport { assert } from \"../apis/index.js\";\r\n\r\n/**\r\n * Merges two style objects with special handling for arrays and nested objects\r\n * @param {Object} propsStyle - The base style object\r\n * @param {Object} variantStyle - The style object to merge into the base\r\n * @returns {Object} The merged style object\r\n * @throws {Error} When required parameters are missing or invalid\r\n */\r\nexport default function getMergedStyle(propsStyle = {}, variantStyle = {}) {\r\n  assert(\r\n    propsStyle && variantStyle,\r\n    \"core.getMergedStyle (propsStyle, variantStyle) is required\",\r\n  );\r\n  assert(\r\n    typeof propsStyle === \"object\" &&\r\n      !Array.isArray(propsStyle) &&\r\n      propsStyle !== null,\r\n    \"core.getMergedStyle (propsStyle) must be a non-null object\",\r\n  );\r\n  assert(\r\n    typeof variantStyle === \"object\" &&\r\n      !Array.isArray(variantStyle) &&\r\n      variantStyle !== null,\r\n    \"core.getMergedStyle (variantStyle) must be a non-null object\",\r\n  );\r\n\r\n  const style = variantStyle;\r\n\r\n  for (const key in propsStyle) {\r\n    if (key === \"variant\" || key === \"color\") {\r\n      continue;\r\n    }\r\n    style[key] = propsStyle[key];\r\n  }\r\n\r\n  return style;\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\n/**\r\n * Maps area type to their corresponding semantic ARIA roles\r\n * @param {string} type - The area type to convert to a semantic ARIA role\r\n * @returns {string} The corresponding semantic ARIA role name, or empty string if no mapping exists\r\n * @throws {Error} When the role parameter is not a string\r\n */\r\nexport default function getRoleFromType(type = \"\") {\r\n  assert(\r\n    typeof type === \"string\",\r\n    \"core.getRoleFromType (type) must be a string\",\r\n  );\r\n\r\n  return type.replace(/-/g, \"\").toLowerCase();\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\n/**\r\n * Maps area type to their corresponding semantic HTML tags\r\n * @param {string} type - The area type to convert to a semantic HTML tag\r\n * @returns {string} The corresponding semantic HTML tag name, or empty string if no mapping exists\r\n * @throws {Error} When the role parameter is not a string\r\n */\r\nexport default function getTagFromType(type = \"\") {\r\n  assert(\r\n    typeof type === \"string\",\r\n    \"core.getTagFromType (type) must be a string\",\r\n  );\r\n\r\n  switch (type) {\r\n    case \"header\":\r\n    case \"footer\":\r\n    case \"main\":\r\n    case \"aside\":\r\n    case \"article\":\r\n    case \"section\":\r\n      return type;\r\n    case \"navigation\":\r\n      return \"nav\";\r\n    case \"list\":\r\n      return \"ul\";\r\n    case \"list-item\":\r\n      return \"li\";\r\n    default:\r\n      return \"div\";\r\n  }\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\nimport getResources from \"./get-resources.js\";\r\n\r\n/**\r\n * Retrieves a translated text template and substitutes values for placeholders\r\n * @param {string} key - The translation key to look up in the locales dictionary\r\n * @param {Object} values - Object containing values to substitute into the template\r\n * @returns {string} The translated and interpolated text\r\n * @throws {Error} When required parameters are missing or invalid\r\n */\r\nexport default function getTextTranslation(key = \"\", values = {}) {\r\n  assert(key && values, \"core.getTextTranslation (key, values) are required\");\r\n  assert(\r\n    typeof key === \"string\" && key !== \"\",\r\n    \"core.getTextTranslation (key) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof values === \"object\" && !Array.isArray(values) && values !== null,\r\n    \"core.getTextTranslation (values) must be a non-null object\",\r\n  );\r\n\r\n  const resources = getResources();\r\n\r\n  assert(resources, \"core.getTextTranslation {resources} is required\");\r\n  assert(\r\n    resources.locales,\r\n    \"core.getTextTranslation {resources.locales} is required\",\r\n  );\r\n  assert(\r\n    resources.locales.text,\r\n    \"core.getTextTranslation {resources.locales.text} is required\",\r\n  );\r\n\r\n  const template = resources.locales.text[key];\r\n  if (!template) return key; // TODO: what to return here\r\n\r\n  return template.replace(/\\{\\{(\\w+)\\}\\}/g, (_, slot) => values[slot] ?? \"\");\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\nimport getResources from \"./get-resources.js\";\r\n\r\n/**\r\n * Retrieves a utility CSS class name from the mappings configuration\r\n * @param {string} name - The utility class name key to look up\r\n * @returns {string} The corresponding CSS class name from the mapping, or empty string if not found\r\n * @throws {Error} When required parameters are missing or invalid\r\n */\r\nexport default function getUtilityClass(name = \"\") {\r\n  assert(name, \"core.getUtilityClass (name) is required\");\r\n  assert(\r\n    typeof name === \"string\" && name !== \"\",\r\n    \"core.getUtilityClass (name) must be a non-empty string\",\r\n  );\r\n\r\n  const resources = getResources();\r\n\r\n  assert(resources, \"core.getUtilityClass {resources} is required\");\r\n  assert(\r\n    resources.mappings,\r\n    \"core.getUtilityClass {resources.mappings} is required\",\r\n  );\r\n  assert(\r\n    resources.mappings.classNames,\r\n    \"core.getUtilityClass {resources.mappings.classNames} is required\",\r\n  );\r\n\r\n  return resources.mappings.classNames[name] ?? \"\";\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\n\r\nexport default function setClassAttribute(\r\n  element = null,\r\n  classes = \"\",\r\n  key = \"\",\r\n) {\r\n  assert(\r\n    element && classes && key,\r\n    \"core.setClassAttribute (element, classes, key) are required\",\r\n  );\r\n  assert(\r\n    element instanceof HTMLElement,\r\n    \"core.setClassAttribute (element) must be an HTMLElement\",\r\n  );\r\n  assert(\r\n    typeof classes === \"string\" && classes !== \"\",\r\n    \"core.setClassAttribute (classes) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof key === \"string\" && key !== \"\",\r\n    \"core.setStyleAttribute (key) must be a non-empty string\",\r\n  );\r\n\r\n  const lastClass = element.classList[element.classList.length - 1];\r\n  const isStyledClass = lastClass.startsWith(\"s-\");\r\n\r\n  const classAttribute = `${classes}${isStyledClass ? ` ${lastClass}` : \"\"}`;\r\n  element.setAttribute(\"class\", classAttribute);\r\n}\r\n", "import { assert, getMapping } from \"../apis/index.js\";\r\n\r\nexport default function setStyleAttribute(\r\n  element = null,\r\n  styles = \"\",\r\n  key = \"\",\r\n) {\r\n  assert(\r\n    element && styles && key,\r\n    \"core.setStyleAttribute (element, styles, key) are required\",\r\n  );\r\n  assert(\r\n    element instanceof HTMLElement,\r\n    \"core.setStyleAttribute (element) must be an HTMLElement\",\r\n  );\r\n  assert(\r\n    typeof styles === \"string\" && styles !== \"\",\r\n    \"core.setStyleAttribute (styles) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof key === \"string\" && key !== \"\",\r\n    \"core.setStyleAttribute (key) must be a non-empty string\",\r\n  );\r\n\r\n  const styleProps = styles.split(\";\").reduce((result, style) => {\r\n    const [styleKey, styleValue] = style.split(\":\");\r\n    if (styleKey && styleValue) {\r\n      result[styleKey.trim()] = styleValue.trim();\r\n    }\r\n    return result;\r\n  }, {});\r\n\r\n  const mappedKey = getMapping(\"styleProperties\", key);\r\n\r\n  if (mappedKey && styleProps[mappedKey]) {\r\n    element.style[mappedKey] = styleProps[mappedKey];\r\n  }\r\n}\r\n", "import {\r\n  createElement,\r\n  eventManager,\r\n  generateId,\r\n  getActiveElement,\r\n  getClosingHtmlTag,\r\n  getClosingSvgTag,\r\n  getColorValue,\r\n  getDefinitions,\r\n  getElementById,\r\n  getMapping,\r\n  getOpeningHtmlTag,\r\n  getOpeningSvgTag,\r\n  getStyleAttributes,\r\n  getTokenValue,\r\n  getVar,\r\n  getWindow,\r\n  querySelector,\r\n  querySelectorAll,\r\n} from \"../apis/index.js\";\r\nimport getChildren from \"./get-children.js\";\r\nimport getIcon from \"./get-icon.js\";\r\nimport getMergedStyle from \"./get-merged-style.js\";\r\nimport getRoleFromType from \"./get-role-from-type.js\";\r\nimport getTagFromType from \"./get-tag-from-type.js\";\r\nimport getTextTranslation from \"./get-text-translation.js\";\r\nimport getUtilityClass from \"./get-utility-class.js\";\r\nimport setClassAttribute from \"./set-class-attribute.js\";\r\nimport setStyleAttribute from \"./set-style-attribute.js\";\r\n\r\n// TODO: maybe just merge everything into one object and export it!\r\n\r\nexport default {\r\n  register: {\r\n    createElement,\r\n    eventManager,\r\n    getActiveElement,\r\n    getElementById,\r\n    getWindow,\r\n    querySelector,\r\n    querySelectorAll,\r\n    getMapping,\r\n    getDefinitions,\r\n    getVar,\r\n    getTokenValue,\r\n    getColorValue,\r\n  },\r\n  render: {\r\n    generateId,\r\n    getChildren,\r\n    getClosingHtmlTag,\r\n    getClosingSvgTag,\r\n    getIcon,\r\n    getMergedStyle,\r\n    getOpeningHtmlTag,\r\n    getOpeningSvgTag,\r\n    getTagFromType,\r\n    getRoleFromType,\r\n    getTextTranslation,\r\n    getUtilityClass,\r\n    getStyleAttributes,\r\n  },\r\n  rerender: {\r\n    getMapping,\r\n    getStyleAttributes,\r\n    getMergedStyle,\r\n    setClassAttribute,\r\n    setStyleAttribute,\r\n  },\r\n};\r\n", "import { assert, getMapping, querySelector } from \"../apis/index.js\";\r\nimport getProps from \"./get-props.js\";\r\nimport getReactivePointer from \"./get-reactive-pointer.js\";\r\nimport utils from \"./renderer-utils.js\";\r\n\r\n// NOTE: don't do element.outerHTML inside renderers, it looses injections - lint later!\r\n// TODO: hide or hidden prop?\r\n\r\n/**\r\n * Renders a primitive component with reactivity support\r\n * @param {Object} context - The context object containing component information\r\n * @param {Object} renderer - The renderer object used to render the component\r\n * @returns {string} The HTML representation of the rendered primitive component\r\n */\r\nexport default function renderPrimitive(context = {}, renderer = {}) {\r\n  assert(\r\n    typeof context === \"object\" && !Array.isArray(context) && context !== null,\r\n    \"core.renderPrimitive (context) must be a non-null object\",\r\n  );\r\n  assert(\r\n    typeof renderer === \"object\" &&\r\n      !Array.isArray(renderer) &&\r\n      renderer !== null,\r\n    \"core.renderPrimitive (renderer) must be a non-null object\",\r\n  );\r\n\r\n  let html = \"\";\r\n\r\n  const props = getProps(context);\r\n\r\n  if (props.hide) {\r\n    html = getReactivePointer(context.reactiveId);\r\n  } else {\r\n    html = renderer.render(props, utils.render);\r\n  }\r\n\r\n  Object.keys(context.reactiveProps).forEach((key) => {\r\n    const reactiveValue = context.reactiveProps[key];\r\n    const unsubscribe = reactiveValue.subscribe((newValue, oldValue) => {\r\n      const mappedKey = getMapping(\"dataAttributes\", \"reactiveId\");\r\n      const element = querySelector(\r\n        `[data-${mappedKey}=\"${context.reactiveId}\"]`,\r\n      );\r\n      if (!element) {\r\n        unsubscribe();\r\n        return;\r\n      }\r\n      if (key === \"hide\") {\r\n        if (newValue) {\r\n          element.outerHTML = getReactivePointer(context.reactiveId);\r\n        } else {\r\n          const props = getProps(context);\r\n          element.outerHTML = renderer.render(props, utils.render);\r\n        }\r\n        return;\r\n      }\r\n      const change = { key, newValue, oldValue };\r\n      props[key] = newValue;\r\n      renderer.rerender?.(element, change, props, utils.rerender);\r\n    });\r\n  });\r\n\r\n  Object.keys(context.reactiveStyleProps).forEach((key) => {\r\n    const reactiveStyle = context.reactiveStyleProps[key];\r\n    const unsubscribe = reactiveStyle.subscribe((newValue, oldValue) => {\r\n      const mappedKey = getMapping(\"dataAttributes\", \"reactiveId\");\r\n      const element = querySelector(\r\n        `[data-${mappedKey}=\"${context.reactiveId}\"]`,\r\n      );\r\n      if (!element) {\r\n        unsubscribe();\r\n        return;\r\n      }\r\n      const change = { key: \"style\", styleKey: key, newValue, oldValue };\r\n      props.style[key] = newValue;\r\n      renderer.rerender?.(element, change, props, utils.rerender);\r\n    });\r\n  });\r\n\r\n  if (context.primitiveId) {\r\n    renderer.register(context.primitiveId, utils.register);\r\n  }\r\n\r\n  return html;\r\n}\r\n", "import { assert, getMapping, querySelector } from \"../apis/index.js\";\r\nimport getControlFlowPointer from \"./get-control-flow-pointer.js\";\r\nimport getProps from \"./get-props.js\";\r\nimport injectControlFlowId from \"./inject-control-flow-id.js\";\r\n\r\n/**\r\n * Renders content conditionally based on a value\r\n * @param {Object} context - The context object containing component information\r\n * @returns {string} The HTML representation of the selected content\r\n */\r\nexport default function renderSelectionPrimitive(context = {}) {\r\n  assert(\r\n    typeof context === \"object\" && !Array.isArray(context) && context !== null,\r\n    \"core.renderIterationPrimitive (context) must be a non-null object\",\r\n  );\r\n\r\n  let current = null;\r\n\r\n  const renderSelection = () => {\r\n    const { value, render, fallback } = getProps(context);\r\n\r\n    const selected = render(value);\r\n    if (selected) {\r\n      if (current === `selected-${value}`) return;\r\n      current = `selected-${value}`;\r\n      return injectControlFlowId(selected, context.controlFlowId);\r\n    } else if (fallback) {\r\n      if (current === \"fallback\") return;\r\n      current = \"fallback\";\r\n      return injectControlFlowId(fallback(), context.controlFlowId);\r\n    } else {\r\n      if (current === \"pointer\") return;\r\n      current = \"pointer\";\r\n      return getControlFlowPointer(context.controlFlowId);\r\n    }\r\n  };\r\n\r\n  if (context.reactiveProps.value) {\r\n    const unsubscribe = context.reactiveProps.value.subscribe(() => {\r\n      const mappedKey = getMapping(\"dataAttributes\", \"controlFlowId\");\r\n      const element = querySelector(\r\n        `[data-${mappedKey}=\"${context.controlFlowId}\"]`,\r\n      );\r\n      if (!element) {\r\n        unsubscribe();\r\n        return;\r\n      }\r\n      const html = renderSelection();\r\n      if (html) {\r\n        element.outerHTML = html;\r\n      }\r\n    });\r\n  }\r\n\r\n  return renderSelection();\r\n}\r\n", "import { assert, eventManager, generateId } from \"../apis/index.js\";\r\nimport getResources from \"./get-resources.js\";\r\nimport groupProps from \"./group-props.js\";\r\nimport isPrimitive from \"./is-primitive.js\";\r\nimport renderComponent from \"./render-component.js\";\r\nimport renderIterationPrimitive from \"./render-iteration-primitive.js\";\r\nimport renderPrimitive from \"./render-primitive.js\";\r\nimport renderSelectionPrimitive from \"./render-selection-primitive.js\";\r\n\r\n/**\r\n * Creates a component with specified type, props, and children\r\n * @param {string} type - The component type to create\r\n * @param {Object} props - The properties to apply to the component\r\n * @param {...string} children - The child elements of the component\r\n * @returns {string} The rendered HTML representation of the component\r\n * @throws {Error} When required parameters are missing or invalid, or when component type is not supported\r\n */\r\nexport default function createComponent(type = \"\", props = null, ...children) {\r\n  props = props ?? {};\r\n  children = children.filter(Boolean);\r\n\r\n  assert(\r\n    type && props && children,\r\n    \"core.createComponent (type, props, children) is required\",\r\n  );\r\n  assert(\r\n    typeof type === \"string\" && type !== \"\",\r\n    \"core.createComponent (type) must be a non-empty string\",\r\n  );\r\n  assert(\r\n    typeof props === \"object\" && !Array.isArray(props) && props !== null,\r\n    \"core.createComponent (props) must be a non-null object\",\r\n  );\r\n  assert(\r\n    Array.isArray(children) &&\r\n      children.every((child) => typeof child === \"string\"),\r\n    \"core.createComponent (children) must be an array of strings\",\r\n  );\r\n\r\n  const isControlFlow = type === \"selection\" || type === \"iteration\";\r\n  if (!isPrimitive(type) && !isControlFlow) {\r\n    return renderComponent(type, props, children);\r\n  }\r\n\r\n  const { onEventProps, constantProps, reactiveProps, reactiveStyleProps } =\r\n    groupProps(type, props);\r\n  const isReactive =\r\n    Object.keys(onEventProps).length ||\r\n    Object.keys(reactiveProps).length ||\r\n    Object.keys(reactiveStyleProps).length;\r\n\r\n  const context = {\r\n    onEventProps,\r\n    constantProps,\r\n    reactiveProps,\r\n    reactiveStyleProps,\r\n    children,\r\n  };\r\n\r\n  if (isControlFlow) {\r\n    context.controlFlowId = generateId();\r\n    if (type === \"selection\") return renderSelectionPrimitive(context);\r\n    if (type === \"iteration\") return renderIterationPrimitive(context);\r\n  }\r\n\r\n  if (isReactive) {\r\n    context.reactiveId = generateId();\r\n    Object.entries(onEventProps).forEach(([key, value]) => {\r\n      const eventType = key.charAt(2).toLowerCase() + key.slice(3);\r\n      eventManager.addLocalEvent(eventType, context.reactiveId, value);\r\n    });\r\n  }\r\n\r\n  const resources = getResources();\r\n\r\n  assert(resources, \"core.createComponent {resources} is required\");\r\n  assert(\r\n    resources.renderers,\r\n    \"core.createComponent {resources.renderers} is required\",\r\n  );\r\n\r\n  const renderer = resources.renderers[type];\r\n  if (renderer) {\r\n    if (renderer.register) context.primitiveId = generateId();\r\n    return renderPrimitive(context, renderer);\r\n  }\r\n\r\n  throw new Error(`Primitive component type \"${type}\" not supported`);\r\n}\r\n", "import { assert } from \"../apis/index.js\";\r\nimport getChildren from \"./get-children.js\";\r\n\r\n/**\r\n * Creates a fragment by combining child elements without a wrapper element\r\n * @param {Array<string>} children - Array of child elements as strings\r\n * @returns {string} The concatenated string of all child elements\r\n */\r\nexport default function createFragment(children = []) {\r\n  assert(children, \"core.createFragment (children) is required\");\r\n  assert(\r\n    Array.isArray(children) &&\r\n      children.every((child) => typeof child === \"string\" && child !== \"\"),\r\n    \"core.createFragment (children) must be an array of non-empty strings\",\r\n  );\r\n\r\n  return getChildren(children);\r\n}\r\n", "import { assert, getElementById, importManager } from \"../apis/index.js\";\r\nimport getResources from \"./get-resources.js\";\r\n\r\n/**\r\n * Renders the layouts of the application\r\n */\r\nexport default function renderLayouts() {\r\n  const resources = getResources();\r\n\r\n  assert(resources, \"core.renderLayouts {resources} is required\");\r\n  assert(\r\n    resources.components,\r\n    \"core.renderLayouts {resources.components} is required\",\r\n  );\r\n\r\n  if (!Object.keys(resources.components).length) return;\r\n\r\n  const shellContainer = getElementById(\"sc\");\r\n\r\n  const moduleNames = [\r\n    resources.components[\"shell-layout\"],\r\n    resources.components[\"page-layout\"],\r\n  ];\r\n\r\n  const pageContainer = \"<div id='pc'></div>\";\r\n\r\n  importManager.importModules(moduleNames, ([shellLayout, pageLayout]) => {\r\n    let html = \"\";\r\n\r\n    if (shellLayout) {\r\n      html = shellLayout({\r\n        children: pageLayout\r\n          ? pageLayout({ children: pageContainer })\r\n          : pageContainer,\r\n      });\r\n    } else if (pageLayout) {\r\n      html = pageLayout({ children: pageContainer });\r\n    } else {\r\n      html = pageContainer;\r\n    }\r\n\r\n    shellContainer.innerHTML = html;\r\n  });\r\n}\r\n", "import {\r\n  assert,\r\n  getElementById,\r\n  importManager,\r\n  routeManager,\r\n} from \"../apis/index.js\";\r\nimport getResources from \"./get-resources.js\";\r\nimport waitElement from \"./wait-element.js\";\r\n\r\n/**\r\n * Renders the current page based on the URL path\r\n */\r\nexport default function renderPage() {\r\n  const resources = getResources();\r\n\r\n  assert(resources, \"core.renderPage {resources} is required\");\r\n  assert(resources.pages, \"core.renderPage {resources.pages} is required\");\r\n  assert(\r\n    resources.pages.routes,\r\n    \"core.renderPage {resources.pages.routes} is required\",\r\n  );\r\n  assert(\r\n    resources.pages.errors,\r\n    \"core.renderPage {resources.pages.errors} is required\",\r\n  );\r\n\r\n  if (!Object.keys(resources.pages).length) return;\r\n\r\n  const pageContainer = getElementById(\"pc\");\r\n\r\n  const pathname = routeManager.getLocation().value.pathname;\r\n  const moduleName =\r\n    resources.pages.routes?.[pathname] ??\r\n    resources.pages.errors?.notFound ??\r\n    \"\";\r\n\r\n  if (pageContainer) {\r\n    importManager.importModule(moduleName, (page) => {\r\n      pageContainer.innerHTML = page();\r\n    });\r\n  } else {\r\n    waitElement(\"#pc\").then((pageContainer) => {\r\n      importManager.importModule(moduleName, (page) => {\r\n        pageContainer.innerHTML = page();\r\n      });\r\n    });\r\n  }\r\n}\r\n", "import { loadManager, routeManager } from \"../apis/index.js\";\r\nimport renderLayouts from \"./render-layouts.js\";\r\nimport renderPage from \"./render-page.js\";\r\n\r\n/**\r\n * Renders the application with load manager and route manager\r\n * @returns {void}\r\n */\r\nexport default function render() {\r\n  loadManager.manage();\r\n  loadManager.onLoad(() => {\r\n    renderLayouts();\r\n    renderPage();\r\n    routeManager.onRoute(renderPage);\r\n  });\r\n}\r\n", "import { resourceManager } from \"../apis/index.js\";\r\n\r\nexport default function setResources(resources = {}) {\r\n  resourceManager.setResources(resources);\r\n}\r\n", "import createComponent from \"./create-component.js\";\r\nimport createFragment from \"./create-fragment.js\";\r\nimport render from \"./render.js\";\r\nimport setResources from \"./set-resources.js\";\r\n\r\n/**\r\n * Exports a frozen object with the main public API functions\r\n * @module core\r\n * @property {Function} createComponent - Creates components with reactive support\r\n * @property {Function} createFragment - Creates document fragments without wrapper elements\r\n * @property {Function} render - Renders components to the DOM\r\n * @property {Function} setResources - Sets the core resources\r\n */\r\nexport default Object.freeze({\r\n  createComponent,\r\n  createFragment,\r\n  render,\r\n  setResources,\r\n});\r\n", "/**\r\n * Data module for storage, fetching, and state management\r\n * @module data\r\n * @description Provides APIs for data storage, fetching, and state management.\r\n * Future implementations will include:\r\n * - Local and remote storage\r\n * - Query, mutation, and subscription capabilities\r\n * - Data loading states and error handling\r\n */\r\n\r\n// TODO: storages, local-remote, query, mutation, subscription, etc\r\n// TODO: data, error, loading, refetch, cancel, etc\r\n\r\nexport default Object.freeze({});\r\n", "import { userManager } from \"../apis/index.js\";\r\n\r\nexport default function getPreferences() {\r\n  return userManager.getPreferences();\r\n}\r\n", "/**\r\n * Handles the user login process\r\n * @returns {void}\r\n * @todo Implement login functionality\r\n */\r\nexport default function login() {\r\n  // TODO:\r\n}\r\n", "/**\r\n * Handles the user logout process\r\n * @returns {void}\r\n * @todo Implement logout functionality\r\n */\r\nexport default function logout() {\r\n  // TODO:\r\n}\r\n", "import getPreferences from \"./get-preferences.js\";\r\nimport login from \"./login.js\";\r\nimport logout from \"./logout.js\";\r\n\r\n/**\r\n * User module that handles user-related functionality.\r\n * @module user\r\n * @exports {Object} Frozen object containing user management functions\r\n * @property {Function} login - Handles the user login process\r\n * @property {Function} logout - Handles the user logout process\r\n */\r\nexport default Object.freeze({\r\n  login,\r\n  logout,\r\n  preferences: getPreferences,\r\n});\r\n", "import { assert, modalManager, windowManager } from \"../apis/index.js\";\r\n\r\nexport default function close(name = \"\") {\r\n  assert(name, \"view.close (name) is required\");\r\n  assert(\r\n    typeof name === \"string\" && name !== \"\",\r\n    \"view.close (name) must be a non-empty string\",\r\n  );\r\n\r\n  if (name === \"window\") {\r\n    windowManager.closeWindow();\r\n    return;\r\n  }\r\n  modalManager.closeModal(name);\r\n}\r\n", "import {\r\n  assert,\r\n  generateId,\r\n  modalManager,\r\n  ReactiveValue,\r\n  requestTransitionEnd,\r\n} from \"../apis/index.js\";\r\n\r\n// NOTE: type basic or full screen https://m3.material.io/components/dialogs/overview\r\n// TODO: get motion tokens\r\n\r\nexport default function createDialog(component = () => {}, options = {}) {\r\n  assert(\r\n    component && options,\r\n    \"view.createDialog (component, options) are required\",\r\n  );\r\n  assert(\r\n    typeof component === \"function\",\r\n    \"view.createDialog (component) must be a function\",\r\n  );\r\n  assert(\r\n    typeof options === \"object\" && !Array.isArray(options) && options !== null,\r\n    \"view.createDialog (options) must be a non-null object\",\r\n  );\r\n\r\n  const { name = \"\", type = \"basic\" } = options;\r\n  const id = name ? name.trim().toLowerCase() : generateId(4);\r\n\r\n  const container = {\r\n    data: { modalId: id },\r\n    aria: {\r\n      role: \"dialog\",\r\n      // labelledby: \"dialog-title\",\r\n      // describedby: \"dialog-desc\",\r\n    },\r\n    style: {\r\n      size: \"full\",\r\n      displayType: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      opacity: 0,\r\n      transformations: [\r\n        {\r\n          function: \"scale\",\r\n          arguments: [\"0.8\"],\r\n        },\r\n      ],\r\n      transitions: [\r\n        {\r\n          property: \"opacity\",\r\n          duration: \"short-1\",\r\n          easing: \"standard\",\r\n        },\r\n        {\r\n          property: \"transformations\",\r\n          duration: \"short-3\",\r\n          easing: \"standard\",\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const opened = new ReactiveValue(false);\r\n\r\n  const open = () => {\r\n    const element = modalManager.mountModal(id);\r\n    element.style.opacity = \"1\";\r\n    element.style.transform = \"scale(1)\";\r\n    opened.value = true;\r\n  };\r\n\r\n  const close = () => {\r\n    const element = modalManager.getModal(id);\r\n    if (!element) return;\r\n    opened.value = false;\r\n    modalManager.unmountModal(id, (end) => {\r\n      // TODO: utils for style element like that!\r\n      element.style.opacity = \"0\";\r\n      element.style.transform = \"scale(0.8)\";\r\n      requestTransitionEnd(element, \"transform\", () => {\r\n        end(element);\r\n      });\r\n    });\r\n  };\r\n\r\n  modalManager.setModal(container, component, { open, close });\r\n\r\n  return { opened, open, close };\r\n}\r\n", "// TODO: for 1 field? like form?\r\n\r\nexport default function createField(name, options = {}) {}\r\n", "import { ReactiveValue } from \"../apis/index.js\";\r\n\r\nexport default function createState(initialValue = null) {\r\n  return new ReactiveValue(initialValue);\r\n}\r\n", "import createReactiveValue from \"./create-state.js\";\r\n\r\n// SOURCE: https://developer.mozilla.org/en-US/docs/Web/API/FormData\r\n// SOURCE: https://www.react-hook-form.com/api/useform/\r\n// SOURCE: https://react.dev/reference/react/useActionState\r\n\r\nexport default function createForm(schema = {}, defaultValues = {}) {\r\n  // TODO: assert...\r\n  const status = createReactiveValue(\"idle\"); // TODO: or state\r\n  const errors = createReactiveValue({});\r\n  const values = createReactiveValue(defaultValues);\r\n\r\n  values.subscribe((newValues, oldValues) => {\r\n    // NOTE: maybe deep equal instead json\r\n    if (JSON.stringify(newValues) !== JSON.stringify(oldValues)) {\r\n      status.value = \"dirty\"; // NOTE: new variable or not?\r\n    } else {\r\n      status.value = \"idle\";\r\n    }\r\n    // TODO: validateValue(key, value)\r\n  });\r\n\r\n  const validateValue = (key, value) => {\r\n    if (schema[key].required && !value) {\r\n      errors.value[key] = \"This field is required\";\r\n    } else {\r\n      delete errors.value[key];\r\n    }\r\n  };\r\n\r\n  const validateValues = () => {\r\n    for (const [key, value] of Object.entries(schema)) {\r\n      if (value.required && !values.value[key]) {\r\n        errors.value[key] = \"This field is required\";\r\n      } else {\r\n        delete errors.value[key];\r\n      }\r\n    }\r\n  };\r\n\r\n  const submit = (callback) => {\r\n    status.value = \"validating\";\r\n    validateValues();\r\n    if (Object.keys(errors.value).length) {\r\n      status.value = \"error\";\r\n      return;\r\n    }\r\n    status.value = \"submitting\";\r\n    if (callback instanceof Promise) {\r\n      callback\r\n        .then(() => {\r\n          status.value = \"success\";\r\n        })\r\n        .catch(() => {\r\n          status.value = \"error\";\r\n        });\r\n    } else {\r\n      status.value = \"success\";\r\n      callback(values.value);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    values.value = defaultValues;\r\n    errors.value = {};\r\n    status.value = \"idle\";\r\n  };\r\n\r\n  return {\r\n    status,\r\n    values,\r\n    submit,\r\n    reset,\r\n  };\r\n}\r\n", "import {\r\n  assert,\r\n  generateId,\r\n  modalManager,\r\n  ReactiveValue,\r\n  requestTransitionEnd,\r\n} from \"../apis/index.js\";\r\n\r\n// NOTE: https://m3.material.io/components/navigation-drawer/guidelines#86ff751b-e510-4428-bfb2-cc5bf9206bb8\r\n// NOTE: navigation drawers are essentially a list contained within a side sheet! - NO NEED TO CREATE DRAWER!\r\n\r\n// THIS: opacity on modal item than container -> open a sheet + click on item with dialog...\r\n// ...should display the menu below but add opacity on top... THIS STACK EXAMPLE! + better to handle animations\r\n\r\n// NOTE: type standard or modal https://m3.material.io/components/side-sheets/overview\r\n// TODO: state? opening, closing, etc?\r\n// TODO: get motion tokens\r\n// TODO: standard type + standard container - how? new html container?\r\n\r\nexport default function createSheet(component = () => {}, options = {}) {\r\n  assert(\r\n    component && options,\r\n    \"view.createSheet (component, options) are required\",\r\n  );\r\n  assert(\r\n    typeof component === \"function\",\r\n    \"view.createSheet (component) must be a function\",\r\n  );\r\n  assert(\r\n    typeof options === \"object\" && !Array.isArray(options) && options !== null,\r\n    \"view.createSheet (options) must be a non-null object\",\r\n  );\r\n\r\n  const { name = \"\", side = \"left\", type = \"modal\" } = options;\r\n  const id = name ? name.trim().toLowerCase() : generateId(4);\r\n\r\n  let offScreenTransform;\r\n  switch (side) {\r\n    case \"right\":\r\n      offScreenTransform = {\r\n        function: \"translateX\",\r\n        arguments: [\"100%\"],\r\n      };\r\n      break;\r\n    case \"top\":\r\n      offScreenTransform = {\r\n        function: \"translateY\",\r\n        arguments: [\"-100%\"],\r\n      };\r\n      break;\r\n    case \"bottom\":\r\n      offScreenTransform = {\r\n        function: \"translateY\",\r\n        arguments: [\"100%\"],\r\n      };\r\n      break;\r\n    case \"left\":\r\n    default:\r\n      offScreenTransform = {\r\n        function: \"translateX\",\r\n        arguments: [\"-100%\"],\r\n      };\r\n      break;\r\n  }\r\n\r\n  // TODO: make a util for this + filters + transitions etc = util.effects.js file...\r\n  const getTransform = (transform = {}) => {\r\n    const func = transform.function;\r\n    const args = transform.arguments.join(\", \");\r\n    return `${func}(${args})`;\r\n  };\r\n\r\n  const container = {\r\n    data: { modalId: id },\r\n    aria: { role: type === \"modal\" ? \"dialog\" : \"complementary\" },\r\n    style: {\r\n      position: \"fixed\",\r\n      inset: 0,\r\n      // backdropFilters: [\r\n      //   {\r\n      //     function: \"blur\",\r\n      //     arguments: [0.5],\r\n      //   },\r\n      // ],\r\n      transformations: [offScreenTransform],\r\n      transitions: [\r\n        {\r\n          property: \"transformations\",\r\n          duration: \"short-3\",\r\n          easing: \"standard\", // NOTE: on close doesn't transition correctly!\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const opened = new ReactiveValue(false);\r\n\r\n  const open = () => {\r\n    const element = modalManager.mountModal(id);\r\n    element.style.transform =\r\n      side === \"top\" || side === \"bottom\" ? \"translateY(0)\" : \"translateX(0)\";\r\n    opened.value = true;\r\n  };\r\n\r\n  const close = () => {\r\n    const element = modalManager.getModal(id);\r\n    if (!element) return;\r\n    opened.value = false;\r\n    modalManager.unmountModal(id, (end) => {\r\n      // TODO: utils for style element like that!\r\n      element.style.transform = getTransform(offScreenTransform);\r\n      requestTransitionEnd(element, \"transform\", () => {\r\n        end(element);\r\n      });\r\n    });\r\n  };\r\n\r\n  modalManager.setModal(container, component, { open, close });\r\n\r\n  return { opened, open, close };\r\n}\r\n", "import { configManager } from \"../apis/index.js\";\r\n\r\nexport default function getConfig() {\r\n  return configManager.getConfig();\r\n}\r\n", "import { routeManager } from \"../apis/index.js\";\r\n\r\nexport default function getLocation() {\r\n  return routeManager.getLocation();\r\n}\r\n", "import { windowManager } from \"../apis/index.js\";\r\n\r\nexport default function getScroll() {\r\n  return windowManager.getScroll();\r\n}\r\n", "import { windowManager } from \"../apis/index.js\";\r\n\r\nexport default function getSize() {\r\n  return windowManager.getSize();\r\n}\r\n", "import { storeManager } from \"../apis/index.js\";\r\n\r\nexport default function getStore(name = \"\") {\r\n  return storeManager.getStore(name);\r\n}\r\n", "import { routeManager } from \"../apis/index.js\";\r\n\r\nexport default function navigateTo(pathname = \"\") {\r\n  assert(pathname, \"view.navigateTo (pathname) is required\");\r\n  assert(\r\n    typeof pathname === \"string\" && pathname !== \"\",\r\n    \"view.navigateTo (pathname) must be a non-empty string\",\r\n  );\r\n\r\n  const location = routeManager.getLocation();\r\n  location.value.pathname = pathname;\r\n}\r\n", "import { assert, modalManager, windowManager } from \"../apis/index.js\";\r\n\r\nexport default function open(name = \"\") {\r\n  assert(name, \"view.open (name) is required\");\r\n  assert(\r\n    typeof name === \"string\" && name !== \"\",\r\n    \"view.open (name) must be a non-empty string\",\r\n  );\r\n\r\n  if (name === \"window\") {\r\n    windowManager.openWindow();\r\n    return;\r\n  }\r\n  modalManager.openModal(name);\r\n}\r\n", "export default function resizeBy(options = {}) {}\r\n", "export default function resizeTo(options = {}) {}\r\n", "export default function scrollBy(options = {}) {}\r\n", "export default function scrollInto(options = {}) {}\r\n", "import { assert, getElementById, getWindow } from \"../apis/index.js\";\r\n\r\nexport default function scrollTo(options = {}) {\r\n  assert(\r\n    typeof options === \"object\" && !Array.isArray(options) && options !== null,\r\n    \"view.scrollTo (options) must be a non-null object\",\r\n  );\r\n  assert(\r\n    options.target === undefined || typeof options.target === \"string\",\r\n    \"view.scrollTo (options.target) must be a string\",\r\n  );\r\n  assert(\r\n    options.behavior === undefined ||\r\n      (typeof options.behavior === \"string\" &&\r\n        (options.behavior === \"auto\" ||\r\n          options.behavior === \"smooth\" ||\r\n          options.behavior === \"instant\")),\r\n    \"view.scrollTo (options.behavior) must be 'auto', 'smooth' or 'instant' string\",\r\n  );\r\n  assert(\r\n    options.top === undefined || typeof options.top === \"number\",\r\n    \"view.scrollTo (options.top) must be a number\",\r\n  );\r\n  assert(\r\n    options.left === undefined || typeof options.left === \"number\",\r\n    \"view.scrollTo (options.left) must be a number\",\r\n  );\r\n\r\n  const target = options.target || \"\";\r\n  const behavior = options.behavior || \"auto\";\r\n  const top = options.top || 0;\r\n  const left = options.left || 0;\r\n\r\n  if (target) {\r\n    const element = getElementById(target);\r\n    if (element) {\r\n      element.scrollTo({ top, left, behavior });\r\n    }\r\n  } else {\r\n    const window = getWindow();\r\n    window.scrollTo({ top, left, behavior });\r\n  }\r\n}\r\n", "import { configManager, storeManager } from \"../apis/index.js\";\r\n\r\nexport default function setup() {\r\n  return {\r\n    setConfig: (config) => configManager.setConfig(config),\r\n    addStore: (name, object, options) =>\r\n      storeManager.addStore(name, object, options),\r\n  };\r\n}\r\n", "import close from \"./close.js\";\r\nimport createDialog from \"./create-dialog.js\";\r\nimport createField from \"./create-field.js\";\r\nimport createForm from \"./create-form.js\";\r\nimport createSheet from \"./create-sheet.js\";\r\nimport createState from \"./create-state.js\";\r\nimport getConfig from \"./get-config.js\";\r\nimport getLocation from \"./get-location.js\";\r\nimport getScroll from \"./get-scroll.js\";\r\nimport getSize from \"./get-size.js\";\r\nimport getStore from \"./get-store.js\";\r\nimport navigateTo from \"./navigate-to.js\";\r\nimport open from \"./open.js\";\r\nimport resizeBy from \"./resize-by.js\";\r\nimport resizeTo from \"./resize-to.js\";\r\nimport scrollBy from \"./scroll-by.js\";\r\nimport scrollInto from \"./scroll-into.js\";\r\nimport scrollTo from \"./scroll-to.js\";\r\nimport setup from \"./setup.js\";\r\n\r\n// TODO: animate for multiple elements by name/id defined?\r\n// TODO: transition?\r\n// TODO: e.g. page animations or transitions with 1 timeline and add multiple elements\r\n// TODO: window management etc - open or part of navigate?\r\n// TODO: view state e.g. active element, cursor (maybe belongs to user both active + cursor if need live collaboration), etc\r\n// TODO: device events? here or on user.device?\r\n\r\nexport default Object.freeze({\r\n  setup,\r\n  open, // TODO: const modal = view.modal() + modal.open() + modal.close()??\r\n  close, // TODO: const window = view.window() + window.open() + window.close()??\r\n  navigateTo, // TODO: rename to location() or route() + location.navigate()\r\n  scrollTo,\r\n  scrollBy,\r\n  scrollInto,\r\n  resizeTo,\r\n  resizeBy,\r\n  state: createState,\r\n  sheet: createSheet,\r\n  dialog: createDialog,\r\n  form: createForm,\r\n  field: createField,\r\n  config: getConfig,\r\n  store: getStore,\r\n  size: getSize,\r\n  scroll: getScroll,\r\n  location: getLocation,\r\n});\r\n", "import core from \"../modules/core/index.js\";\r\nimport data from \"../modules/data/index.js\";\r\nimport user from \"../modules/user/index.js\";\r\nimport utils from \"../modules/utils/index.js\";\r\nimport view from \"../modules/view/index.js\";\r\n\r\nwindow.__STUDIO__ = Object.freeze({\r\n  core,\r\n  data,\r\n  user,\r\n  utils,\r\n  view,\r\n});\r\n"],
  "mappings": "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",
  "names": ["AssertionError", "message", "assert", "condition", "message", "AssertionError", "ConfigManager", "#config", "object", "config_manager_default", "environment_default", "getDocument", "environment_default", "createElement", "tag", "assert", "document", "getDocument", "getWindow", "environment_default", "ErrorManager", "#isManaging", "#callbacks", "callback", "window", "getWindow", "msg", "src", "ln", "cl", "err", "error", "event", "error_manager_default", "ResourceManager", "#resources", "resources", "assert", "key", "resource_manager_default", "getMapping", "namespace", "key", "assert", "resources", "resource_manager_default", "querySelector", "selectors", "assert", "document", "getDocument", "DelegatedMutationObserver", "#addedElements", "#removedElements", "#attributes", "#getKey", "selector", "callback", "#findElement", "node", "assert", "#emitElementEvent", "eventType", "primitiveId", "handler", "event_manager_default", "event", "reactiveId", "child", "#clearElementEvents", "#isEligibleToUnmount", "querySelector", "effect", "key", "document", "getDocument", "observer", "mutations", "mutation", "element", "target", "attributeName", "attributeValue", "mutation_observer_default", "DelegatedResizeObserver", "#registry", "#debounceTimers", "id", "handler", "assert", "observer", "entries", "entry", "width", "height", "selector", "getMapping", "unobserve", "mutation_observer_default", "element", "timerId", "resize_observer_default", "EventManager", "#eventTypes", "#captureEventTypes", "#documentEventTypes", "#events", "#getPrimitiveId", "event", "assert", "mappedKey", "getMapping", "#getReactiveId", "#getReactiveEventValue", "type", "id", "#isChildOf", "parent", "child", "node", "#getEventListener", "getWindow", "getDocument", "targetElement", "handler", "primitiveId", "reactiveId", "#initializeEvent", "#registerEvent", "document", "documentEventType", "#unregisterEvent", "resize_observer_default", "event_manager_default", "generateId", "size", "assert", "alphabet", "randomValues", "id", "i", "getActiveElement", "document", "getDocument", "activeElement", "getClosingHtmlTag", "tag", "assert", "getClosingSvgTag", "tag", "assert", "getVar", "key", "assert", "resources", "resource_manager_default", "getColorValue", "color", "opacity", "assert", "getVar", "getComputedStyle", "element", "assert", "window", "getWindow", "getComputedStyleProperty", "element", "property", "assert", "style", "getComputedStyle", "getDefinitions", "namespace", "resources", "resource_manager_default", "getElementById", "id", "assert", "document", "getDocument", "getAriaAttributes", "aria", "assert", "attributes", "key", "value", "getControlAttributes", "control", "assert", "attributes", "key", "value", "getDataAttributes", "data", "assert", "attributes", "key", "value", "mappedKey", "getMapping", "convertCamelToKebabCase", "camelCase", "assert", "match", "debounce", "callback", "delay", "assert", "timer", "args", "getObjectSize", "object", "assert", "debugState", "state", "state_manager_default", "size", "getObjectSize", "utils_default", "convertCamelToKebabCase", "debounce", "debugState", "getPxValue", "value", "assert", "getSpaceValue", "size", "assert", "resources", "resource_manager_default", "getVar", "createMurmurHash", "key", "seed", "assert", "remainder", "bytes", "h1", "c1", "c2", "i", "k1", "createShortHash", "hash", "length", "assert", "alphabet", "shortHash", "i", "generateClassName", "cssBlock", "assert", "murmurHash", "createMurmurHash", "createShortHash", "StyleManager", "name", "component", "props", "assert", "html", "declarations", "document", "getDocument", "cssBlock", "className", "generateClassName", "style", "style_manager_default", "getStyleAttributes", "style", "type", "part", "assert", "attributes", "classes", "styles", "utilityClasses", "specialUtilityClasses", "inlineStyle", "resources", "resource_manager_default", "classNames", "styleProperties", "key", "value", "dimensions", "getPxValue", "func", "args", "getSpaceValue", "mappedKey", "convertedKey", "convertCamelToKebabCase", "parts", "getColorValue", "backgroundImagesList", "backgroundImage", "textSize", "transformationsList", "transformation", "filtersList", "filter", "transitionsList", "transition", "property", "duration", "getVar", "easing", "name", "style_manager_default", "className", "getAttributes", "struct", "assert", "attributes", "getDataAttributes", "getControlAttributes", "getAriaAttributes", "styleAttributes", "getStyleAttributes", "getOpeningHtmlTag", "tag", "struct", "assert", "html", "attributes", "getAttributes", "key", "value", "getOpeningSvgTag", "tag", "attributes", "assert", "html", "key", "value", "getTokenValue", "key", "assert", "resources", "resource_manager_default", "document", "getDocument", "property", "getComputedStyleProperty", "ImportManager", "#cache", "moduleName", "callback", "assert", "module", "error", "moduleNames", "name", "promises", "modules", "import_manager_default", "ModalManager", "#isManaging", "#modals", "#modalContainerId", "#shellContainerId", "document", "getDocument", "event", "modalContainer", "getElementById", "element", "id", "assert", "mappedKey", "getMapping", "querySelector", "container", "component", "handlers", "modal", "getColorValue", "exists", "html", "getOpeningHtmlTag", "getClosingHtmlTag", "#unmountModalEnd", "callback", "modal_manager_default", "cloneObject", "object", "assert", "computeStack", "createComputedValue", "computeFn", "assert", "derived", "context", "initialValue", "ReactiveValue", "MUTATORS", "createProxyValue", "object", "onGet", "onSet", "root", "handler", "target", "property", "value", "constructorName", "args", "oldRoot", "cloneObject", "result", "TEMPORAL_STRUCTURES", "isTemporal", "isPrimitive", "#initial", "#value", "#callbacks", "#computedContext", "#cloneValue", "#createValue", "top", "newValue", "oldValue", "callback", "computedContext", "dependency", "RouterManager", "#isManaging", "#callbacks", "#location", "#isExternal", "link", "href", "#createLocation", "window", "getWindow", "location", "hashParts", "pathname", "search", "hash", "callback", "assert", "ReactiveValue", "getDocument", "event", "id", "element", "getElementById", "modal_manager_default", "route_manager_default", "StateManager", "#isManaging", "#state", "namespace", "assert", "state", "key", "getWindow", "state_manager_default", "getTokenKey", "key", "assert", "resources", "resource_manager_default", "getDocument", "UserManager", "#preferences", "#updateDomWithPreferences", "newValue", "oldValue", "document", "getDocument", "getTokenKey", "filters", "brightness", "contrast", "getWindow", "ReactiveValue", "preferences", "state_manager_default", "user_manager_default", "WindowManager", "#isManaging", "#size", "#scroll", "url", "name", "options", "assert", "window", "getWindow", "ReactiveValue", "window_manager_default", "LoadManager", "#isManaging", "#callbacks", "callback", "assert", "document", "getDocument", "window", "getWindow", "error_manager_default", "state_manager_default", "user_manager_default", "route_manager_default", "window_manager_default", "modal_manager_default", "mutation_observer_default", "load_manager_default", "querySelectorAll", "selectors", "assert", "document", "getDocument", "requestTransitionEnd", "element", "property", "callback", "assert", "environment_default", "debouncedCallback", "debounce", "handler", "event", "StoreManager", "#stores", "name", "object", "options", "assert", "ReactiveValue", "store_manager_default", "getResources", "resource_manager_default", "getReactiveStyleProps", "style", "assert", "reactiveStyleProps", "key", "value", "isPrimitive", "type", "assert", "resources", "getResources", "mapReactiveValueToValue", "value", "mapDeepReactiveValueToValue", "object", "assert", "reactiveValueToValue", "key", "value", "mapReactiveValueToValue", "groupProps", "type", "props", "assert", "onEventProps", "constantProps", "reactiveProps", "reactiveStyleProps", "key", "value", "getReactiveStyleProps", "mapDeepReactiveValueToValue", "isEventProp", "isPrimitive", "isReactiveProp", "getChildren", "children", "assert", "child", "getLazyLoadingPointer", "id", "assert", "getMapping", "injectLazyLoadingId", "html", "id", "assert", "mappedKey", "getMapping", "importModule", "moduleName", "assert", "resolve", "import_manager_default", "defaultModule", "waitElement", "selector", "assert", "resolve", "unobserve", "mutation_observer_default", "element", "mountLazyComponent", "id", "path", "name", "props", "assert", "selector", "getMapping", "waitElement", "importModule", "element", "component", "style_manager_default", "renderComponent", "name", "props", "children", "assert", "child", "resources", "getResources", "component", "loading", "fallback", "customProps", "getChildren", "style_manager_default", "lazyLoadingId", "generateId", "mountLazyComponent", "injectLazyLoadingId", "getLazyLoadingPointer", "getControlFlowPointer", "id", "assert", "getMapping", "getProps", "context", "assert", "props", "constantProps", "reactiveProps", "children", "primitiveId", "reactiveId", "key", "value", "reactiveValue", "injectControlFlowId", "html", "id", "assert", "mappedKey", "getMapping", "renderIterationPrimitive", "context", "assert", "current", "renderIteration", "value", "render", "fallback", "getProps", "injectControlFlowId", "getControlFlowPointer", "children", "count", "char", "index", "item", "key", "child", "unsubscribe", "newValue", "mappedKey", "getMapping", "elements", "querySelectorAll", "html", "element", "getReactivePointer", "id", "assert", "getMapping", "getIcon", "name", "assert", "getMergedStyle", "propsStyle", "variantStyle", "assert", "style", "key", "getRoleFromType", "type", "assert", "getTagFromType", "type", "assert", "getTextTranslation", "key", "values", "assert", "resources", "getResources", "template", "_", "slot", "getUtilityClass", "name", "assert", "resources", "getResources", "setClassAttribute", "element", "classes", "key", "assert", "lastClass", "isStyledClass", "classAttribute", "setStyleAttribute", "element", "styles", "key", "assert", "styleProps", "result", "style", "styleKey", "styleValue", "mappedKey", "getMapping", "renderer_utils_default", "createElement", "event_manager_default", "getActiveElement", "getElementById", "getWindow", "querySelector", "querySelectorAll", "getMapping", "getDefinitions", "getVar", "getTokenValue", "getColorValue", "generateId", "getChildren", "getClosingHtmlTag", "getClosingSvgTag", "getIcon", "getMergedStyle", "getOpeningHtmlTag", "getOpeningSvgTag", "getTagFromType", "getRoleFromType", "getTextTranslation", "getUtilityClass", "getStyleAttributes", "setClassAttribute", "setStyleAttribute", "renderPrimitive", "context", "renderer", "assert", "html", "props", "getProps", "getReactivePointer", "renderer_utils_default", "key", "unsubscribe", "newValue", "oldValue", "mappedKey", "getMapping", "element", "querySelector", "change", "renderSelectionPrimitive", "context", "assert", "current", "renderSelection", "value", "render", "fallback", "getProps", "selected", "injectControlFlowId", "getControlFlowPointer", "unsubscribe", "mappedKey", "getMapping", "element", "querySelector", "html", "createComponent", "type", "props", "children", "assert", "child", "isControlFlow", "isPrimitive", "renderComponent", "onEventProps", "constantProps", "reactiveProps", "reactiveStyleProps", "groupProps", "isReactive", "context", "generateId", "renderSelectionPrimitive", "renderIterationPrimitive", "key", "value", "eventType", "event_manager_default", "resources", "getResources", "renderer", "renderPrimitive", "createFragment", "children", "assert", "child", "getChildren", "renderLayouts", "resources", "getResources", "assert", "shellContainer", "getElementById", "moduleNames", "pageContainer", "import_manager_default", "shellLayout", "pageLayout", "html", "renderPage", "resources", "getResources", "assert", "pageContainer", "getElementById", "pathname", "route_manager_default", "moduleName", "import_manager_default", "page", "waitElement", "render", "load_manager_default", "renderLayouts", "renderPage", "route_manager_default", "setResources", "resources", "resource_manager_default", "core_default", "createComponent", "createFragment", "render", "setResources", "data_default", "getPreferences", "user_manager_default", "login", "logout", "user_default", "login", "logout", "getPreferences", "close", "name", "assert", "window_manager_default", "modal_manager_default", "createDialog", "component", "options", "assert", "name", "type", "id", "generateId", "container", "opened", "ReactiveValue", "open", "element", "modal_manager_default", "close", "end", "requestTransitionEnd", "createField", "name", "options", "createState", "initialValue", "ReactiveValue", "createForm", "schema", "defaultValues", "status", "createState", "errors", "values", "newValues", "oldValues", "validateValue", "key", "value", "validateValues", "callback", "createSheet", "component", "options", "assert", "name", "side", "type", "id", "generateId", "offScreenTransform", "getTransform", "transform", "func", "args", "container", "opened", "ReactiveValue", "open", "element", "modal_manager_default", "close", "end", "requestTransitionEnd", "getConfig", "config_manager_default", "getLocation", "route_manager_default", "getScroll", "window_manager_default", "getSize", "window_manager_default", "getStore", "name", "store_manager_default", "navigateTo", "pathname", "location", "route_manager_default", "open", "name", "assert", "window_manager_default", "modal_manager_default", "resizeBy", "options", "resizeTo", "options", "scrollBy", "options", "scrollInto", "options", "scrollTo", "options", "assert", "target", "behavior", "top", "left", "element", "getElementById", "getWindow", "setup", "config", "config_manager_default", "name", "object", "options", "store_manager_default", "view_default", "setup", "open", "close", "navigateTo", "scrollTo", "scrollBy", "scrollInto", "resizeTo", "resizeBy", "createState", "createSheet", "createDialog", "createForm", "createField", "getConfig", "getStore", "getSize", "getScroll", "getLocation", "core_default", "data_default", "user_default", "utils_default", "view_default"]
}
